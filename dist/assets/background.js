chrome.runtime.onInstalled.addListener(async a => { if (a.reason === "install" && (chrome.storage.sync.set({ presentModal: !0, toggleState: !0, toggleNavState: !0, toggleHomeFeedState: !0, toggleHomeFeedStateLives: !1, toggleHomeFeedStatePremieres: !1, toggleSubscriptionFeedState: !0, toggleSubscriptionFeedStateLives: !1, toggleSubscriptionFeedStatePremieres: !1, toggleTrendingFeedState: !0, toggleSearchState: !0, toggleRecommendedState: !0, toggleTabState: !0, toggleHomeTabState: !0, toggleTurboState: !1, toggleRegularState: !0, toggleNotificationState: !0 }).catch(() => { console.log("[STORAGE] Could not set storage item") }), chrome.tabs.query({ url: ["https://www.youtube.com/*", "https://m.youtube.com/*"] }, function (e) { e.forEach(t => { chrome.tabs.reload(t.id) }) }), chrome.action.setBadgeBackgroundColor({ color: "#ed5a64" }), chrome.action.setBadgeText({ text: "1" })), a.reason === "update") { const e = ["toggleState", "toggleNavState", "toggleHomeFeedState", "toggleHomeFeedStateLives", "toggleHomeFeedStatePremieres", "toggleSubscriptionFeedState", "toggleSubscriptionFeedStateLives", "toggleSubscriptionFeedStatePremieres", "toggleTrendingFeedState", "toggleSearchState", "toggleRecommendedState", "toggleTabState", "toggleHomeTabState", "toggleTurboState", "toggleRegularState", "toggleNotificationState"], t = await chrome.storage.sync.get(e); for (const o of e) (!(o in t) || t[o] === void 0) && await chrome.storage.sync.set({ [o]: !1 }); chrome.storage.sync.set({ presentModal: !0 }).catch(() => { console.log("[STORAGE] Could not set storage item") }), chrome.action.setBadgeBackgroundColor({ color: "#ed5a64" }), chrome.action.setBadgeText({ text: "1" }) } }); chrome.runtime.onMessage.addListener(function (a, e, t) { chrome.tabs.query({ url: ["https://www.youtube.com/*", "https://m.youtube.com/*"] }, function (o) { o.forEach(g => { chrome.tabs.sendMessage(g.id, a).catch(() => { }) }) }) });
