function _mergeNamespaces(n2, m2) {
  for (var i2 = 0; i2 < m2.length; i2++) {
    const e2 = m2[i2];
    if (typeof e2 !== "string" && !Array.isArray(e2)) {
      for (const k2 in e2) {
        if (k2 !== "default" && !(k2 in n2)) {
          const d2 = Object.getOwnPropertyDescriptor(e2, k2);
          if (d2) {
            Object.defineProperty(n2, k2, d2.get ? d2 : {
              enumerable: true,
              get: () => e2[k2]
            });
          }
        }
      }
    }
  }
  return Object.freeze(Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }));
}
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node2 of mutation.addedNodes) {
        if (node2.tagName === "LINK" && node2.rel === "modulepreload")
          processPreload(node2);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity)
      fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy)
      fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous")
      fetchOpts.credentials = "omit";
    else
      fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var f2 = n2.default;
  if (typeof f2 == "function") {
    var a2 = function a3() {
      if (this instanceof a3) {
        var args = [null];
        args.push.apply(args, arguments);
        var Ctor = Function.bind.apply(f2, args);
        return new Ctor();
      }
      return f2.apply(this, arguments);
    };
    a2.prototype = f2.prototype;
  } else
    a2 = {};
  Object.defineProperty(a2, "__esModule", { value: true });
  Object.keys(n2).forEach(function(k2) {
    var d2 = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a2, k2, d2.get ? d2 : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a2;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$e = Symbol.for("react.element"), n$f = Symbol.for("react.portal"), p$9 = Symbol.for("react.fragment"), q$4 = Symbol.for("react.strict_mode"), r$j = Symbol.for("react.profiler"), t$f = Symbol.for("react.provider"), u$6 = Symbol.for("react.context"), v$5 = Symbol.for("react.forward_ref"), w$3 = Symbol.for("react.suspense"), x$3 = Symbol.for("react.memo"), y$2 = Symbol.for("react.lazy"), z$3 = Symbol.iterator;
function A$3(a2) {
  if (null === a2 || "object" !== typeof a2)
    return null;
  a2 = z$3 && a2[z$3] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var B$2 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$4 = Object.assign, D$3 = {};
function E$2(a2, b2, e2) {
  this.props = a2;
  this.context = b2;
  this.refs = D$3;
  this.updater = e2 || B$2;
}
E$2.prototype.isReactComponent = {};
E$2.prototype.setState = function(a2, b2) {
  if ("object" !== typeof a2 && "function" !== typeof a2 && null != a2)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a2, b2, "setState");
};
E$2.prototype.forceUpdate = function(a2) {
  this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
};
function F$1() {
}
F$1.prototype = E$2.prototype;
function G$2(a2, b2, e2) {
  this.props = a2;
  this.context = b2;
  this.refs = D$3;
  this.updater = e2 || B$2;
}
var H$2 = G$2.prototype = new F$1();
H$2.constructor = G$2;
C$4(H$2, E$2.prototype);
H$2.isPureReactComponent = true;
var I$2 = Array.isArray, J$1 = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$2 = { key: true, ref: true, __self: true, __source: true };
function M$2(a2, b2, e2) {
  var d2, c2 = {}, k2 = null, h2 = null;
  if (null != b2)
    for (d2 in void 0 !== b2.ref && (h2 = b2.ref), void 0 !== b2.key && (k2 = "" + b2.key), b2)
      J$1.call(b2, d2) && !L$2.hasOwnProperty(d2) && (c2[d2] = b2[d2]);
  var g2 = arguments.length - 2;
  if (1 === g2)
    c2.children = e2;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    c2.children = f2;
  }
  if (a2 && a2.defaultProps)
    for (d2 in g2 = a2.defaultProps, g2)
      void 0 === c2[d2] && (c2[d2] = g2[d2]);
  return { $$typeof: l$e, type: a2, key: k2, ref: h2, props: c2, _owner: K$1.current };
}
function N$4(a2, b2) {
  return { $$typeof: l$e, type: a2.type, key: b2, ref: a2.ref, props: a2.props, _owner: a2._owner };
}
function O$2(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === l$e;
}
function escape(a2) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a2.replace(/[=:]/g, function(a3) {
    return b2[a3];
  });
}
var P$3 = /\/+/g;
function Q$1(a2, b2) {
  return "object" === typeof a2 && null !== a2 && null != a2.key ? escape("" + a2.key) : b2.toString(36);
}
function R$3(a2, b2, e2, d2, c2) {
  var k2 = typeof a2;
  if ("undefined" === k2 || "boolean" === k2)
    a2 = null;
  var h2 = false;
  if (null === a2)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a2.$$typeof) {
          case l$e:
          case n$f:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a2, c2 = c2(h2), a2 = "" === d2 ? "." + Q$1(h2, 0) : d2, I$2(c2) ? (e2 = "", null != a2 && (e2 = a2.replace(P$3, "$&/") + "/"), R$3(c2, b2, e2, "", function(a3) {
      return a3;
    })) : null != c2 && (O$2(c2) && (c2 = N$4(c2, e2 + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P$3, "$&/") + "/") + a2)), b2.push(c2)), 1;
  h2 = 0;
  d2 = "" === d2 ? "." : d2 + ":";
  if (I$2(a2))
    for (var g2 = 0; g2 < a2.length; g2++) {
      k2 = a2[g2];
      var f2 = d2 + Q$1(k2, g2);
      h2 += R$3(k2, b2, e2, f2, c2);
    }
  else if (f2 = A$3(a2), "function" === typeof f2)
    for (a2 = f2.call(a2), g2 = 0; !(k2 = a2.next()).done; )
      k2 = k2.value, f2 = d2 + Q$1(k2, g2++), h2 += R$3(k2, b2, e2, f2, c2);
  else if ("object" === k2)
    throw b2 = String(a2), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b2 ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b2) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$2(a2, b2, e2) {
  if (null == a2)
    return a2;
  var d2 = [], c2 = 0;
  R$3(a2, d2, "", "", function(a3) {
    return b2.call(e2, a3, c2++);
  });
  return d2;
}
function T$2(a2) {
  if (-1 === a2._status) {
    var b2 = a2._result;
    b2 = b2();
    b2.then(function(b3) {
      if (0 === a2._status || -1 === a2._status)
        a2._status = 1, a2._result = b3;
    }, function(b3) {
      if (0 === a2._status || -1 === a2._status)
        a2._status = 2, a2._result = b3;
    });
    -1 === a2._status && (a2._status = 0, a2._result = b2);
  }
  if (1 === a2._status)
    return a2._result.default;
  throw a2._result;
}
var U$2 = { current: null }, V$2 = { transition: null }, W$2 = { ReactCurrentDispatcher: U$2, ReactCurrentBatchConfig: V$2, ReactCurrentOwner: K$1 };
react_production_min.Children = { map: S$2, forEach: function(a2, b2, e2) {
  S$2(a2, function() {
    b2.apply(this, arguments);
  }, e2);
}, count: function(a2) {
  var b2 = 0;
  S$2(a2, function() {
    b2++;
  });
  return b2;
}, toArray: function(a2) {
  return S$2(a2, function(a3) {
    return a3;
  }) || [];
}, only: function(a2) {
  if (!O$2(a2))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a2;
} };
react_production_min.Component = E$2;
react_production_min.Fragment = p$9;
react_production_min.Profiler = r$j;
react_production_min.PureComponent = G$2;
react_production_min.StrictMode = q$4;
react_production_min.Suspense = w$3;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$2;
react_production_min.cloneElement = function(a2, b2, e2) {
  if (null === a2 || void 0 === a2)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a2 + ".");
  var d2 = C$4({}, a2.props), c2 = a2.key, k2 = a2.ref, h2 = a2._owner;
  if (null != b2) {
    void 0 !== b2.ref && (k2 = b2.ref, h2 = K$1.current);
    void 0 !== b2.key && (c2 = "" + b2.key);
    if (a2.type && a2.type.defaultProps)
      var g2 = a2.type.defaultProps;
    for (f2 in b2)
      J$1.call(b2, f2) && !L$2.hasOwnProperty(f2) && (d2[f2] = void 0 === b2[f2] && void 0 !== g2 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d2.children = e2;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    d2.children = g2;
  }
  return { $$typeof: l$e, type: a2.type, key: c2, ref: k2, props: d2, _owner: h2 };
};
react_production_min.createContext = function(a2) {
  a2 = { $$typeof: u$6, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a2.Provider = { $$typeof: t$f, _context: a2 };
  return a2.Consumer = a2;
};
react_production_min.createElement = M$2;
react_production_min.createFactory = function(a2) {
  var b2 = M$2.bind(null, a2);
  b2.type = a2;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a2) {
  return { $$typeof: v$5, render: a2 };
};
react_production_min.isValidElement = O$2;
react_production_min.lazy = function(a2) {
  return { $$typeof: y$2, _payload: { _status: -1, _result: a2 }, _init: T$2 };
};
react_production_min.memo = function(a2, b2) {
  return { $$typeof: x$3, type: a2, compare: void 0 === b2 ? null : b2 };
};
react_production_min.startTransition = function(a2) {
  var b2 = V$2.transition;
  V$2.transition = {};
  try {
    a2();
  } finally {
    V$2.transition = b2;
  }
};
react_production_min.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function(a2, b2) {
  return U$2.current.useCallback(a2, b2);
};
react_production_min.useContext = function(a2) {
  return U$2.current.useContext(a2);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a2) {
  return U$2.current.useDeferredValue(a2);
};
react_production_min.useEffect = function(a2, b2) {
  return U$2.current.useEffect(a2, b2);
};
react_production_min.useId = function() {
  return U$2.current.useId();
};
react_production_min.useImperativeHandle = function(a2, b2, e2) {
  return U$2.current.useImperativeHandle(a2, b2, e2);
};
react_production_min.useInsertionEffect = function(a2, b2) {
  return U$2.current.useInsertionEffect(a2, b2);
};
react_production_min.useLayoutEffect = function(a2, b2) {
  return U$2.current.useLayoutEffect(a2, b2);
};
react_production_min.useMemo = function(a2, b2) {
  return U$2.current.useMemo(a2, b2);
};
react_production_min.useReducer = function(a2, b2, e2) {
  return U$2.current.useReducer(a2, b2, e2);
};
react_production_min.useRef = function(a2) {
  return U$2.current.useRef(a2);
};
react_production_min.useState = function(a2) {
  return U$2.current.useState(a2);
};
react_production_min.useSyncExternalStore = function(a2, b2, e2) {
  return U$2.current.useSyncExternalStore(a2, b2, e2);
};
react_production_min.useTransition = function() {
  return U$2.current.useTransition();
};
react_production_min.version = "18.2.0";
{
  react.exports = react_production_min;
}
var reactExports = react.exports;
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
const React$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: React
}, [reactExports]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f$5 = reactExports, k$4 = Symbol.for("react.element"), l$d = Symbol.for("react.fragment"), m$d = Object.prototype.hasOwnProperty, n$e = f$5.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$8 = { key: true, ref: true, __self: true, __source: true };
function q$3(c2, a2, g2) {
  var b2, d2 = {}, e2 = null, h2 = null;
  void 0 !== g2 && (e2 = "" + g2);
  void 0 !== a2.key && (e2 = "" + a2.key);
  void 0 !== a2.ref && (h2 = a2.ref);
  for (b2 in a2)
    m$d.call(a2, b2) && !p$8.hasOwnProperty(b2) && (d2[b2] = a2[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a2 = c2.defaultProps, a2)
      void 0 === d2[b2] && (d2[b2] = a2[b2]);
  return { $$typeof: k$4, type: c2, key: e2, ref: h2, props: d2, _owner: n$e.current };
}
reactJsxRuntime_production_min.Fragment = l$d;
reactJsxRuntime_production_min.jsx = q$3;
reactJsxRuntime_production_min.jsxs = q$3;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
var jsxRuntimeExports = jsxRuntime.exports;
var client = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a2, b2) {
    var c2 = a2.length;
    a2.push(b2);
    a:
      for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e2 = a2[d2];
        if (0 < g2(e2, b2))
          a2[d2] = b2, a2[c2] = e2, c2 = d2;
        else
          break a;
      }
  }
  function h2(a2) {
    return 0 === a2.length ? null : a2[0];
  }
  function k2(a2) {
    if (0 === a2.length)
      return null;
    var b2 = a2[0], c2 = a2.pop();
    if (c2 !== b2) {
      a2[0] = c2;
      a:
        for (var d2 = 0, e2 = a2.length, w2 = e2 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a2[m2], n2 = m2 + 1, x2 = a2[n2];
          if (0 > g2(C2, c2))
            n2 < e2 && 0 > g2(x2, C2) ? (a2[d2] = x2, a2[n2] = c2, d2 = n2) : (a2[d2] = C2, a2[m2] = c2, d2 = m2);
          else if (n2 < e2 && 0 > g2(x2, c2))
            a2[d2] = x2, a2[n2] = c2, d2 = n2;
          else
            break a;
        }
    }
    return b2;
  }
  function g2(a2, b2) {
    var c2 = a2.sortIndex - b2.sortIndex;
    return 0 !== c2 ? c2 : a2.id - b2.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a2) {
    for (var b2 = h2(t2); null !== b2; ) {
      if (null === b2.callback)
        k2(t2);
      else if (b2.startTime <= a2)
        k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else
        break;
      b2 = h2(t2);
    }
  }
  function H2(a2) {
    B2 = false;
    G2(a2);
    if (!A2)
      if (null !== h2(r2))
        A2 = true, I2(J2);
      else {
        var b2 = h2(t2);
        null !== b2 && K2(H2, b2.startTime - a2);
      }
  }
  function J2(a2, b2) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b2) || a2 && !M2()); ) {
        var d2 = v2.callback;
        if ("function" === typeof d2) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e2 = d2(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          "function" === typeof e2 ? v2.callback = e2 : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a2 = exports.unstable_now();
      Q2 = a2;
      var b2 = true;
      try {
        b2 = O2(true, a2);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function() {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a2) {
    O2 = a2;
    N2 || (N2 = true, S2());
  }
  function K2(a2, b2) {
    L2 = D2(function() {
      a2(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a2) {
    a2.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a2) {
    0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a2 ? Math.floor(1e3 / a2) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a2) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a2, b2) {
    switch (a2) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a2 = 3;
    }
    var c2 = y2;
    y2 = a2;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a2, b2, c2) {
    var d2 = exports.unstable_now();
    "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a2) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c2 + e2;
    a2 = { id: u2++, callback: b2, priorityLevel: a2, startTime: c2, expirationTime: e2, sortIndex: -1 };
    c2 > d2 ? (a2.sortIndex = c2, f2(t2, a2), null === h2(r2) && a2 === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d2))) : (a2.sortIndex = e2, f2(r2, a2), A2 || z2 || (A2 = true, I2(J2)));
    return a2;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a2) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a2.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
var schedulerExports = scheduler.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p$7(a2) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a2 + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a2, b2) {
  ha(a2, b2);
  ha(a2 + "Capture", b2);
}
function ha(a2, b2) {
  ea[a2] = b2;
  for (a2 = 0; a2 < b2.length; a2++)
    da.add(b2[a2]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a2) {
  if (ja.call(ma, a2))
    return true;
  if (ja.call(la, a2))
    return false;
  if (ka.test(a2))
    return ma[a2] = true;
  la[a2] = true;
  return false;
}
function pa(a2, b2, c2, d2) {
  if (null !== c2 && 0 === c2.type)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (null !== c2)
        return !c2.acceptsBooleans;
      a2 = a2.toLowerCase().slice(0, 5);
      return "data-" !== a2 && "aria-" !== a2;
    default:
      return false;
  }
}
function qa(a2, b2, c2, d2) {
  if (null === b2 || "undefined" === typeof b2 || pa(a2, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (null !== c2)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return false === b2;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function v$4(a2, b2, c2, d2, e2, f2, g2) {
  this.acceptsBooleans = 2 === b2 || 3 === b2 || 4 === b2;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a2;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z$2 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a2) {
  z$2[a2] = new v$4(a2, 0, false, a2, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a2) {
  var b2 = a2[0];
  z$2[b2] = new v$4(b2, 1, false, a2[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 2, false, a2.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 2, false, a2, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a2) {
  z$2[a2] = new v$4(a2, 3, false, a2.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 3, true, a2, null, false, false);
});
["capture", "download"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 4, false, a2, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 6, false, a2, null, false, false);
});
["rowSpan", "start"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 5, false, a2.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a2) {
  return a2[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a2) {
  var b2 = a2.replace(
    ra,
    sa
  );
  z$2[b2] = new v$4(b2, 1, false, a2, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a2) {
  var b2 = a2.replace(ra, sa);
  z$2[b2] = new v$4(b2, 1, false, a2, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a2) {
  var b2 = a2.replace(ra, sa);
  z$2[b2] = new v$4(b2, 1, false, a2, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 1, false, a2.toLowerCase(), null, false, false);
});
z$2.xlinkHref = new v$4("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a2) {
  z$2[a2] = new v$4(a2, 1, false, a2.toLowerCase(), null, true, true);
});
function ta(a2, b2, c2, d2) {
  var e2 = z$2.hasOwnProperty(b2) ? z$2[b2] : null;
  if (null !== e2 ? 0 !== e2.type : d2 || !(2 < b2.length) || "o" !== b2[0] && "O" !== b2[0] || "n" !== b2[1] && "N" !== b2[1])
    qa(b2, c2, e2, d2) && (c2 = null), d2 || null === e2 ? oa(b2) && (null === c2 ? a2.removeAttribute(b2) : a2.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a2[e2.propertyName] = null === c2 ? 3 === e2.type ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, null === c2 ? a2.removeAttribute(b2) : (e2 = e2.type, c2 = 3 === e2 || 4 === e2 && true === c2 ? "" : "" + c2, d2 ? a2.setAttributeNS(d2, b2, c2) : a2.setAttribute(b2, c2)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a2) {
  if (null === a2 || "object" !== typeof a2)
    return null;
  a2 = Ja && a2[Ja] || a2["@@iterator"];
  return "function" === typeof a2 ? a2 : null;
}
var A$2 = Object.assign, La;
function Ma(a2) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      La = b2 && b2[1] || "";
    }
  return "\n" + La + a2;
}
var Na = false;
function Oa(a2, b2) {
  if (!a2 || Na)
    return "";
  Na = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (l2) {
          var d2 = l2;
        }
        Reflect.construct(a2, [], b2);
      } else {
        try {
          b2.call();
        } catch (l2) {
          d2 = l2;
        }
        a2.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d2 = l2;
      }
      a2();
    }
  } catch (l2) {
    if (l2 && d2 && "string" === typeof l2.stack) {
      for (var e2 = l2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e2[g2] !== f2[h2]) {
          if (1 !== g2 || 1 !== h2) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f2[h2]) {
                var k2 = "\n" + e2[g2].replace(" at new ", " at ");
                a2.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a2.displayName));
                return k2;
              }
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c2;
  }
  return (a2 = a2 ? a2.displayName || a2.name : "") ? Ma(a2) : "";
}
function Pa(a2) {
  switch (a2.tag) {
    case 5:
      return Ma(a2.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a2 = Oa(a2.type, false), a2;
    case 11:
      return a2 = Oa(a2.type.render, false), a2;
    case 1:
      return a2 = Oa(a2.type, true), a2;
    default:
      return "";
  }
}
function Qa(a2) {
  if (null == a2)
    return null;
  if ("function" === typeof a2)
    return a2.displayName || a2.name || null;
  if ("string" === typeof a2)
    return a2;
  switch (a2) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a2)
    switch (a2.$$typeof) {
      case Ca:
        return (a2.displayName || "Context") + ".Consumer";
      case Ba:
        return (a2._context.displayName || "Context") + ".Provider";
      case Da:
        var b2 = a2.render;
        a2 = a2.displayName;
        a2 || (a2 = b2.displayName || b2.name || "", a2 = "" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
        return a2;
      case Ga:
        return b2 = a2.displayName || null, null !== b2 ? b2 : Qa(a2.type) || "Memo";
      case Ha:
        b2 = a2._payload;
        a2 = a2._init;
        try {
          return Qa(a2(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Ra(a2) {
  var b2 = a2.type;
  switch (a2.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a2 = b2.render, a2 = a2.displayName || a2.name || "", b2.displayName || ("" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b2);
    case 8:
      return b2 === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b2)
        return b2.displayName || b2.name || null;
      if ("string" === typeof b2)
        return b2;
  }
  return null;
}
function Sa(a2) {
  switch (typeof a2) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a2;
    case "object":
      return a2;
    default:
      return "";
  }
}
function Ta(a2) {
  var b2 = a2.type;
  return (a2 = a2.nodeName) && "input" === a2.toLowerCase() && ("checkbox" === b2 || "radio" === b2);
}
function Ua(a2) {
  var b2 = Ta(a2) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a2.constructor.prototype, b2), d2 = "" + a2[b2];
  if (!a2.hasOwnProperty(b2) && "undefined" !== typeof c2 && "function" === typeof c2.get && "function" === typeof c2.set) {
    var e2 = c2.get, f2 = c2.set;
    Object.defineProperty(a2, b2, { configurable: true, get: function() {
      return e2.call(this);
    }, set: function(a3) {
      d2 = "" + a3;
      f2.call(this, a3);
    } });
    Object.defineProperty(a2, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a3) {
      d2 = "" + a3;
    }, stopTracking: function() {
      a2._valueTracker = null;
      delete a2[b2];
    } };
  }
}
function Va(a2) {
  a2._valueTracker || (a2._valueTracker = Ua(a2));
}
function Wa(a2) {
  if (!a2)
    return false;
  var b2 = a2._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a2 && (d2 = Ta(a2) ? a2.checked ? "true" : "false" : a2.value);
  a2 = d2;
  return a2 !== c2 ? (b2.setValue(a2), true) : false;
}
function Xa(a2) {
  a2 = a2 || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a2)
    return null;
  try {
    return a2.activeElement || a2.body;
  } catch (b2) {
    return a2.body;
  }
}
function Ya(a2, b2) {
  var c2 = b2.checked;
  return A$2({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c2 ? c2 : a2._wrapperState.initialChecked });
}
function Za(a2, b2) {
  var c2 = null == b2.defaultValue ? "" : b2.defaultValue, d2 = null != b2.checked ? b2.checked : b2.defaultChecked;
  c2 = Sa(null != b2.value ? b2.value : c2);
  a2._wrapperState = { initialChecked: d2, initialValue: c2, controlled: "checkbox" === b2.type || "radio" === b2.type ? null != b2.checked : null != b2.value };
}
function ab(a2, b2) {
  b2 = b2.checked;
  null != b2 && ta(a2, "checked", b2, false);
}
function bb(a2, b2) {
  ab(a2, b2);
  var c2 = Sa(b2.value), d2 = b2.type;
  if (null != c2)
    if ("number" === d2) {
      if (0 === c2 && "" === a2.value || a2.value != c2)
        a2.value = "" + c2;
    } else
      a2.value !== "" + c2 && (a2.value = "" + c2);
  else if ("submit" === d2 || "reset" === d2) {
    a2.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? cb(a2, b2.type, c2) : b2.hasOwnProperty("defaultValue") && cb(a2, b2.type, Sa(b2.defaultValue));
  null == b2.checked && null != b2.defaultChecked && (a2.defaultChecked = !!b2.defaultChecked);
}
function db(a2, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!("submit" !== d2 && "reset" !== d2 || void 0 !== b2.value && null !== b2.value))
      return;
    b2 = "" + a2._wrapperState.initialValue;
    c2 || b2 === a2.value || (a2.value = b2);
    a2.defaultValue = b2;
  }
  c2 = a2.name;
  "" !== c2 && (a2.name = "");
  a2.defaultChecked = !!a2._wrapperState.initialChecked;
  "" !== c2 && (a2.name = c2);
}
function cb(a2, b2, c2) {
  if ("number" !== b2 || Xa(a2.ownerDocument) !== a2)
    null == c2 ? a2.defaultValue = "" + a2._wrapperState.initialValue : a2.defaultValue !== "" + c2 && (a2.defaultValue = "" + c2);
}
var eb = Array.isArray;
function fb(a2, b2, c2, d2) {
  a2 = a2.options;
  if (b2) {
    b2 = {};
    for (var e2 = 0; e2 < c2.length; e2++)
      b2["$" + c2[e2]] = true;
    for (c2 = 0; c2 < a2.length; c2++)
      e2 = b2.hasOwnProperty("$" + a2[c2].value), a2[c2].selected !== e2 && (a2[c2].selected = e2), e2 && d2 && (a2[c2].defaultSelected = true);
  } else {
    c2 = "" + Sa(c2);
    b2 = null;
    for (e2 = 0; e2 < a2.length; e2++) {
      if (a2[e2].value === c2) {
        a2[e2].selected = true;
        d2 && (a2[e2].defaultSelected = true);
        return;
      }
      null !== b2 || a2[e2].disabled || (b2 = a2[e2]);
    }
    null !== b2 && (b2.selected = true);
  }
}
function gb(a2, b2) {
  if (null != b2.dangerouslySetInnerHTML)
    throw Error(p$7(91));
  return A$2({}, b2, { value: void 0, defaultValue: void 0, children: "" + a2._wrapperState.initialValue });
}
function hb(a2, b2) {
  var c2 = b2.value;
  if (null == c2) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (null != c2) {
      if (null != b2)
        throw Error(p$7(92));
      if (eb(c2)) {
        if (1 < c2.length)
          throw Error(p$7(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    null == b2 && (b2 = "");
    c2 = b2;
  }
  a2._wrapperState = { initialValue: Sa(c2) };
}
function ib(a2, b2) {
  var c2 = Sa(b2.value), d2 = Sa(b2.defaultValue);
  null != c2 && (c2 = "" + c2, c2 !== a2.value && (a2.value = c2), null == b2.defaultValue && a2.defaultValue !== c2 && (a2.defaultValue = c2));
  null != d2 && (a2.defaultValue = "" + d2);
}
function jb(a2) {
  var b2 = a2.textContent;
  b2 === a2._wrapperState.initialValue && "" !== b2 && null !== b2 && (a2.value = b2);
}
function kb(a2) {
  switch (a2) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a2, b2) {
  return null == a2 || "http://www.w3.org/1999/xhtml" === a2 ? kb(b2) : "http://www.w3.org/2000/svg" === a2 && "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : a2;
}
var mb, nb = function(a2) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
    MSApp.execUnsafeLocalFunction(function() {
      return a2(b2, c2, d2, e2);
    });
  } : a2;
}(function(a2, b2) {
  if ("http://www.w3.org/2000/svg" !== a2.namespaceURI || "innerHTML" in a2)
    a2.innerHTML = b2;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = mb.firstChild; a2.firstChild; )
      a2.removeChild(a2.firstChild);
    for (; b2.firstChild; )
      a2.appendChild(b2.firstChild);
  }
});
function ob(a2, b2) {
  if (b2) {
    var c2 = a2.firstChild;
    if (c2 && c2 === a2.lastChild && 3 === c2.nodeType) {
      c2.nodeValue = b2;
      return;
    }
  }
  a2.textContent = b2;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a2) {
  qb.forEach(function(b2) {
    b2 = b2 + a2.charAt(0).toUpperCase() + a2.substring(1);
    pb[b2] = pb[a2];
  });
});
function rb(a2, b2, c2) {
  return null == b2 || "boolean" === typeof b2 || "" === b2 ? "" : c2 || "number" !== typeof b2 || 0 === b2 || pb.hasOwnProperty(a2) && pb[a2] ? ("" + b2).trim() : b2 + "px";
}
function sb(a2, b2) {
  a2 = a2.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = 0 === c2.indexOf("--"), e2 = rb(c2, b2[c2], d2);
      "float" === c2 && (c2 = "cssFloat");
      d2 ? a2.setProperty(c2, e2) : a2[c2] = e2;
    }
}
var tb = A$2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a2, b2) {
  if (b2) {
    if (tb[a2] && (null != b2.children || null != b2.dangerouslySetInnerHTML))
      throw Error(p$7(137, a2));
    if (null != b2.dangerouslySetInnerHTML) {
      if (null != b2.children)
        throw Error(p$7(60));
      if ("object" !== typeof b2.dangerouslySetInnerHTML || !("__html" in b2.dangerouslySetInnerHTML))
        throw Error(p$7(61));
    }
    if (null != b2.style && "object" !== typeof b2.style)
      throw Error(p$7(62));
  }
}
function vb(a2, b2) {
  if (-1 === a2.indexOf("-"))
    return "string" === typeof b2.is;
  switch (a2) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a2) {
  a2 = a2.target || a2.srcElement || window;
  a2.correspondingUseElement && (a2 = a2.correspondingUseElement);
  return 3 === a2.nodeType ? a2.parentNode : a2;
}
var yb = null, zb = null, Ab = null;
function Bb(a2) {
  if (a2 = Cb(a2)) {
    if ("function" !== typeof yb)
      throw Error(p$7(280));
    var b2 = a2.stateNode;
    b2 && (b2 = Db(b2), yb(a2.stateNode, a2.type, b2));
  }
}
function Eb(a2) {
  zb ? Ab ? Ab.push(a2) : Ab = [a2] : zb = a2;
}
function Fb() {
  if (zb) {
    var a2 = zb, b2 = Ab;
    Ab = zb = null;
    Bb(a2);
    if (b2)
      for (a2 = 0; a2 < b2.length; a2++)
        Bb(b2[a2]);
  }
}
function Gb(a2, b2) {
  return a2(b2);
}
function Hb() {
}
var Ib = false;
function Jb(a2, b2, c2) {
  if (Ib)
    return a2(b2, c2);
  Ib = true;
  try {
    return Gb(a2, b2, c2);
  } finally {
    if (Ib = false, null !== zb || null !== Ab)
      Hb(), Fb();
  }
}
function Kb(a2, b2) {
  var c2 = a2.stateNode;
  if (null === c2)
    return null;
  var d2 = Db(c2);
  if (null === d2)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a2 = a2.type, d2 = !("button" === a2 || "input" === a2 || "select" === a2 || "textarea" === a2));
        a2 = !d2;
        break a;
      default:
        a2 = false;
    }
  if (a2)
    return null;
  if (c2 && "function" !== typeof c2)
    throw Error(p$7(231, b2, typeof c2));
  return c2;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", { get: function() {
      Lb = true;
    } });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a2) {
    Lb = false;
  }
function Nb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a2) {
  Ob = true;
  Pb = a2;
} };
function Tb(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else
      throw Error(p$7(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a2) {
  var b2 = a2, c2 = a2;
  if (a2.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a2 = b2;
    do
      b2 = a2, 0 !== (b2.flags & 4098) && (c2 = b2.return), a2 = b2.return;
    while (a2);
  }
  return 3 === b2.tag ? c2 : null;
}
function Wb(a2) {
  if (13 === a2.tag) {
    var b2 = a2.memoizedState;
    null === b2 && (a2 = a2.alternate, null !== a2 && (b2 = a2.memoizedState));
    if (null !== b2)
      return b2.dehydrated;
  }
  return null;
}
function Xb(a2) {
  if (Vb(a2) !== a2)
    throw Error(p$7(188));
}
function Yb(a2) {
  var b2 = a2.alternate;
  if (!b2) {
    b2 = Vb(a2);
    if (null === b2)
      throw Error(p$7(188));
    return b2 !== a2 ? null : a2;
  }
  for (var c2 = a2, d2 = b2; ; ) {
    var e2 = c2.return;
    if (null === e2)
      break;
    var f2 = e2.alternate;
    if (null === f2) {
      d2 = e2.return;
      if (null !== d2) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2; ) {
        if (f2 === c2)
          return Xb(e2), a2;
        if (f2 === d2)
          return Xb(e2), b2;
        f2 = f2.sibling;
      }
      throw Error(p$7(188));
    }
    if (c2.return !== d2.return)
      c2 = e2, d2 = f2;
    else {
      for (var g2 = false, h2 = e2.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e2;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e2;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(p$7(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(p$7(190));
  }
  if (3 !== c2.tag)
    throw Error(p$7(188));
  return c2.stateNode.current === c2 ? a2 : b2;
}
function Zb(a2) {
  a2 = Yb(a2);
  return null !== a2 ? $b(a2) : null;
}
function $b(a2) {
  if (5 === a2.tag || 6 === a2.tag)
    return a2;
  for (a2 = a2.child; null !== a2; ) {
    var b2 = $b(a2);
    if (null !== b2)
      return b2;
    a2 = a2.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B$1 = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a2) {
  if (lc && "function" === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a2, void 0, 128 === (a2.current.flags & 128));
    } catch (b2) {
    }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a2) {
  a2 >>>= 0;
  return 0 === a2 ? 32 : 31 - (pc(a2) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a2) {
  switch (a2 & -a2) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a2 & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a2 & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a2;
  }
}
function uc(a2, b2) {
  var c2 = a2.pendingLanes;
  if (0 === c2)
    return 0;
  var d2 = 0, e2 = a2.suspendedLanes, f2 = a2.pingedLanes, g2 = c2 & 268435455;
  if (0 !== g2) {
    var h2 = g2 & ~e2;
    0 !== h2 ? d2 = tc(h2) : (f2 &= g2, 0 !== f2 && (d2 = tc(f2)));
  } else
    g2 = c2 & ~e2, 0 !== g2 ? d2 = tc(g2) : 0 !== f2 && (d2 = tc(f2));
  if (0 === d2)
    return 0;
  if (0 !== b2 && b2 !== d2 && 0 === (b2 & e2) && (e2 = d2 & -d2, f2 = b2 & -b2, e2 >= f2 || 16 === e2 && 0 !== (f2 & 4194240)))
    return b2;
  0 !== (d2 & 4) && (d2 |= c2 & 16);
  b2 = a2.entangledLanes;
  if (0 !== b2)
    for (a2 = a2.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - oc(b2), e2 = 1 << c2, d2 |= a2[c2], b2 &= ~e2;
  return d2;
}
function vc(a2, b2) {
  switch (a2) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a2, b2) {
  for (var c2 = a2.suspendedLanes, d2 = a2.pingedLanes, e2 = a2.expirationTimes, f2 = a2.pendingLanes; 0 < f2; ) {
    var g2 = 31 - oc(f2), h2 = 1 << g2, k2 = e2[g2];
    if (-1 === k2) {
      if (0 === (h2 & c2) || 0 !== (h2 & d2))
        e2[g2] = vc(h2, b2);
    } else
      k2 <= b2 && (a2.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a2) {
  a2 = a2.pendingLanes & -1073741825;
  return 0 !== a2 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a2 = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a2;
}
function zc(a2) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a2);
  return b2;
}
function Ac(a2, b2, c2) {
  a2.pendingLanes |= b2;
  536870912 !== b2 && (a2.suspendedLanes = 0, a2.pingedLanes = 0);
  a2 = a2.eventTimes;
  b2 = 31 - oc(b2);
  a2[b2] = c2;
}
function Bc(a2, b2) {
  var c2 = a2.pendingLanes & ~b2;
  a2.pendingLanes = b2;
  a2.suspendedLanes = 0;
  a2.pingedLanes = 0;
  a2.expiredLanes &= b2;
  a2.mutableReadLanes &= b2;
  a2.entangledLanes &= b2;
  b2 = a2.entanglements;
  var d2 = a2.eventTimes;
  for (a2 = a2.expirationTimes; 0 < c2; ) {
    var e2 = 31 - oc(c2), f2 = 1 << e2;
    b2[e2] = 0;
    d2[e2] = -1;
    a2[e2] = -1;
    c2 &= ~f2;
  }
}
function Cc(a2, b2) {
  var c2 = a2.entangledLanes |= b2;
  for (a2 = a2.entanglements; c2; ) {
    var d2 = 31 - oc(c2), e2 = 1 << d2;
    e2 & b2 | a2[d2] & b2 && (a2[d2] |= b2);
    c2 &= ~e2;
  }
}
var C$3 = 0;
function Dc(a2) {
  a2 &= -a2;
  return 1 < a2 ? 4 < a2 ? 0 !== (a2 & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a2, b2) {
  switch (a2) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b2.pointerId);
  }
}
function Tc(a2, b2, c2, d2, e2, f2) {
  if (null === a2 || a2.nativeEvent !== f2)
    return a2 = { blockedOn: b2, domEventName: c2, eventSystemFlags: d2, nativeEvent: f2, targetContainers: [e2] }, null !== b2 && (b2 = Cb(b2), null !== b2 && Fc(b2)), a2;
  a2.eventSystemFlags |= d2;
  b2 = a2.targetContainers;
  null !== e2 && -1 === b2.indexOf(e2) && b2.push(e2);
  return a2;
}
function Uc(a2, b2, c2, d2, e2) {
  switch (b2) {
    case "focusin":
      return Lc = Tc(Lc, a2, b2, c2, d2, e2), true;
    case "dragenter":
      return Mc = Tc(Mc, a2, b2, c2, d2, e2), true;
    case "mouseover":
      return Nc = Tc(Nc, a2, b2, c2, d2, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a2, b2, c2, d2, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a2, b2, c2, d2, e2)), true;
  }
  return false;
}
function Vc(a2) {
  var b2 = Wc(a2.target);
  if (null !== b2) {
    var c2 = Vb(b2);
    if (null !== c2) {
      if (b2 = c2.tag, 13 === b2) {
        if (b2 = Wb(c2), null !== b2) {
          a2.blockedOn = b2;
          Ic(a2.priority, function() {
            Gc(c2);
          });
          return;
        }
      } else if (3 === b2 && c2.stateNode.current.memoizedState.isDehydrated) {
        a2.blockedOn = 3 === c2.tag ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a2.blockedOn = null;
}
function Xc(a2) {
  if (null !== a2.blockedOn)
    return false;
  for (var b2 = a2.targetContainers; 0 < b2.length; ) {
    var c2 = Yc(a2.domEventName, a2.eventSystemFlags, b2[0], a2.nativeEvent);
    if (null === c2) {
      c2 = a2.nativeEvent;
      var d2 = new c2.constructor(c2.type, c2);
      wb = d2;
      c2.target.dispatchEvent(d2);
      wb = null;
    } else
      return b2 = Cb(c2), null !== b2 && Fc(b2), a2.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function Zc(a2, b2, c2) {
  Xc(a2) && c2.delete(b2);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a2, b2) {
  a2.blockedOn === b2 && (a2.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a2) {
  function b2(b3) {
    return ad(b3, a2);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a2);
    for (var c2 = 1; c2 < Kc.length; c2++) {
      var d2 = Kc[c2];
      d2.blockedOn === a2 && (d2.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a2);
  null !== Mc && ad(Mc, a2);
  null !== Nc && ad(Nc, a2);
  Oc.forEach(b2);
  Pc.forEach(b2);
  for (c2 = 0; c2 < Qc.length; c2++)
    d2 = Qc[c2], d2.blockedOn === a2 && (d2.blockedOn = null);
  for (; 0 < Qc.length && (c2 = Qc[0], null === c2.blockedOn); )
    Vc(c2), null === c2.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a2, b2, c2, d2) {
  var e2 = C$3, f2 = cd.transition;
  cd.transition = null;
  try {
    C$3 = 1, fd(a2, b2, c2, d2);
  } finally {
    C$3 = e2, cd.transition = f2;
  }
}
function gd(a2, b2, c2, d2) {
  var e2 = C$3, f2 = cd.transition;
  cd.transition = null;
  try {
    C$3 = 4, fd(a2, b2, c2, d2);
  } finally {
    C$3 = e2, cd.transition = f2;
  }
}
function fd(a2, b2, c2, d2) {
  if (dd) {
    var e2 = Yc(a2, b2, c2, d2);
    if (null === e2)
      hd(a2, b2, d2, id, c2), Sc(a2, d2);
    else if (Uc(e2, a2, b2, c2, d2))
      d2.stopPropagation();
    else if (Sc(a2, d2), b2 & 4 && -1 < Rc.indexOf(a2)) {
      for (; null !== e2; ) {
        var f2 = Cb(e2);
        null !== f2 && Ec(f2);
        f2 = Yc(a2, b2, c2, d2);
        null === f2 && hd(a2, b2, d2, id, c2);
        if (f2 === e2)
          break;
        e2 = f2;
      }
      null !== e2 && d2.stopPropagation();
    } else
      hd(a2, b2, d2, null, c2);
  }
}
var id = null;
function Yc(a2, b2, c2, d2) {
  id = null;
  a2 = xb(d2);
  a2 = Wc(a2);
  if (null !== a2)
    if (b2 = Vb(a2), null === b2)
      a2 = null;
    else if (c2 = b2.tag, 13 === c2) {
      a2 = Wb(b2);
      if (null !== a2)
        return a2;
      a2 = null;
    } else if (3 === c2) {
      if (b2.stateNode.current.memoizedState.isDehydrated)
        return 3 === b2.tag ? b2.stateNode.containerInfo : null;
      a2 = null;
    } else
      b2 !== a2 && (a2 = null);
  id = a2;
  return null;
}
function jd(a2) {
  switch (a2) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a2, b2 = ld, c2 = b2.length, d2, e2 = "value" in kd ? kd.value : kd.textContent, f2 = e2.length;
  for (a2 = 0; a2 < c2 && b2[a2] === e2[a2]; a2++)
    ;
  var g2 = c2 - a2;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
    ;
  return md = e2.slice(a2, 1 < d2 ? 1 - d2 : void 0);
}
function od(a2) {
  var b2 = a2.keyCode;
  "charCode" in a2 ? (a2 = a2.charCode, 0 === a2 && 13 === b2 && (a2 = 13)) : a2 = b2;
  10 === a2 && (a2 = 13);
  return 32 <= a2 || 13 === a2 ? a2 : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a2) {
  function b2(b3, d2, e2, f2, g2) {
    this._reactName = b3;
    this._targetInst = e2;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a2)
      a2.hasOwnProperty(c2) && (b3 = a2[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A$2(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a3 = this.nativeEvent;
    a3 && (a3.preventDefault ? a3.preventDefault() : "unknown" !== typeof a3.returnValue && (a3.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a3 = this.nativeEvent;
    a3 && (a3.stopPropagation ? a3.stopPropagation() : "unknown" !== typeof a3.cancelBubble && (a3.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b2;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a2) {
  return a2.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A$2({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A$2({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a2) {
  return void 0 === a2.relatedTarget ? a2.fromElement === a2.srcElement ? a2.toElement : a2.fromElement : a2.relatedTarget;
}, movementX: function(a2) {
  if ("movementX" in a2)
    return a2.movementX;
  a2 !== yd && (yd && "mousemove" === a2.type ? (wd = a2.screenX - yd.screenX, xd = a2.screenY - yd.screenY) : xd = wd = 0, yd = a2);
  return wd;
}, movementY: function(a2) {
  return "movementY" in a2 ? a2.movementY : xd;
} }), Bd = rd(Ad), Cd = A$2({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A$2({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A$2({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A$2({}, sd, { clipboardData: function(a2) {
  return "clipboardData" in a2 ? a2.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A$2({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a2) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a2) : (a2 = Od[a2]) ? !!b2[a2] : false;
}
function zd() {
  return Pd;
}
var Qd = A$2({}, ud, { key: function(a2) {
  if (a2.key) {
    var b2 = Md[a2.key] || a2.key;
    if ("Unidentified" !== b2)
      return b2;
  }
  return "keypress" === a2.type ? (a2 = od(a2), 13 === a2 ? "Enter" : String.fromCharCode(a2)) : "keydown" === a2.type || "keyup" === a2.type ? Nd[a2.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a2) {
  return "keypress" === a2.type ? od(a2) : 0;
}, keyCode: function(a2) {
  return "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
}, which: function(a2) {
  return "keypress" === a2.type ? od(a2) : "keydown" === a2.type || "keyup" === a2.type ? a2.keyCode : 0;
} }), Rd = rd(Qd), Sd = A$2({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A$2({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A$2({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A$2({}, Ad, {
  deltaX: function(a2) {
    return "deltaX" in a2 ? a2.deltaX : "wheelDeltaX" in a2 ? -a2.wheelDeltaX : 0;
  },
  deltaY: function(a2) {
    return "deltaY" in a2 ? a2.deltaY : "wheelDeltaY" in a2 ? -a2.wheelDeltaY : "wheelDelta" in a2 ? -a2.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a2, b2) {
  switch (a2) {
    case "keyup":
      return -1 !== $d.indexOf(b2.keyCode);
    case "keydown":
      return 229 !== b2.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a2) {
  a2 = a2.detail;
  return "object" === typeof a2 && "data" in a2 ? a2.data : null;
}
var ie = false;
function je(a2, b2) {
  switch (a2) {
    case "compositionend":
      return he(b2);
    case "keypress":
      if (32 !== b2.which)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a2 = b2.data, a2 === ee && fe ? null : a2;
    default:
      return null;
  }
}
function ke(a2, b2) {
  if (ie)
    return "compositionend" === a2 || !ae && ge(a2, b2) ? (a2 = nd(), md = ld = kd = null, ie = false, a2) : null;
  switch (a2) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b2.locale ? null : b2.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return "input" === b2 ? !!le[a2.type] : "textarea" === b2 ? true : false;
}
function ne(a2, b2, c2, d2) {
  Eb(d2);
  b2 = oe(b2, "onChange");
  0 < b2.length && (c2 = new td("onChange", "change", null, c2, d2), a2.push({ event: c2, listeners: b2 }));
}
var pe = null, qe = null;
function re(a2) {
  se(a2, 0);
}
function te(a2) {
  var b2 = ue(a2);
  if (Wa(b2))
    return a2;
}
function ve(a2, b2) {
  if ("change" === a2)
    return b2;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a2) {
  if ("value" === a2.propertyName && te(qe)) {
    var b2 = [];
    ne(b2, qe, a2, xb(a2));
    Jb(re, b2);
  }
}
function Ce(a2, b2, c2) {
  "focusin" === a2 ? (Ae(), pe = b2, qe = c2, pe.attachEvent("onpropertychange", Be)) : "focusout" === a2 && Ae();
}
function De(a2) {
  if ("selectionchange" === a2 || "keyup" === a2 || "keydown" === a2)
    return te(qe);
}
function Ee(a2, b2) {
  if ("click" === a2)
    return te(b2);
}
function Fe(a2, b2) {
  if ("input" === a2 || "change" === a2)
    return te(b2);
}
function Ge(a2, b2) {
  return a2 === b2 && (0 !== a2 || 1 / a2 === 1 / b2) || a2 !== a2 && b2 !== b2;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a2, b2) {
  if (He(a2, b2))
    return true;
  if ("object" !== typeof a2 || null === a2 || "object" !== typeof b2 || null === b2)
    return false;
  var c2 = Object.keys(a2), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++) {
    var e2 = c2[d2];
    if (!ja.call(b2, e2) || !He(a2[e2], b2[e2]))
      return false;
  }
  return true;
}
function Je(a2) {
  for (; a2 && a2.firstChild; )
    a2 = a2.firstChild;
  return a2;
}
function Ke(a2, b2) {
  var c2 = Je(a2);
  a2 = 0;
  for (var d2; c2; ) {
    if (3 === c2.nodeType) {
      d2 = a2 + c2.textContent.length;
      if (a2 <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a2 };
      a2 = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Je(c2);
  }
}
function Le(a2, b2) {
  return a2 && b2 ? a2 === b2 ? true : a2 && 3 === a2.nodeType ? false : b2 && 3 === b2.nodeType ? Le(a2, b2.parentNode) : "contains" in a2 ? a2.contains(b2) : a2.compareDocumentPosition ? !!(a2.compareDocumentPosition(b2) & 16) : false : false;
}
function Me() {
  for (var a2 = window, b2 = Xa(); b2 instanceof a2.HTMLIFrameElement; ) {
    try {
      var c2 = "string" === typeof b2.contentWindow.location.href;
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a2 = b2.contentWindow;
    else
      break;
    b2 = Xa(a2.document);
  }
  return b2;
}
function Ne(a2) {
  var b2 = a2 && a2.nodeName && a2.nodeName.toLowerCase();
  return b2 && ("input" === b2 && ("text" === a2.type || "search" === a2.type || "tel" === a2.type || "url" === a2.type || "password" === a2.type) || "textarea" === b2 || "true" === a2.contentEditable);
}
function Oe(a2) {
  var b2 = Me(), c2 = a2.focusedElem, d2 = a2.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Le(c2.ownerDocument.documentElement, c2)) {
    if (null !== d2 && Ne(c2)) {
      if (b2 = d2.start, a2 = d2.end, void 0 === a2 && (a2 = b2), "selectionStart" in c2)
        c2.selectionStart = b2, c2.selectionEnd = Math.min(a2, c2.value.length);
      else if (a2 = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a2.getSelection) {
        a2 = a2.getSelection();
        var e2 = c2.textContent.length, f2 = Math.min(d2.start, e2);
        d2 = void 0 === d2.end ? f2 : Math.min(d2.end, e2);
        !a2.extend && f2 > d2 && (e2 = d2, d2 = f2, f2 = e2);
        e2 = Ke(c2, f2);
        var g2 = Ke(
          c2,
          d2
        );
        e2 && g2 && (1 !== a2.rangeCount || a2.anchorNode !== e2.node || a2.anchorOffset !== e2.offset || a2.focusNode !== g2.node || a2.focusOffset !== g2.offset) && (b2 = b2.createRange(), b2.setStart(e2.node, e2.offset), a2.removeAllRanges(), f2 > d2 ? (a2.addRange(b2), a2.extend(g2.node, g2.offset)) : (b2.setEnd(g2.node, g2.offset), a2.addRange(b2)));
      }
    }
    b2 = [];
    for (a2 = c2; a2 = a2.parentNode; )
      1 === a2.nodeType && b2.push({ element: a2, left: a2.scrollLeft, top: a2.scrollTop });
    "function" === typeof c2.focus && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++)
      a2 = b2[c2], a2.element.scrollLeft = a2.left, a2.element.scrollTop = a2.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a2, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : 9 === c2.nodeType ? c2 : c2.ownerDocument;
  Te || null == Qe || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Ne(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Se && Ie(Se, d2) || (Se = d2, d2 = oe(Re, "onSelect"), 0 < d2.length && (b2 = new td("onSelect", "select", null, b2, c2), a2.push({ event: b2, listeners: d2 }), b2.target = Qe)));
}
function Ve(a2, b2) {
  var c2 = {};
  c2[a2.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a2] = "webkit" + b2;
  c2["Moz" + a2] = "moz" + b2;
  return c2;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a2) {
  if (Xe[a2])
    return Xe[a2];
  if (!We[a2])
    return a2;
  var b2 = We[a2], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in Ye)
      return Xe[a2] = b2[c2];
  return a2;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a2, b2) {
  df.set(a2, b2);
  fa(b2, [a2]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a2, b2, c2) {
  var d2 = a2.type || "unknown-event";
  a2.currentTarget = c2;
  Ub(d2, b2, void 0, a2);
  a2.currentTarget = null;
}
function se(a2, b2) {
  b2 = 0 !== (b2 & 4);
  for (var c2 = 0; c2 < a2.length; c2++) {
    var d2 = a2[c2], e2 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          nf(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Qb)
    throw a2 = Rb, Qb = false, Rb = null, a2;
}
function D$2(a2, b2) {
  var c2 = b2[of];
  void 0 === c2 && (c2 = b2[of] = /* @__PURE__ */ new Set());
  var d2 = a2 + "__bubble";
  c2.has(d2) || (pf(b2, a2, 2, false), c2.add(d2));
}
function qf(a2, b2, c2) {
  var d2 = 0;
  b2 && (d2 |= 4);
  pf(c2, a2, d2, b2);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a2) {
  if (!a2[rf]) {
    a2[rf] = true;
    da.forEach(function(b3) {
      "selectionchange" !== b3 && (mf.has(b3) || qf(b3, false, a2), qf(b3, true, a2));
    });
    var b2 = 9 === a2.nodeType ? a2 : a2.ownerDocument;
    null === b2 || b2[rf] || (b2[rf] = true, qf("selectionchange", false, b2));
  }
}
function pf(a2, b2, c2, d2) {
  switch (jd(b2)) {
    case 1:
      var e2 = ed;
      break;
    case 4:
      e2 = gd;
      break;
    default:
      e2 = fd;
  }
  c2 = e2.bind(null, b2, c2, a2);
  e2 = void 0;
  !Lb || "touchstart" !== b2 && "touchmove" !== b2 && "wheel" !== b2 || (e2 = true);
  d2 ? void 0 !== e2 ? a2.addEventListener(b2, c2, { capture: true, passive: e2 }) : a2.addEventListener(b2, c2, true) : void 0 !== e2 ? a2.addEventListener(b2, c2, { passive: e2 }) : a2.addEventListener(b2, c2, false);
}
function hd(a2, b2, c2, d2, e2) {
  var f2 = d2;
  if (0 === (b2 & 1) && 0 === (b2 & 2) && null !== d2)
    a:
      for (; ; ) {
        if (null === d2)
          return;
        var g2 = d2.tag;
        if (3 === g2 || 4 === g2) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e2 || 8 === h2.nodeType && h2.parentNode === e2)
            break;
          if (4 === g2)
            for (g2 = d2.return; null !== g2; ) {
              var k2 = g2.tag;
              if (3 === k2 || 4 === k2) {
                if (k2 = g2.stateNode.containerInfo, k2 === e2 || 8 === k2.nodeType && k2.parentNode === e2)
                  return;
              }
              g2 = g2.return;
            }
          for (; null !== h2; ) {
            g2 = Wc(h2);
            if (null === g2)
              return;
            k2 = g2.tag;
            if (5 === k2 || 6 === k2) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Jb(function() {
    var d3 = f2, e3 = xb(c2), g3 = [];
    a: {
      var h3 = df.get(a2);
      if (void 0 !== h3) {
        var k3 = td, n2 = a2;
        switch (a2) {
          case "keypress":
            if (0 === od(c2))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c2.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b2 & 4), J2 = !t2 && "scroll" === a2, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d3, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c2, e3), g3.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b2 & 7)) {
      a: {
        h3 = "mouseover" === a2 || "pointerover" === a2;
        k3 = "mouseout" === a2 || "pointerout" === a2;
        if (h3 && c2 !== wb && (n2 = c2.relatedTarget || c2.fromElement) && (Wc(n2) || n2[uf]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c2.relatedTarget || c2.toElement, k3 = d3, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d3;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a2 || "pointerover" === a2)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c2, e3);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e3) === d3 && (t2 = new t2(x2, w2 + "enter", n2, c2, e3), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2; )
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2; )
                  x2 = vf(x2), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g3, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g3, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d3 ? ue(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type)
          var na = ve;
        else if (me(h3))
          if (we)
            na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
        else
          (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
        if (na && (na = na(a2, d3))) {
          ne(g3, na, c2, e3);
          break a;
        }
        xa && xa(a2, h3, d3);
        "focusout" === a2 && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d3 ? ue(d3) : window;
      switch (a2) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable)
            Qe = xa, Re = d3, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c2, e3);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c2, e3);
      }
      var $a;
      if (ae)
        b: {
          switch (a2) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
      else
        ie ? ge(a2, c2) && (ba = "onCompositionEnd") : "keydown" === a2 && 229 === c2.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c2.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e3, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d3, ba), 0 < xa.length && (ba = new Ld(ba, a2, null, c2, e3), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c2), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a2, c2) : ke(a2, c2))
        d3 = oe(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Ld("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = $a);
    }
    se(g3, b2);
  });
}
function tf(a2, b2, c2) {
  return { instance: a2, listener: b2, currentTarget: c2 };
}
function oe(a2, b2) {
  for (var c2 = b2 + "Capture", d2 = []; null !== a2; ) {
    var e2 = a2, f2 = e2.stateNode;
    5 === e2.tag && null !== f2 && (e2 = f2, f2 = Kb(a2, c2), null != f2 && d2.unshift(tf(a2, f2, e2)), f2 = Kb(a2, b2), null != f2 && d2.push(tf(a2, f2, e2)));
    a2 = a2.return;
  }
  return d2;
}
function vf(a2) {
  if (null === a2)
    return null;
  do
    a2 = a2.return;
  while (a2 && 5 !== a2.tag);
  return a2 ? a2 : null;
}
function wf(a2, b2, c2, d2, e2) {
  for (var f2 = b2._reactName, g2 = []; null !== c2 && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d2)
      break;
    5 === h2.tag && null !== l2 && (h2 = l2, e2 ? (k2 = Kb(c2, f2), null != k2 && g2.unshift(tf(c2, k2, h2))) : e2 || (k2 = Kb(c2, f2), null != k2 && g2.push(tf(c2, k2, h2))));
    c2 = c2.return;
  }
  0 !== g2.length && a2.push({ event: b2, listeners: g2 });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a2) {
  return ("string" === typeof a2 ? a2 : "" + a2).replace(xf, "\n").replace(yf, "");
}
function Af(a2, b2, c2) {
  b2 = zf(b2);
  if (zf(a2) !== b2 && c2)
    throw Error(p$7(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a2, b2) {
  return "textarea" === a2 || "noscript" === a2 || "string" === typeof b2.children || "number" === typeof b2.children || "object" === typeof b2.dangerouslySetInnerHTML && null !== b2.dangerouslySetInnerHTML && null != b2.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a2) {
  return Hf.resolve(null).then(a2).catch(If);
} : Ff;
function If(a2) {
  setTimeout(function() {
    throw a2;
  });
}
function Kf(a2, b2) {
  var c2 = b2, d2 = 0;
  do {
    var e2 = c2.nextSibling;
    a2.removeChild(c2);
    if (e2 && 8 === e2.nodeType)
      if (c2 = e2.data, "/$" === c2) {
        if (0 === d2) {
          a2.removeChild(e2);
          bd(b2);
          return;
        }
        d2--;
      } else
        "$" !== c2 && "$?" !== c2 && "$!" !== c2 || d2++;
    c2 = e2;
  } while (c2);
  bd(b2);
}
function Lf(a2) {
  for (; null != a2; a2 = a2.nextSibling) {
    var b2 = a2.nodeType;
    if (1 === b2 || 3 === b2)
      break;
    if (8 === b2) {
      b2 = a2.data;
      if ("$" === b2 || "$!" === b2 || "$?" === b2)
        break;
      if ("/$" === b2)
        return null;
    }
  }
  return a2;
}
function Mf(a2) {
  a2 = a2.previousSibling;
  for (var b2 = 0; a2; ) {
    if (8 === a2.nodeType) {
      var c2 = a2.data;
      if ("$" === c2 || "$!" === c2 || "$?" === c2) {
        if (0 === b2)
          return a2;
        b2--;
      } else
        "/$" === c2 && b2++;
    }
    a2 = a2.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a2) {
  var b2 = a2[Of];
  if (b2)
    return b2;
  for (var c2 = a2.parentNode; c2; ) {
    if (b2 = c2[uf] || c2[Of]) {
      c2 = b2.alternate;
      if (null !== b2.child || null !== c2 && null !== c2.child)
        for (a2 = Mf(a2); null !== a2; ) {
          if (c2 = a2[Of])
            return c2;
          a2 = Mf(a2);
        }
      return b2;
    }
    a2 = c2;
    c2 = a2.parentNode;
  }
  return null;
}
function Cb(a2) {
  a2 = a2[Of] || a2[uf];
  return !a2 || 5 !== a2.tag && 6 !== a2.tag && 13 !== a2.tag && 3 !== a2.tag ? null : a2;
}
function ue(a2) {
  if (5 === a2.tag || 6 === a2.tag)
    return a2.stateNode;
  throw Error(p$7(33));
}
function Db(a2) {
  return a2[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a2) {
  return { current: a2 };
}
function E$1(a2) {
  0 > Tf || (a2.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G$1(a2, b2) {
  Tf++;
  Sf[Tf] = a2.current;
  a2.current = b2;
}
var Vf = {}, H$1 = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a2, b2) {
  var c2 = a2.type.contextTypes;
  if (!c2)
    return Vf;
  var d2 = a2.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c2)
    e2[f2] = b2[f2];
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b2, a2.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Zf(a2) {
  a2 = a2.childContextTypes;
  return null !== a2 && void 0 !== a2;
}
function $f() {
  E$1(Wf);
  E$1(H$1);
}
function ag(a2, b2, c2) {
  if (H$1.current !== Vf)
    throw Error(p$7(168));
  G$1(H$1, b2);
  G$1(Wf, c2);
}
function bg(a2, b2, c2) {
  var d2 = a2.stateNode;
  b2 = b2.childContextTypes;
  if ("function" !== typeof d2.getChildContext)
    return c2;
  d2 = d2.getChildContext();
  for (var e2 in d2)
    if (!(e2 in b2))
      throw Error(p$7(108, Ra(a2) || "Unknown", e2));
  return A$2({}, c2, d2);
}
function cg(a2) {
  a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H$1.current;
  G$1(H$1, a2);
  G$1(Wf, Wf.current);
  return true;
}
function dg(a2, b2, c2) {
  var d2 = a2.stateNode;
  if (!d2)
    throw Error(p$7(169));
  c2 ? (a2 = bg(a2, b2, Xf), d2.__reactInternalMemoizedMergedChildContext = a2, E$1(Wf), E$1(H$1), G$1(H$1, a2)) : E$1(Wf);
  G$1(Wf, c2);
}
var eg = null, fg = false, gg = false;
function hg(a2) {
  null === eg ? eg = [a2] : eg.push(a2);
}
function ig(a2) {
  fg = true;
  hg(a2);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a2 = 0, b2 = C$3;
    try {
      var c2 = eg;
      for (C$3 = 1; a2 < c2.length; a2++) {
        var d2 = c2[a2];
        do
          d2 = d2(true);
        while (null !== d2);
      }
      eg = null;
      fg = false;
    } catch (e2) {
      throw null !== eg && (eg = eg.slice(a2 + 1)), ac(fc, jg), e2;
    } finally {
      C$3 = b2, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a2, b2) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a2;
  ng = b2;
}
function ug(a2, b2, c2) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a2;
  var d2 = rg;
  a2 = sg;
  var e2 = 32 - oc(d2) - 1;
  d2 &= ~(1 << e2);
  c2 += 1;
  var f2 = 32 - oc(b2) + e2;
  if (30 < f2) {
    var g2 = e2 - e2 % 5;
    f2 = (d2 & (1 << g2) - 1).toString(32);
    d2 >>= g2;
    e2 -= g2;
    rg = 1 << 32 - oc(b2) + e2 | c2 << e2 | d2;
    sg = f2 + a2;
  } else
    rg = 1 << f2 | c2 << e2 | d2, sg = a2;
}
function vg(a2) {
  null !== a2.return && (tg(a2, 1), ug(a2, 1, 0));
}
function wg(a2) {
  for (; a2 === mg; )
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a2 === qg; )
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I$1 = false, zg = null;
function Ag(a2, b2) {
  var c2 = Bg(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a2;
  b2 = a2.deletions;
  null === b2 ? (a2.deletions = [c2], a2.flags |= 16) : b2.push(c2);
}
function Cg(a2, b2) {
  switch (a2.tag) {
    case 5:
      var c2 = a2.type;
      b2 = 1 !== b2.nodeType || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return null !== b2 ? (a2.stateNode = b2, xg = a2, yg = Lf(b2.firstChild), true) : false;
    case 6:
      return b2 = "" === a2.pendingProps || 3 !== b2.nodeType ? null : b2, null !== b2 ? (a2.stateNode = b2, xg = a2, yg = null, true) : false;
    case 13:
      return b2 = 8 !== b2.nodeType ? null : b2, null !== b2 ? (c2 = null !== qg ? { id: rg, overflow: sg } : null, a2.memoizedState = { dehydrated: b2, treeContext: c2, retryLane: 1073741824 }, c2 = Bg(18, null, null, 0), c2.stateNode = b2, c2.return = a2, a2.child = c2, xg = a2, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a2) {
  return 0 !== (a2.mode & 1) && 0 === (a2.flags & 128);
}
function Eg(a2) {
  if (I$1) {
    var b2 = yg;
    if (b2) {
      var c2 = b2;
      if (!Cg(a2, b2)) {
        if (Dg(a2))
          throw Error(p$7(418));
        b2 = Lf(c2.nextSibling);
        var d2 = xg;
        b2 && Cg(a2, b2) ? Ag(d2, c2) : (a2.flags = a2.flags & -4097 | 2, I$1 = false, xg = a2);
      }
    } else {
      if (Dg(a2))
        throw Error(p$7(418));
      a2.flags = a2.flags & -4097 | 2;
      I$1 = false;
      xg = a2;
    }
  }
}
function Fg(a2) {
  for (a2 = a2.return; null !== a2 && 5 !== a2.tag && 3 !== a2.tag && 13 !== a2.tag; )
    a2 = a2.return;
  xg = a2;
}
function Gg(a2) {
  if (a2 !== xg)
    return false;
  if (!I$1)
    return Fg(a2), I$1 = true, false;
  var b2;
  (b2 = 3 !== a2.tag) && !(b2 = 5 !== a2.tag) && (b2 = a2.type, b2 = "head" !== b2 && "body" !== b2 && !Ef(a2.type, a2.memoizedProps));
  if (b2 && (b2 = yg)) {
    if (Dg(a2))
      throw Hg(), Error(p$7(418));
    for (; b2; )
      Ag(a2, b2), b2 = Lf(b2.nextSibling);
  }
  Fg(a2);
  if (13 === a2.tag) {
    a2 = a2.memoizedState;
    a2 = null !== a2 ? a2.dehydrated : null;
    if (!a2)
      throw Error(p$7(317));
    a: {
      a2 = a2.nextSibling;
      for (b2 = 0; a2; ) {
        if (8 === a2.nodeType) {
          var c2 = a2.data;
          if ("/$" === c2) {
            if (0 === b2) {
              yg = Lf(a2.nextSibling);
              break a;
            }
            b2--;
          } else
            "$" !== c2 && "$!" !== c2 && "$?" !== c2 || b2++;
        }
        a2 = a2.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a2.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a2 = yg; a2; )
    a2 = Lf(a2.nextSibling);
}
function Ig() {
  yg = xg = null;
  I$1 = false;
}
function Jg(a2) {
  null === zg ? zg = [a2] : zg.push(a2);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a2, b2) {
  if (a2 && a2.defaultProps) {
    b2 = A$2({}, b2);
    a2 = a2.defaultProps;
    for (var c2 in a2)
      void 0 === b2[c2] && (b2[c2] = a2[c2]);
    return b2;
  }
  return b2;
}
var Mg = Uf(null), Ng = null, Og = null, Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a2) {
  var b2 = Mg.current;
  E$1(Mg);
  a2._currentValue = b2;
}
function Sg(a2, b2, c2) {
  for (; null !== a2; ) {
    var d2 = a2.alternate;
    (a2.childLanes & b2) !== b2 ? (a2.childLanes |= b2, null !== d2 && (d2.childLanes |= b2)) : null !== d2 && (d2.childLanes & b2) !== b2 && (d2.childLanes |= b2);
    if (a2 === c2)
      break;
    a2 = a2.return;
  }
}
function Tg(a2, b2) {
  Ng = a2;
  Pg = Og = null;
  a2 = a2.dependencies;
  null !== a2 && null !== a2.firstContext && (0 !== (a2.lanes & b2) && (Ug = true), a2.firstContext = null);
}
function Vg(a2) {
  var b2 = a2._currentValue;
  if (Pg !== a2)
    if (a2 = { context: a2, memoizedValue: b2, next: null }, null === Og) {
      if (null === Ng)
        throw Error(p$7(308));
      Og = a2;
      Ng.dependencies = { lanes: 0, firstContext: a2 };
    } else
      Og = Og.next = a2;
  return b2;
}
var Wg = null;
function Xg(a2) {
  null === Wg ? Wg = [a2] : Wg.push(a2);
}
function Yg(a2, b2, c2, d2) {
  var e2 = b2.interleaved;
  null === e2 ? (c2.next = c2, Xg(b2)) : (c2.next = e2.next, e2.next = c2);
  b2.interleaved = c2;
  return Zg(a2, d2);
}
function Zg(a2, b2) {
  a2.lanes |= b2;
  var c2 = a2.alternate;
  null !== c2 && (c2.lanes |= b2);
  c2 = a2;
  for (a2 = a2.return; null !== a2; )
    a2.childLanes |= b2, c2 = a2.alternate, null !== c2 && (c2.childLanes |= b2), c2 = a2, a2 = a2.return;
  return 3 === c2.tag ? c2.stateNode : null;
}
var $g = false;
function ah(a2) {
  a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function bh(a2, b2) {
  a2 = a2.updateQueue;
  b2.updateQueue === a2 && (b2.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
}
function ch(a2, b2) {
  return { eventTime: a2, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function dh(a2, b2, c2) {
  var d2 = a2.updateQueue;
  if (null === d2)
    return null;
  d2 = d2.shared;
  if (0 !== (K & 2)) {
    var e2 = d2.pending;
    null === e2 ? b2.next = b2 : (b2.next = e2.next, e2.next = b2);
    d2.pending = b2;
    return Zg(a2, c2);
  }
  e2 = d2.interleaved;
  null === e2 ? (b2.next = b2, Xg(d2)) : (b2.next = e2.next, e2.next = b2);
  d2.interleaved = b2;
  return Zg(a2, c2);
}
function eh(a2, b2, c2) {
  b2 = b2.updateQueue;
  if (null !== b2 && (b2 = b2.shared, 0 !== (c2 & 4194240))) {
    var d2 = b2.lanes;
    d2 &= a2.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a2, c2);
  }
}
function fh(a2, b2) {
  var c2 = a2.updateQueue, d2 = a2.alternate;
  if (null !== d2 && (d2 = d2.updateQueue, c2 === d2)) {
    var e2 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (null !== c2) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        null === f2 ? e2 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (null !== c2);
      null === f2 ? e2 = f2 = b2 : f2 = f2.next = b2;
    } else
      e2 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a2.updateQueue = c2;
    return;
  }
  a2 = c2.lastBaseUpdate;
  null === a2 ? c2.firstBaseUpdate = b2 : a2.next = b2;
  c2.lastBaseUpdate = b2;
}
function gh(a2, b2, c2, d2) {
  var e2 = a2.updateQueue;
  $g = false;
  var f2 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (null !== h2) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g2 ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var m2 = a2.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g2 && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e2.baseState;
    g2 = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d2 & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a2, t2 = h2;
          r2 = b2;
          y2 = c2;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A$2({}, q2, r2);
              break a;
            case 2:
              $g = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a2.flags |= 64, r2 = e2.effects, null === r2 ? e2.effects = [h2] : r2.push(h2));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g2 |= r2;
      h2 = h2.next;
      if (null === h2)
        if (h2 = e2.shared.pending, null === h2)
          break;
        else
          r2 = h2, h2 = r2.next, r2.next = null, e2.lastBaseUpdate = r2, e2.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = m2;
    b2 = e2.shared.interleaved;
    if (null !== b2) {
      e2 = b2;
      do
        g2 |= e2.lane, e2 = e2.next;
      while (e2 !== b2);
    } else
      null === f2 && (e2.shared.lanes = 0);
    hh |= g2;
    a2.lanes = g2;
    a2.memoizedState = q2;
  }
}
function ih(a2, b2, c2) {
  a2 = b2.effects;
  b2.effects = null;
  if (null !== a2)
    for (b2 = 0; b2 < a2.length; b2++) {
      var d2 = a2[b2], e2 = d2.callback;
      if (null !== e2) {
        d2.callback = null;
        d2 = c2;
        if ("function" !== typeof e2)
          throw Error(p$7(191, e2));
        e2.call(d2);
      }
    }
}
var jh = new aa.Component().refs;
function kh(a2, b2, c2, d2) {
  b2 = a2.memoizedState;
  c2 = c2(d2, b2);
  c2 = null === c2 || void 0 === c2 ? b2 : A$2({}, b2, c2);
  a2.memoizedState = c2;
  0 === a2.lanes && (a2.updateQueue.baseState = c2);
}
var nh = { isMounted: function(a2) {
  return (a2 = a2._reactInternals) ? Vb(a2) === a2 : false;
}, enqueueSetState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = L$1(), e2 = lh(a2), f2 = ch(d2, e2);
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a2, f2, e2);
  null !== b2 && (mh(b2, a2, e2, d2), eh(b2, a2, e2));
}, enqueueReplaceState: function(a2, b2, c2) {
  a2 = a2._reactInternals;
  var d2 = L$1(), e2 = lh(a2), f2 = ch(d2, e2);
  f2.tag = 1;
  f2.payload = b2;
  void 0 !== c2 && null !== c2 && (f2.callback = c2);
  b2 = dh(a2, f2, e2);
  null !== b2 && (mh(b2, a2, e2, d2), eh(b2, a2, e2));
}, enqueueForceUpdate: function(a2, b2) {
  a2 = a2._reactInternals;
  var c2 = L$1(), d2 = lh(a2), e2 = ch(c2, d2);
  e2.tag = 2;
  void 0 !== b2 && null !== b2 && (e2.callback = b2);
  b2 = dh(a2, e2, d2);
  null !== b2 && (mh(b2, a2, d2, c2), eh(b2, a2, d2));
} };
function oh(a2, b2, c2, d2, e2, f2, g2) {
  a2 = a2.stateNode;
  return "function" === typeof a2.shouldComponentUpdate ? a2.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !Ie(c2, d2) || !Ie(e2, f2) : true;
}
function ph(a2, b2, c2) {
  var d2 = false, e2 = Vf;
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = Vg(f2) : (e2 = Zf(b2) ? Xf : H$1.current, d2 = b2.contextTypes, f2 = (d2 = null !== d2 && void 0 !== d2) ? Yf(a2, e2) : Vf);
  b2 = new b2(c2, f2);
  a2.memoizedState = null !== b2.state && void 0 !== b2.state ? b2.state : null;
  b2.updater = nh;
  a2.stateNode = b2;
  b2._reactInternals = a2;
  d2 && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e2, a2.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function qh(a2, b2, c2, d2) {
  a2 = b2.state;
  "function" === typeof b2.componentWillReceiveProps && b2.componentWillReceiveProps(c2, d2);
  "function" === typeof b2.UNSAFE_componentWillReceiveProps && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a2 && nh.enqueueReplaceState(b2, b2.state, null);
}
function rh(a2, b2, c2, d2) {
  var e2 = a2.stateNode;
  e2.props = c2;
  e2.state = a2.memoizedState;
  e2.refs = jh;
  ah(a2);
  var f2 = b2.contextType;
  "object" === typeof f2 && null !== f2 ? e2.context = Vg(f2) : (f2 = Zf(b2) ? Xf : H$1.current, e2.context = Yf(a2, f2));
  e2.state = a2.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  "function" === typeof f2 && (kh(a2, b2, f2, c2), e2.state = a2.memoizedState);
  "function" === typeof b2.getDerivedStateFromProps || "function" === typeof e2.getSnapshotBeforeUpdate || "function" !== typeof e2.UNSAFE_componentWillMount && "function" !== typeof e2.componentWillMount || (b2 = e2.state, "function" === typeof e2.componentWillMount && e2.componentWillMount(), "function" === typeof e2.UNSAFE_componentWillMount && e2.UNSAFE_componentWillMount(), b2 !== e2.state && nh.enqueueReplaceState(e2, e2.state, null), gh(a2, c2, e2, d2), e2.state = a2.memoizedState);
  "function" === typeof e2.componentDidMount && (a2.flags |= 4194308);
}
function sh(a2, b2, c2) {
  a2 = c2.ref;
  if (null !== a2 && "function" !== typeof a2 && "object" !== typeof a2) {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (1 !== c2.tag)
          throw Error(p$7(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(p$7(147, a2));
      var e2 = d2, f2 = "" + a2;
      if (null !== b2 && null !== b2.ref && "function" === typeof b2.ref && b2.ref._stringRef === f2)
        return b2.ref;
      b2 = function(a3) {
        var b3 = e2.refs;
        b3 === jh && (b3 = e2.refs = {});
        null === a3 ? delete b3[f2] : b3[f2] = a3;
      };
      b2._stringRef = f2;
      return b2;
    }
    if ("string" !== typeof a2)
      throw Error(p$7(284));
    if (!c2._owner)
      throw Error(p$7(290, a2));
  }
  return a2;
}
function th(a2, b2) {
  a2 = Object.prototype.toString.call(b2);
  throw Error(p$7(31, "[object Object]" === a2 ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a2));
}
function uh(a2) {
  var b2 = a2._init;
  return b2(a2._payload);
}
function vh(a2) {
  function b2(b3, c3) {
    if (a2) {
      var d3 = b3.deletions;
      null === d3 ? (b3.deletions = [c3], b3.flags |= 16) : d3.push(c3);
    }
  }
  function c2(c3, d3) {
    if (!a2)
      return null;
    for (; null !== d3; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a3, b3) {
    for (a3 = /* @__PURE__ */ new Map(); null !== b3; )
      null !== b3.key ? a3.set(b3.key, b3) : a3.set(b3.index, b3), b3 = b3.sibling;
    return a3;
  }
  function e2(a3, b3) {
    a3 = wh(a3, b3);
    a3.index = 0;
    a3.sibling = null;
    return a3;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a2)
      return b3.flags |= 1048576, c3;
    d3 = b3.alternate;
    if (null !== d3)
      return d3 = d3.index, d3 < c3 ? (b3.flags |= 2, c3) : d3;
    b3.flags |= 2;
    return c3;
  }
  function g2(b3) {
    a2 && null === b3.alternate && (b3.flags |= 2);
    return b3;
  }
  function h2(a3, b3, c3, d3) {
    if (null === b3 || 6 !== b3.tag)
      return b3 = xh(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function k2(a3, b3, c3, d3) {
    var f3 = c3.type;
    if (f3 === ya)
      return m2(a3, b3, c3.props.children, d3, c3.key);
    if (null !== b3 && (b3.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && uh(f3) === b3.type))
      return d3 = e2(b3, c3.props), d3.ref = sh(a3, b3, c3), d3.return = a3, d3;
    d3 = yh(c3.type, c3.key, c3.props, null, a3.mode, d3);
    d3.ref = sh(a3, b3, c3);
    d3.return = a3;
    return d3;
  }
  function l2(a3, b3, c3, d3) {
    if (null === b3 || 4 !== b3.tag || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = zh(c3, a3.mode, d3), b3.return = a3, b3;
    b3 = e2(b3, c3.children || []);
    b3.return = a3;
    return b3;
  }
  function m2(a3, b3, c3, d3, f3) {
    if (null === b3 || 7 !== b3.tag)
      return b3 = Ah(c3, a3.mode, d3, f3), b3.return = a3, b3;
    b3 = e2(b3, c3);
    b3.return = a3;
    return b3;
  }
  function q2(a3, b3, c3) {
    if ("string" === typeof b3 && "" !== b3 || "number" === typeof b3)
      return b3 = xh("" + b3, a3.mode, c3), b3.return = a3, b3;
    if ("object" === typeof b3 && null !== b3) {
      switch (b3.$$typeof) {
        case va:
          return c3 = yh(b3.type, b3.key, b3.props, null, a3.mode, c3), c3.ref = sh(a3, null, b3), c3.return = a3, c3;
        case wa:
          return b3 = zh(b3, a3.mode, c3), b3.return = a3, b3;
        case Ha:
          var d3 = b3._init;
          return q2(a3, d3(b3._payload), c3);
      }
      if (eb(b3) || Ka(b3))
        return b3 = Ah(b3, a3.mode, c3, null), b3.return = a3, b3;
      th(a3, b3);
    }
    return null;
  }
  function r2(a3, b3, c3, d3) {
    var e3 = null !== b3 ? b3.key : null;
    if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3)
      return null !== e3 ? null : h2(a3, b3, "" + c3, d3);
    if ("object" === typeof c3 && null !== c3) {
      switch (c3.$$typeof) {
        case va:
          return c3.key === e3 ? k2(a3, b3, c3, d3) : null;
        case wa:
          return c3.key === e3 ? l2(a3, b3, c3, d3) : null;
        case Ha:
          return e3 = c3._init, r2(
            a3,
            b3,
            e3(c3._payload),
            d3
          );
      }
      if (eb(c3) || Ka(c3))
        return null !== e3 ? null : m2(a3, b3, c3, d3, null);
      th(a3, c3);
    }
    return null;
  }
  function y2(a3, b3, c3, d3, e3) {
    if ("string" === typeof d3 && "" !== d3 || "number" === typeof d3)
      return a3 = a3.get(c3) || null, h2(b3, a3, "" + d3, e3);
    if ("object" === typeof d3 && null !== d3) {
      switch (d3.$$typeof) {
        case va:
          return a3 = a3.get(null === d3.key ? c3 : d3.key) || null, k2(b3, a3, d3, e3);
        case wa:
          return a3 = a3.get(null === d3.key ? c3 : d3.key) || null, l2(b3, a3, d3, e3);
        case Ha:
          var f3 = d3._init;
          return y2(a3, b3, c3, f3(d3._payload), e3);
      }
      if (eb(d3) || Ka(d3))
        return a3 = a3.get(c3) || null, m2(b3, a3, d3, e3, null);
      th(b3, d3);
    }
    return null;
  }
  function n2(e3, g3, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g3, w2 = g3 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e3, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a2 && u2 && null === n3.alternate && b2(e3, u2);
      g3 = f2(n3, g3, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length)
      return c2(e3, u2), I$1 && tg(e3, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++)
        u2 = q2(e3, h3[w2], k3), null !== u2 && (g3 = f2(u2, g3, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I$1 && tg(e3, w2);
      return l3;
    }
    for (u2 = d2(e3, u2); w2 < h3.length; w2++)
      x2 = y2(u2, e3, w2, h3[w2], k3), null !== x2 && (a2 && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g3 = f2(x2, g3, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a2 && u2.forEach(function(a3) {
      return b2(e3, a3);
    });
    I$1 && tg(e3, w2);
    return l3;
  }
  function t2(e3, g3, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3)
      throw Error(p$7(150));
    h3 = l3.call(h3);
    if (null == h3)
      throw Error(p$7(151));
    for (var u2 = l3 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e3, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a2 && m3 && null === t3.alternate && b2(e3, m3);
      g3 = f2(t3, g3, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c2(
        e3,
        m3
      ), I$1 && tg(e3, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next())
        n3 = q2(e3, n3.value, k3), null !== n3 && (g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I$1 && tg(e3, w2);
      return l3;
    }
    for (m3 = d2(e3, m3); !n3.done; w2++, n3 = h3.next())
      n3 = y2(m3, e3, w2, n3.value, k3), null !== n3 && (a2 && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f2(n3, g3, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a2 && m3.forEach(function(a3) {
      return b2(e3, a3);
    });
    I$1 && tg(e3, w2);
    return l3;
  }
  function J2(a3, d3, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d3; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c2(a3, l3.sibling);
                    d3 = e2(l3, f3.props.children);
                    d3.return = a3;
                    a3 = d3;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && uh(k3) === l3.type) {
                  c2(a3, l3.sibling);
                  d3 = e2(l3, f3.props);
                  d3.ref = sh(a3, l3, f3);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                }
                c2(a3, l3);
                break;
              } else
                b2(a3, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d3 = Ah(f3.props.children, a3.mode, h3, f3.key), d3.return = a3, a3 = d3) : (h3 = yh(f3.type, f3.key, f3.props, null, a3.mode, h3), h3.ref = sh(a3, d3, f3), h3.return = a3, a3 = h3);
          }
          return g2(a3);
        case wa:
          a: {
            for (l3 = f3.key; null !== d3; ) {
              if (d3.key === l3)
                if (4 === d3.tag && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a3, d3.sibling);
                  d3 = e2(d3, f3.children || []);
                  d3.return = a3;
                  a3 = d3;
                  break a;
                } else {
                  c2(a3, d3);
                  break;
                }
              else
                b2(a3, d3);
              d3 = d3.sibling;
            }
            d3 = zh(f3, a3.mode, h3);
            d3.return = a3;
            a3 = d3;
          }
          return g2(a3);
        case Ha:
          return l3 = f3._init, J2(a3, d3, l3(f3._payload), h3);
      }
      if (eb(f3))
        return n2(a3, d3, f3, h3);
      if (Ka(f3))
        return t2(a3, d3, f3, h3);
      th(a3, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d3 && 6 === d3.tag ? (c2(a3, d3.sibling), d3 = e2(d3, f3), d3.return = a3, a3 = d3) : (c2(a3, d3), d3 = xh(f3, a3.mode, h3), d3.return = a3, a3 = d3), g2(a3)) : c2(a3, d3);
  }
  return J2;
}
var Bh = vh(true), Ch = vh(false), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
function Hh(a2) {
  if (a2 === Dh)
    throw Error(p$7(174));
  return a2;
}
function Ih(a2, b2) {
  G$1(Gh, b2);
  G$1(Fh, a2);
  G$1(Eh, Dh);
  a2 = b2.nodeType;
  switch (a2) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : lb(null, "");
      break;
    default:
      a2 = 8 === a2 ? b2.parentNode : b2, b2 = a2.namespaceURI || null, a2 = a2.tagName, b2 = lb(b2, a2);
  }
  E$1(Eh);
  G$1(Eh, b2);
}
function Jh() {
  E$1(Eh);
  E$1(Fh);
  E$1(Gh);
}
function Kh(a2) {
  Hh(Gh.current);
  var b2 = Hh(Eh.current);
  var c2 = lb(b2, a2.type);
  b2 !== c2 && (G$1(Fh, a2), G$1(Eh, c2));
}
function Lh(a2) {
  Fh.current === a2 && (E$1(Eh), E$1(Fh));
}
var M$1 = Uf(0);
function Mh(a2) {
  for (var b2 = a2; null !== b2; ) {
    if (13 === b2.tag) {
      var c2 = b2.memoizedState;
      if (null !== c2 && (c2 = c2.dehydrated, null === c2 || "$?" === c2.data || "$!" === c2.data))
        return b2;
    } else if (19 === b2.tag && void 0 !== b2.memoizedProps.revealOrder) {
      if (0 !== (b2.flags & 128))
        return b2;
    } else if (null !== b2.child) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a2)
      break;
    for (; null === b2.sibling; ) {
      if (null === b2.return || b2.return === a2)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a2 = 0; a2 < Nh.length; a2++)
    Nh[a2]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N$3 = null, O$1 = null, P$2 = null, Sh = false, Th = false, Uh = 0, Vh = 0;
function Q() {
  throw Error(p$7(321));
}
function Wh(a2, b2) {
  if (null === b2)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a2.length; c2++)
    if (!He(a2[c2], b2[c2]))
      return false;
  return true;
}
function Xh(a2, b2, c2, d2, e2, f2) {
  Rh = f2;
  N$3 = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  Ph.current = null === a2 || null === a2.memoizedState ? Yh : Zh;
  a2 = c2(d2, e2);
  if (Th) {
    f2 = 0;
    do {
      Th = false;
      Uh = 0;
      if (25 <= f2)
        throw Error(p$7(301));
      f2 += 1;
      P$2 = O$1 = null;
      b2.updateQueue = null;
      Ph.current = $h;
      a2 = c2(d2, e2);
    } while (Th);
  }
  Ph.current = ai;
  b2 = null !== O$1 && null !== O$1.next;
  Rh = 0;
  P$2 = O$1 = N$3 = null;
  Sh = false;
  if (b2)
    throw Error(p$7(300));
  return a2;
}
function bi() {
  var a2 = 0 !== Uh;
  Uh = 0;
  return a2;
}
function ci() {
  var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === P$2 ? N$3.memoizedState = P$2 = a2 : P$2 = P$2.next = a2;
  return P$2;
}
function di() {
  if (null === O$1) {
    var a2 = N$3.alternate;
    a2 = null !== a2 ? a2.memoizedState : null;
  } else
    a2 = O$1.next;
  var b2 = null === P$2 ? N$3.memoizedState : P$2.next;
  if (null !== b2)
    P$2 = b2, O$1 = a2;
  else {
    if (null === a2)
      throw Error(p$7(310));
    O$1 = a2;
    a2 = { memoizedState: O$1.memoizedState, baseState: O$1.baseState, baseQueue: O$1.baseQueue, queue: O$1.queue, next: null };
    null === P$2 ? N$3.memoizedState = P$2 = a2 : P$2 = P$2.next = a2;
  }
  return P$2;
}
function ei(a2, b2) {
  return "function" === typeof b2 ? b2(a2) : b2;
}
function fi(a2) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$7(311));
  c2.lastRenderedReducer = a2;
  var d2 = O$1, e2 = d2.baseQueue, f2 = c2.pending;
  if (null !== f2) {
    if (null !== e2) {
      var g2 = e2.next;
      e2.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e2 = f2;
    c2.pending = null;
  }
  if (null !== e2) {
    f2 = e2.next;
    d2 = d2.baseState;
    var h2 = g2 = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Rh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d2 = l2.hasEagerState ? l2.eagerState : a2(d2, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g2 = d2) : k2 = k2.next = q2;
        N$3.lanes |= m2;
        hh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g2 = d2 : k2.next = h2;
    He(d2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = d2;
    b2.baseState = g2;
    b2.baseQueue = k2;
    c2.lastRenderedState = d2;
  }
  a2 = c2.interleaved;
  if (null !== a2) {
    e2 = a2;
    do
      f2 = e2.lane, N$3.lanes |= f2, hh |= f2, e2 = e2.next;
    while (e2 !== a2);
  } else
    null === e2 && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function gi(a2) {
  var b2 = di(), c2 = b2.queue;
  if (null === c2)
    throw Error(p$7(311));
  c2.lastRenderedReducer = a2;
  var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
  if (null !== e2) {
    c2.pending = null;
    var g2 = e2 = e2.next;
    do
      f2 = a2(f2, g2.action), g2 = g2.next;
    while (g2 !== e2);
    He(f2, b2.memoizedState) || (Ug = true);
    b2.memoizedState = f2;
    null === b2.baseQueue && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function hi() {
}
function ii(a2, b2) {
  var c2 = N$3, d2 = di(), e2 = b2(), f2 = !He(d2.memoizedState, e2);
  f2 && (d2.memoizedState = e2, Ug = true);
  d2 = d2.queue;
  ji(ki.bind(null, c2, d2, a2), [a2]);
  if (d2.getSnapshot !== b2 || f2 || null !== P$2 && P$2.memoizedState.tag & 1) {
    c2.flags |= 2048;
    li(9, mi.bind(null, c2, d2, e2, b2), void 0, null);
    if (null === R$2)
      throw Error(p$7(349));
    0 !== (Rh & 30) || ni(c2, b2, e2);
  }
  return e2;
}
function ni(a2, b2, c2) {
  a2.flags |= 16384;
  a2 = { getSnapshot: b2, value: c2 };
  b2 = N$3.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N$3.updateQueue = b2, b2.stores = [a2]) : (c2 = b2.stores, null === c2 ? b2.stores = [a2] : c2.push(a2));
}
function mi(a2, b2, c2, d2) {
  b2.value = c2;
  b2.getSnapshot = d2;
  oi(b2) && pi(a2);
}
function ki(a2, b2, c2) {
  return c2(function() {
    oi(b2) && pi(a2);
  });
}
function oi(a2) {
  var b2 = a2.getSnapshot;
  a2 = a2.value;
  try {
    var c2 = b2();
    return !He(a2, c2);
  } catch (d2) {
    return true;
  }
}
function pi(a2) {
  var b2 = Zg(a2, 1);
  null !== b2 && mh(b2, a2, 1, -1);
}
function qi(a2) {
  var b2 = ci();
  "function" === typeof a2 && (a2 = a2());
  b2.memoizedState = b2.baseState = a2;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a2 };
  b2.queue = a2;
  a2 = a2.dispatch = ri.bind(null, N$3, a2);
  return [b2.memoizedState, a2];
}
function li(a2, b2, c2, d2) {
  a2 = { tag: a2, create: b2, destroy: c2, deps: d2, next: null };
  b2 = N$3.updateQueue;
  null === b2 ? (b2 = { lastEffect: null, stores: null }, N$3.updateQueue = b2, b2.lastEffect = a2.next = a2) : (c2 = b2.lastEffect, null === c2 ? b2.lastEffect = a2.next = a2 : (d2 = c2.next, c2.next = a2, a2.next = d2, b2.lastEffect = a2));
  return a2;
}
function si() {
  return di().memoizedState;
}
function ti(a2, b2, c2, d2) {
  var e2 = ci();
  N$3.flags |= a2;
  e2.memoizedState = li(1 | b2, c2, void 0, void 0 === d2 ? null : d2);
}
function ui(a2, b2, c2, d2) {
  var e2 = di();
  d2 = void 0 === d2 ? null : d2;
  var f2 = void 0;
  if (null !== O$1) {
    var g2 = O$1.memoizedState;
    f2 = g2.destroy;
    if (null !== d2 && Wh(d2, g2.deps)) {
      e2.memoizedState = li(b2, c2, f2, d2);
      return;
    }
  }
  N$3.flags |= a2;
  e2.memoizedState = li(1 | b2, c2, f2, d2);
}
function vi(a2, b2) {
  return ti(8390656, 8, a2, b2);
}
function ji(a2, b2) {
  return ui(2048, 8, a2, b2);
}
function wi(a2, b2) {
  return ui(4, 2, a2, b2);
}
function xi(a2, b2) {
  return ui(4, 4, a2, b2);
}
function yi(a2, b2) {
  if ("function" === typeof b2)
    return a2 = a2(), b2(a2), function() {
      b2(null);
    };
  if (null !== b2 && void 0 !== b2)
    return a2 = a2(), b2.current = a2, function() {
      b2.current = null;
    };
}
function zi(a2, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
  return ui(4, 4, yi.bind(null, b2, a2), c2);
}
function Ai() {
}
function Bi(a2, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a2, b2];
  return a2;
}
function Ci(a2, b2) {
  var c2 = di();
  b2 = void 0 === b2 ? null : b2;
  var d2 = c2.memoizedState;
  if (null !== d2 && null !== b2 && Wh(b2, d2[1]))
    return d2[0];
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}
function Di(a2, b2, c2) {
  if (0 === (Rh & 21))
    return a2.baseState && (a2.baseState = false, Ug = true), a2.memoizedState = c2;
  He(c2, b2) || (c2 = yc(), N$3.lanes |= c2, hh |= c2, a2.baseState = true);
  return b2;
}
function Ei(a2, b2) {
  var c2 = C$3;
  C$3 = 0 !== c2 && 4 > c2 ? c2 : 4;
  a2(true);
  var d2 = Qh.transition;
  Qh.transition = {};
  try {
    a2(false), b2();
  } finally {
    C$3 = c2, Qh.transition = d2;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a2, b2, c2) {
  var d2 = lh(a2);
  c2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a2))
    Ii(b2, c2);
  else if (c2 = Yg(a2, b2, c2, d2), null !== c2) {
    var e2 = L$1();
    mh(c2, a2, d2, e2);
    Ji(c2, b2, d2);
  }
}
function ri(a2, b2, c2) {
  var d2 = lh(a2), e2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a2))
    Ii(b2, e2);
  else {
    var f2 = a2.alternate;
    if (0 === a2.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b2.lastRenderedReducer, null !== f2))
      try {
        var g2 = b2.lastRenderedState, h2 = f2(g2, c2);
        e2.hasEagerState = true;
        e2.eagerState = h2;
        if (He(h2, g2)) {
          var k2 = b2.interleaved;
          null === k2 ? (e2.next = e2, Xg(b2)) : (e2.next = k2.next, k2.next = e2);
          b2.interleaved = e2;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c2 = Yg(a2, b2, e2, d2);
    null !== c2 && (e2 = L$1(), mh(c2, a2, d2, e2), Ji(c2, b2, d2));
  }
}
function Hi(a2) {
  var b2 = a2.alternate;
  return a2 === N$3 || null !== b2 && b2 === N$3;
}
function Ii(a2, b2) {
  Th = Sh = true;
  var c2 = a2.pending;
  null === c2 ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
  a2.pending = b2;
}
function Ji(a2, b2, c2) {
  if (0 !== (c2 & 4194240)) {
    var d2 = b2.lanes;
    d2 &= a2.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Cc(a2, c2);
  }
}
var ai = { readContext: Vg, useCallback: Q, useContext: Q, useEffect: Q, useImperativeHandle: Q, useInsertionEffect: Q, useLayoutEffect: Q, useMemo: Q, useReducer: Q, useRef: Q, useState: Q, useDebugValue: Q, useDeferredValue: Q, useTransition: Q, useMutableSource: Q, useSyncExternalStore: Q, useId: Q, unstable_isNewReconciler: false }, Yh = { readContext: Vg, useCallback: function(a2, b2) {
  ci().memoizedState = [a2, void 0 === b2 ? null : b2];
  return a2;
}, useContext: Vg, useEffect: vi, useImperativeHandle: function(a2, b2, c2) {
  c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
  return ti(
    4194308,
    4,
    yi.bind(null, b2, a2),
    c2
  );
}, useLayoutEffect: function(a2, b2) {
  return ti(4194308, 4, a2, b2);
}, useInsertionEffect: function(a2, b2) {
  return ti(4, 2, a2, b2);
}, useMemo: function(a2, b2) {
  var c2 = ci();
  b2 = void 0 === b2 ? null : b2;
  a2 = a2();
  c2.memoizedState = [a2, b2];
  return a2;
}, useReducer: function(a2, b2, c2) {
  var d2 = ci();
  b2 = void 0 !== c2 ? c2(b2) : b2;
  d2.memoizedState = d2.baseState = b2;
  a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b2 };
  d2.queue = a2;
  a2 = a2.dispatch = Gi.bind(null, N$3, a2);
  return [d2.memoizedState, a2];
}, useRef: function(a2) {
  var b2 = ci();
  a2 = { current: a2 };
  return b2.memoizedState = a2;
}, useState: qi, useDebugValue: Ai, useDeferredValue: function(a2) {
  return ci().memoizedState = a2;
}, useTransition: function() {
  var a2 = qi(false), b2 = a2[0];
  a2 = Ei.bind(null, a2[1]);
  ci().memoizedState = a2;
  return [b2, a2];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a2, b2, c2) {
  var d2 = N$3, e2 = ci();
  if (I$1) {
    if (void 0 === c2)
      throw Error(p$7(407));
    c2 = c2();
  } else {
    c2 = b2();
    if (null === R$2)
      throw Error(p$7(349));
    0 !== (Rh & 30) || ni(d2, b2, c2);
  }
  e2.memoizedState = c2;
  var f2 = { value: c2, getSnapshot: b2 };
  e2.queue = f2;
  vi(ki.bind(
    null,
    d2,
    f2,
    a2
  ), [a2]);
  d2.flags |= 2048;
  li(9, mi.bind(null, d2, f2, c2, b2), void 0, null);
  return c2;
}, useId: function() {
  var a2 = ci(), b2 = R$2.identifierPrefix;
  if (I$1) {
    var c2 = sg;
    var d2 = rg;
    c2 = (d2 & ~(1 << 32 - oc(d2) - 1)).toString(32) + c2;
    b2 = ":" + b2 + "R" + c2;
    c2 = Uh++;
    0 < c2 && (b2 += "H" + c2.toString(32));
    b2 += ":";
  } else
    c2 = Vh++, b2 = ":" + b2 + "r" + c2.toString(32) + ":";
  return a2.memoizedState = b2;
}, unstable_isNewReconciler: false }, Zh = {
  readContext: Vg,
  useCallback: Bi,
  useContext: Vg,
  useEffect: ji,
  useImperativeHandle: zi,
  useInsertionEffect: wi,
  useLayoutEffect: xi,
  useMemo: Ci,
  useReducer: fi,
  useRef: si,
  useState: function() {
    return fi(ei);
  },
  useDebugValue: Ai,
  useDeferredValue: function(a2) {
    var b2 = di();
    return Di(b2, O$1.memoizedState, a2);
  },
  useTransition: function() {
    var a2 = fi(ei)[0], b2 = di().memoizedState;
    return [a2, b2];
  },
  useMutableSource: hi,
  useSyncExternalStore: ii,
  useId: Fi,
  unstable_isNewReconciler: false
}, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
  return gi(ei);
}, useDebugValue: Ai, useDeferredValue: function(a2) {
  var b2 = di();
  return null === O$1 ? b2.memoizedState = a2 : Di(b2, O$1.memoizedState, a2);
}, useTransition: function() {
  var a2 = gi(ei)[0], b2 = di().memoizedState;
  return [a2, b2];
}, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: false };
function Ki(a2, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Pa(d2), d2 = d2.return;
    while (d2);
    var e2 = c2;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a2, source: b2, stack: e2, digest: null };
}
function Li(a2, b2, c2) {
  return { value: a2, source: null, stack: null != c2 ? c2 : null, digest: null != b2 ? b2 : null };
}
function Mi(a2, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a2, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    Pi || (Pi = true, Qi = d2);
    Mi(a2, b2);
  };
  return c2;
}
function Ri(a2, b2, c2) {
  c2 = ch(-1, c2);
  c2.tag = 3;
  var d2 = a2.type.getDerivedStateFromError;
  if ("function" === typeof d2) {
    var e2 = b2.value;
    c2.payload = function() {
      return d2(e2);
    };
    c2.callback = function() {
      Mi(a2, b2);
    };
  }
  var f2 = a2.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c2.callback = function() {
    Mi(a2, b2);
    "function" !== typeof d2 && (null === Si ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: null !== c3 ? c3 : "" });
  });
  return c2;
}
function Ti(a2, b2, c2) {
  var d2 = a2.pingCache;
  if (null === d2) {
    d2 = a2.pingCache = new Ni();
    var e2 = /* @__PURE__ */ new Set();
    d2.set(b2, e2);
  } else
    e2 = d2.get(b2), void 0 === e2 && (e2 = /* @__PURE__ */ new Set(), d2.set(b2, e2));
  e2.has(c2) || (e2.add(c2), a2 = Ui.bind(null, a2, b2, c2), b2.then(a2, a2));
}
function Vi(a2) {
  do {
    var b2;
    if (b2 = 13 === a2.tag)
      b2 = a2.memoizedState, b2 = null !== b2 ? null !== b2.dehydrated ? true : false : true;
    if (b2)
      return a2;
    a2 = a2.return;
  } while (null !== a2);
  return null;
}
function Wi(a2, b2, c2, d2, e2) {
  if (0 === (a2.mode & 1))
    return a2 === b2 ? a2.flags |= 65536 : (a2.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b2 = ch(-1, 1), b2.tag = 2, dh(c2, b2, 1))), c2.lanes |= 1), a2;
  a2.flags |= 65536;
  a2.lanes = e2;
  return a2;
}
var Xi = ua.ReactCurrentOwner, Ug = false;
function Yi(a2, b2, c2, d2) {
  b2.child = null === a2 ? Ch(b2, null, c2, d2) : Bh(b2, a2.child, c2, d2);
}
function Zi(a2, b2, c2, d2, e2) {
  c2 = c2.render;
  var f2 = b2.ref;
  Tg(b2, e2);
  d2 = Xh(a2, b2, c2, d2, f2, e2);
  c2 = bi();
  if (null !== a2 && !Ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -2053, a2.lanes &= ~e2, $i(a2, b2, e2);
  I$1 && c2 && vg(b2);
  b2.flags |= 1;
  Yi(a2, b2, d2, e2);
  return b2.child;
}
function aj(a2, b2, c2, d2, e2) {
  if (null === a2) {
    var f2 = c2.type;
    if ("function" === typeof f2 && !bj(f2) && void 0 === f2.defaultProps && null === c2.compare && void 0 === c2.defaultProps)
      return b2.tag = 15, b2.type = f2, cj(a2, b2, f2, d2, e2);
    a2 = yh(c2.type, null, d2, b2, b2.mode, e2);
    a2.ref = b2.ref;
    a2.return = b2;
    return b2.child = a2;
  }
  f2 = a2.child;
  if (0 === (a2.lanes & e2)) {
    var g2 = f2.memoizedProps;
    c2 = c2.compare;
    c2 = null !== c2 ? c2 : Ie;
    if (c2(g2, d2) && a2.ref === b2.ref)
      return $i(a2, b2, e2);
  }
  b2.flags |= 1;
  a2 = wh(f2, d2);
  a2.ref = b2.ref;
  a2.return = b2;
  return b2.child = a2;
}
function cj(a2, b2, c2, d2, e2) {
  if (null !== a2) {
    var f2 = a2.memoizedProps;
    if (Ie(f2, d2) && a2.ref === b2.ref)
      if (Ug = false, b2.pendingProps = d2 = f2, 0 !== (a2.lanes & e2))
        0 !== (a2.flags & 131072) && (Ug = true);
      else
        return b2.lanes = a2.lanes, $i(a2, b2, e2);
  }
  return dj(a2, b2, c2, d2, e2);
}
function ej(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.children, f2 = null !== a2 ? a2.memoizedState : null;
  if ("hidden" === d2.mode)
    if (0 === (b2.mode & 1))
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G$1(fj, gj), gj |= c2;
    else {
      if (0 === (c2 & 1073741824))
        return a2 = null !== f2 ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a2, cachePool: null, transitions: null }, b2.updateQueue = null, G$1(fj, gj), gj |= a2, null;
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d2 = null !== f2 ? f2.baseLanes : c2;
      G$1(fj, gj);
      gj |= d2;
    }
  else
    null !== f2 ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, G$1(fj, gj), gj |= d2;
  Yi(a2, b2, e2, c2);
  return b2.child;
}
function hj(a2, b2) {
  var c2 = b2.ref;
  if (null === a2 && null !== c2 || null !== a2 && a2.ref !== c2)
    b2.flags |= 512, b2.flags |= 2097152;
}
function dj(a2, b2, c2, d2, e2) {
  var f2 = Zf(c2) ? Xf : H$1.current;
  f2 = Yf(b2, f2);
  Tg(b2, e2);
  c2 = Xh(a2, b2, c2, d2, f2, e2);
  d2 = bi();
  if (null !== a2 && !Ug)
    return b2.updateQueue = a2.updateQueue, b2.flags &= -2053, a2.lanes &= ~e2, $i(a2, b2, e2);
  I$1 && d2 && vg(b2);
  b2.flags |= 1;
  Yi(a2, b2, c2, e2);
  return b2.child;
}
function ij(a2, b2, c2, d2, e2) {
  if (Zf(c2)) {
    var f2 = true;
    cg(b2);
  } else
    f2 = false;
  Tg(b2, e2);
  if (null === b2.stateNode)
    jj(a2, b2), ph(b2, c2, d2), rh(b2, c2, d2, e2), d2 = true;
  else if (null === a2) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = Vg(l2) : (l2 = Zf(c2) ? Xf : H$1.current, l2 = Yf(b2, l2));
    var m2 = c2.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== d2 || k2 !== l2) && qh(b2, g2, d2, l2);
    $g = false;
    var r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e2);
    k2 = b2.memoizedState;
    h2 !== d2 || r2 !== k2 || Wf.current || $g ? ("function" === typeof m2 && (kh(b2, c2, m2, d2), k2 = b2.memoizedState), (h2 = $g || oh(b2, c2, h2, d2, r2, k2, l2)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b2.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : ("function" === typeof g2.componentDidMount && (b2.flags |= 4194308), d2 = false);
  } else {
    g2 = b2.stateNode;
    bh(a2, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : Lg(b2.type, h2);
    g2.props = l2;
    q2 = b2.pendingProps;
    r2 = g2.context;
    k2 = c2.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = Vg(k2) : (k2 = Zf(c2) ? Xf : H$1.current, k2 = Yf(b2, k2));
    var y2 = c2.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && qh(b2, g2, d2, k2);
    $g = false;
    r2 = b2.memoizedState;
    g2.state = r2;
    gh(b2, d2, g2, e2);
    var n2 = b2.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || $g ? ("function" === typeof y2 && (kh(b2, c2, y2, d2), n2 = b2.memoizedState), (l2 = $g || oh(b2, c2, l2, d2, r2, n2, k2) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d2, n2, k2), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d2, n2, k2)), "function" === typeof g2.componentDidUpdate && (b2.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b2.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 1024), b2.memoizedProps = d2, b2.memoizedState = n2), g2.props = d2, g2.state = n2, g2.context = k2, d2 = l2) : ("function" !== typeof g2.componentDidUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a2.memoizedProps && r2 === a2.memoizedState || (b2.flags |= 1024), d2 = false);
  }
  return kj(a2, b2, c2, d2, f2, e2);
}
function kj(a2, b2, c2, d2, e2, f2) {
  hj(a2, b2);
  var g2 = 0 !== (b2.flags & 128);
  if (!d2 && !g2)
    return e2 && dg(b2, c2, false), $i(a2, b2, f2);
  d2 = b2.stateNode;
  Xi.current = b2;
  var h2 = g2 && "function" !== typeof c2.getDerivedStateFromError ? null : d2.render();
  b2.flags |= 1;
  null !== a2 && g2 ? (b2.child = Bh(b2, a2.child, null, f2), b2.child = Bh(b2, null, h2, f2)) : Yi(a2, b2, h2, f2);
  b2.memoizedState = d2.state;
  e2 && dg(b2, c2, true);
  return b2.child;
}
function lj(a2) {
  var b2 = a2.stateNode;
  b2.pendingContext ? ag(a2, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && ag(a2, b2.context, false);
  Ih(a2, b2.containerInfo);
}
function mj(a2, b2, c2, d2, e2) {
  Ig();
  Jg(e2);
  b2.flags |= 256;
  Yi(a2, b2, c2, d2);
  return b2.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a2) {
  return { baseLanes: a2, cachePool: null, transitions: null };
}
function pj(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = M$1.current, f2 = false, g2 = 0 !== (b2.flags & 128), h2;
  (h2 = g2) || (h2 = null !== a2 && null === a2.memoizedState ? false : 0 !== (e2 & 2));
  if (h2)
    f2 = true, b2.flags &= -129;
  else if (null === a2 || null !== a2.memoizedState)
    e2 |= 1;
  G$1(M$1, e2 & 1);
  if (null === a2) {
    Eg(b2);
    a2 = b2.memoizedState;
    if (null !== a2 && (a2 = a2.dehydrated, null !== a2))
      return 0 === (b2.mode & 1) ? b2.lanes = 1 : "$!" === a2.data ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    g2 = d2.children;
    a2 = d2.fallback;
    return f2 ? (d2 = b2.mode, f2 = b2.child, g2 = { mode: "hidden", children: g2 }, 0 === (d2 & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = qj(g2, d2, 0, null), a2 = Ah(a2, d2, c2, null), f2.return = b2, a2.return = b2, f2.sibling = a2, b2.child = f2, b2.child.memoizedState = oj(c2), b2.memoizedState = nj, a2) : rj(b2, g2);
  }
  e2 = a2.memoizedState;
  if (null !== e2 && (h2 = e2.dehydrated, null !== h2))
    return sj(a2, b2, g2, d2, h2, e2, c2);
  if (f2) {
    f2 = d2.fallback;
    g2 = b2.mode;
    e2 = a2.child;
    h2 = e2.sibling;
    var k2 = { mode: "hidden", children: d2.children };
    0 === (g2 & 1) && b2.child !== e2 ? (d2 = b2.child, d2.childLanes = 0, d2.pendingProps = k2, b2.deletions = null) : (d2 = wh(e2, k2), d2.subtreeFlags = e2.subtreeFlags & 14680064);
    null !== h2 ? f2 = wh(h2, f2) : (f2 = Ah(f2, g2, c2, null), f2.flags |= 2);
    f2.return = b2;
    d2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    d2 = f2;
    f2 = b2.child;
    g2 = a2.child.memoizedState;
    g2 = null === g2 ? oj(c2) : { baseLanes: g2.baseLanes | c2, cachePool: null, transitions: g2.transitions };
    f2.memoizedState = g2;
    f2.childLanes = a2.childLanes & ~c2;
    b2.memoizedState = nj;
    return d2;
  }
  f2 = a2.child;
  a2 = f2.sibling;
  d2 = wh(f2, { mode: "visible", children: d2.children });
  0 === (b2.mode & 1) && (d2.lanes = c2);
  d2.return = b2;
  d2.sibling = null;
  null !== a2 && (c2 = b2.deletions, null === c2 ? (b2.deletions = [a2], b2.flags |= 16) : c2.push(a2));
  b2.child = d2;
  b2.memoizedState = null;
  return d2;
}
function rj(a2, b2) {
  b2 = qj({ mode: "visible", children: b2 }, a2.mode, 0, null);
  b2.return = a2;
  return a2.child = b2;
}
function tj(a2, b2, c2, d2) {
  null !== d2 && Jg(d2);
  Bh(b2, a2.child, null, c2);
  a2 = rj(b2, b2.pendingProps.children);
  a2.flags |= 2;
  b2.memoizedState = null;
  return a2;
}
function sj(a2, b2, c2, d2, e2, f2, g2) {
  if (c2) {
    if (b2.flags & 256)
      return b2.flags &= -257, d2 = Li(Error(p$7(422))), tj(a2, b2, g2, d2);
    if (null !== b2.memoizedState)
      return b2.child = a2.child, b2.flags |= 128, null;
    f2 = d2.fallback;
    e2 = b2.mode;
    d2 = qj({ mode: "visible", children: d2.children }, e2, 0, null);
    f2 = Ah(f2, e2, g2, null);
    f2.flags |= 2;
    d2.return = b2;
    f2.return = b2;
    d2.sibling = f2;
    b2.child = d2;
    0 !== (b2.mode & 1) && Bh(b2, a2.child, null, g2);
    b2.child.memoizedState = oj(g2);
    b2.memoizedState = nj;
    return f2;
  }
  if (0 === (b2.mode & 1))
    return tj(a2, b2, g2, null);
  if ("$!" === e2.data) {
    d2 = e2.nextSibling && e2.nextSibling.dataset;
    if (d2)
      var h2 = d2.dgst;
    d2 = h2;
    f2 = Error(p$7(419));
    d2 = Li(f2, d2, void 0);
    return tj(a2, b2, g2, d2);
  }
  h2 = 0 !== (g2 & a2.childLanes);
  if (Ug || h2) {
    d2 = R$2;
    if (null !== d2) {
      switch (g2 & -g2) {
        case 4:
          e2 = 2;
          break;
        case 16:
          e2 = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e2 = 32;
          break;
        case 536870912:
          e2 = 268435456;
          break;
        default:
          e2 = 0;
      }
      e2 = 0 !== (e2 & (d2.suspendedLanes | g2)) ? 0 : e2;
      0 !== e2 && e2 !== f2.retryLane && (f2.retryLane = e2, Zg(a2, e2), mh(d2, a2, e2, -1));
    }
    uj();
    d2 = Li(Error(p$7(421)));
    return tj(a2, b2, g2, d2);
  }
  if ("$?" === e2.data)
    return b2.flags |= 128, b2.child = a2.child, b2 = vj.bind(null, a2), e2._reactRetry = b2, null;
  a2 = f2.treeContext;
  yg = Lf(e2.nextSibling);
  xg = b2;
  I$1 = true;
  zg = null;
  null !== a2 && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a2.id, sg = a2.overflow, qg = b2);
  b2 = rj(b2, d2.children);
  b2.flags |= 4096;
  return b2;
}
function wj(a2, b2, c2) {
  a2.lanes |= b2;
  var d2 = a2.alternate;
  null !== d2 && (d2.lanes |= b2);
  Sg(a2.return, b2, c2);
}
function xj(a2, b2, c2, d2, e2) {
  var f2 = a2.memoizedState;
  null === f2 ? a2.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2 } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d2, f2.tail = c2, f2.tailMode = e2);
}
function yj(a2, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
  Yi(a2, b2, d2.children, c2);
  d2 = M$1.current;
  if (0 !== (d2 & 2))
    d2 = d2 & 1 | 2, b2.flags |= 128;
  else {
    if (null !== a2 && 0 !== (a2.flags & 128))
      a:
        for (a2 = b2.child; null !== a2; ) {
          if (13 === a2.tag)
            null !== a2.memoizedState && wj(a2, c2, b2);
          else if (19 === a2.tag)
            wj(a2, c2, b2);
          else if (null !== a2.child) {
            a2.child.return = a2;
            a2 = a2.child;
            continue;
          }
          if (a2 === b2)
            break a;
          for (; null === a2.sibling; ) {
            if (null === a2.return || a2.return === b2)
              break a;
            a2 = a2.return;
          }
          a2.sibling.return = a2.return;
          a2 = a2.sibling;
        }
    d2 &= 1;
  }
  G$1(M$1, d2);
  if (0 === (b2.mode & 1))
    b2.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c2 = b2.child;
        for (e2 = null; null !== c2; )
          a2 = c2.alternate, null !== a2 && null === Mh(a2) && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        null === c2 ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
        xj(b2, false, e2, c2, f2);
        break;
      case "backwards":
        c2 = null;
        e2 = b2.child;
        for (b2.child = null; null !== e2; ) {
          a2 = e2.alternate;
          if (null !== a2 && null === Mh(a2)) {
            b2.child = e2;
            break;
          }
          a2 = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a2;
        }
        xj(b2, true, c2, null, f2);
        break;
      case "together":
        xj(b2, false, null, null, void 0);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function jj(a2, b2) {
  0 === (b2.mode & 1) && null !== a2 && (a2.alternate = null, b2.alternate = null, b2.flags |= 2);
}
function $i(a2, b2, c2) {
  null !== a2 && (b2.dependencies = a2.dependencies);
  hh |= b2.lanes;
  if (0 === (c2 & b2.childLanes))
    return null;
  if (null !== a2 && b2.child !== a2.child)
    throw Error(p$7(153));
  if (null !== b2.child) {
    a2 = b2.child;
    c2 = wh(a2, a2.pendingProps);
    b2.child = c2;
    for (c2.return = b2; null !== a2.sibling; )
      a2 = a2.sibling, c2 = c2.sibling = wh(a2, a2.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
function zj(a2, b2, c2) {
  switch (b2.tag) {
    case 3:
      lj(b2);
      Ig();
      break;
    case 5:
      Kh(b2);
      break;
    case 1:
      Zf(b2.type) && cg(b2);
      break;
    case 4:
      Ih(b2, b2.stateNode.containerInfo);
      break;
    case 10:
      var d2 = b2.type._context, e2 = b2.memoizedProps.value;
      G$1(Mg, d2._currentValue);
      d2._currentValue = e2;
      break;
    case 13:
      d2 = b2.memoizedState;
      if (null !== d2) {
        if (null !== d2.dehydrated)
          return G$1(M$1, M$1.current & 1), b2.flags |= 128, null;
        if (0 !== (c2 & b2.child.childLanes))
          return pj(a2, b2, c2);
        G$1(M$1, M$1.current & 1);
        a2 = $i(a2, b2, c2);
        return null !== a2 ? a2.sibling : null;
      }
      G$1(M$1, M$1.current & 1);
      break;
    case 19:
      d2 = 0 !== (c2 & b2.childLanes);
      if (0 !== (a2.flags & 128)) {
        if (d2)
          return yj(a2, b2, c2);
        b2.flags |= 128;
      }
      e2 = b2.memoizedState;
      null !== e2 && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
      G$1(M$1, M$1.current);
      if (d2)
        break;
      else
        return null;
    case 22:
    case 23:
      return b2.lanes = 0, ej(a2, b2, c2);
  }
  return $i(a2, b2, c2);
}
var Aj, Bj, Cj, Dj;
Aj = function(a2, b2) {
  for (var c2 = b2.child; null !== c2; ) {
    if (5 === c2.tag || 6 === c2.tag)
      a2.appendChild(c2.stateNode);
    else if (4 !== c2.tag && null !== c2.child) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; null === c2.sibling; ) {
      if (null === c2.return || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Bj = function() {
};
Cj = function(a2, b2, c2, d2) {
  var e2 = a2.memoizedProps;
  if (e2 !== d2) {
    a2 = b2.stateNode;
    Hh(Eh.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e2 = Ya(a2, e2);
        d2 = Ya(a2, d2);
        f2 = [];
        break;
      case "select":
        e2 = A$2({}, e2, { value: void 0 });
        d2 = A$2({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = gb(a2, e2);
        d2 = gb(a2, d2);
        f2 = [];
        break;
      default:
        "function" !== typeof e2.onClick && "function" === typeof d2.onClick && (a2.onclick = Bf);
    }
    ub(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e2)
      if (!d2.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && null != e2[l2])
        if ("style" === l2) {
          var h2 = e2[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = null != e2 ? e2[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2))
        if ("style" === l2)
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(
              l2,
              c2
            )), c2 = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D$2("scroll", a2), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Dj = function(a2, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Ej(a2, b2) {
  if (!I$1)
    switch (a2.tailMode) {
      case "hidden":
        b2 = a2.tail;
        for (var c2 = null; null !== b2; )
          null !== b2.alternate && (c2 = b2), b2 = b2.sibling;
        null === c2 ? a2.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a2.tail;
        for (var d2 = null; null !== c2; )
          null !== c2.alternate && (d2 = c2), c2 = c2.sibling;
        null === d2 ? b2 || null === a2.tail ? a2.tail = null : a2.tail.sibling = null : d2.sibling = null;
    }
}
function S$1(a2) {
  var b2 = null !== a2.alternate && a2.alternate.child === a2.child, c2 = 0, d2 = 0;
  if (b2)
    for (var e2 = a2.child; null !== e2; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags & 14680064, d2 |= e2.flags & 14680064, e2.return = a2, e2 = e2.sibling;
  else
    for (e2 = a2.child; null !== e2; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags, d2 |= e2.flags, e2.return = a2, e2 = e2.sibling;
  a2.subtreeFlags |= d2;
  a2.childLanes = c2;
  return b2;
}
function Fj(a2, b2, c2) {
  var d2 = b2.pendingProps;
  wg(b2);
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S$1(b2), null;
    case 1:
      return Zf(b2.type) && $f(), S$1(b2), null;
    case 3:
      d2 = b2.stateNode;
      Jh();
      E$1(Wf);
      E$1(H$1);
      Oh();
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (null === a2 || null === a2.child)
        Gg(b2) ? b2.flags |= 4 : null === a2 || a2.memoizedState.isDehydrated && 0 === (b2.flags & 256) || (b2.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a2, b2);
      S$1(b2);
      return null;
    case 5:
      Lh(b2);
      var e2 = Hh(Gh.current);
      c2 = b2.type;
      if (null !== a2 && null != b2.stateNode)
        Cj(a2, b2, c2, d2, e2), a2.ref !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      else {
        if (!d2) {
          if (null === b2.stateNode)
            throw Error(p$7(166));
          S$1(b2);
          return null;
        }
        a2 = Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[Of] = b2;
          d2[Pf] = f2;
          a2 = 0 !== (b2.mode & 1);
          switch (c2) {
            case "dialog":
              D$2("cancel", d2);
              D$2("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              D$2("load", d2);
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < lf.length; e2++)
                D$2(lf[e2], d2);
              break;
            case "source":
              D$2("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              D$2(
                "error",
                d2
              );
              D$2("load", d2);
              break;
            case "details":
              D$2("toggle", d2);
              break;
            case "input":
              Za(d2, f2);
              D$2("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              D$2("invalid", d2);
              break;
            case "textarea":
              hb(d2, f2), D$2("invalid", d2);
          }
          ub(c2, f2);
          e2 = null;
          for (var g2 in f2)
            if (f2.hasOwnProperty(g2)) {
              var h2 = f2[g2];
              "children" === g2 ? "string" === typeof h2 ? d2.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d2.textContent, h2, a2), e2 = ["children", h2]) : "number" === typeof h2 && d2.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
                d2.textContent,
                h2,
                a2
              ), e2 = ["children", "" + h2]) : ea.hasOwnProperty(g2) && null != h2 && "onScroll" === g2 && D$2("scroll", d2);
            }
          switch (c2) {
            case "input":
              Va(d2);
              db(d2, f2, true);
              break;
            case "textarea":
              Va(d2);
              jb(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d2.onclick = Bf);
          }
          d2 = e2;
          b2.updateQueue = d2;
          null !== d2 && (b2.flags |= 4);
        } else {
          g2 = 9 === e2.nodeType ? e2 : e2.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a2 && (a2 = kb(c2));
          "http://www.w3.org/1999/xhtml" === a2 ? "script" === c2 ? (a2 = g2.createElement("div"), a2.innerHTML = "<script><\/script>", a2 = a2.removeChild(a2.firstChild)) : "string" === typeof d2.is ? a2 = g2.createElement(c2, { is: d2.is }) : (a2 = g2.createElement(c2), "select" === c2 && (g2 = a2, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a2 = g2.createElementNS(a2, c2);
          a2[Of] = b2;
          a2[Pf] = d2;
          Aj(a2, b2, false, false);
          b2.stateNode = a2;
          a: {
            g2 = vb(c2, d2);
            switch (c2) {
              case "dialog":
                D$2("cancel", a2);
                D$2("close", a2);
                e2 = d2;
                break;
              case "iframe":
              case "object":
              case "embed":
                D$2("load", a2);
                e2 = d2;
                break;
              case "video":
              case "audio":
                for (e2 = 0; e2 < lf.length; e2++)
                  D$2(lf[e2], a2);
                e2 = d2;
                break;
              case "source":
                D$2("error", a2);
                e2 = d2;
                break;
              case "img":
              case "image":
              case "link":
                D$2(
                  "error",
                  a2
                );
                D$2("load", a2);
                e2 = d2;
                break;
              case "details":
                D$2("toggle", a2);
                e2 = d2;
                break;
              case "input":
                Za(a2, d2);
                e2 = Ya(a2, d2);
                D$2("invalid", a2);
                break;
              case "option":
                e2 = d2;
                break;
              case "select":
                a2._wrapperState = { wasMultiple: !!d2.multiple };
                e2 = A$2({}, d2, { value: void 0 });
                D$2("invalid", a2);
                break;
              case "textarea":
                hb(a2, d2);
                e2 = gb(a2, d2);
                D$2("invalid", a2);
                break;
              default:
                e2 = d2;
            }
            ub(c2, e2);
            h2 = e2;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                "style" === f2 ? sb(a2, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a2, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c2 || "" !== k2) && ob(a2, k2) : "number" === typeof k2 && ob(a2, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D$2("scroll", a2) : null != k2 && ta(a2, f2, k2, g2));
              }
            switch (c2) {
              case "input":
                Va(a2);
                db(a2, d2, false);
                break;
              case "textarea":
                Va(a2);
                jb(a2);
                break;
              case "option":
                null != d2.value && a2.setAttribute("value", "" + Sa(d2.value));
                break;
              case "select":
                a2.multiple = !!d2.multiple;
                f2 = d2.value;
                null != f2 ? fb(a2, !!d2.multiple, f2, false) : null != d2.defaultValue && fb(
                  a2,
                  !!d2.multiple,
                  d2.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e2.onClick && (a2.onclick = Bf);
            }
            switch (c2) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d2 = !!d2.autoFocus;
                break a;
              case "img":
                d2 = true;
                break a;
              default:
                d2 = false;
            }
          }
          d2 && (b2.flags |= 4);
        }
        null !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      }
      S$1(b2);
      return null;
    case 6:
      if (a2 && null != b2.stateNode)
        Dj(a2, b2, a2.memoizedProps, d2);
      else {
        if ("string" !== typeof d2 && null === b2.stateNode)
          throw Error(p$7(166));
        c2 = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b2)) {
          d2 = b2.stateNode;
          c2 = b2.memoizedProps;
          d2[Of] = b2;
          if (f2 = d2.nodeValue !== c2) {
            if (a2 = xg, null !== a2)
              switch (a2.tag) {
                case 3:
                  Af(d2.nodeValue, c2, 0 !== (a2.mode & 1));
                  break;
                case 5:
                  true !== a2.memoizedProps.suppressHydrationWarning && Af(d2.nodeValue, c2, 0 !== (a2.mode & 1));
              }
          }
          f2 && (b2.flags |= 4);
        } else
          d2 = (9 === c2.nodeType ? c2 : c2.ownerDocument).createTextNode(d2), d2[Of] = b2, b2.stateNode = d2;
      }
      S$1(b2);
      return null;
    case 13:
      E$1(M$1);
      d2 = b2.memoizedState;
      if (null === a2 || null !== a2.memoizedState && null !== a2.memoizedState.dehydrated) {
        if (I$1 && null !== yg && 0 !== (b2.mode & 1) && 0 === (b2.flags & 128))
          Hg(), Ig(), b2.flags |= 98560, f2 = false;
        else if (f2 = Gg(b2), null !== d2 && null !== d2.dehydrated) {
          if (null === a2) {
            if (!f2)
              throw Error(p$7(318));
            f2 = b2.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p$7(317));
            f2[Of] = b2;
          } else
            Ig(), 0 === (b2.flags & 128) && (b2.memoizedState = null), b2.flags |= 4;
          S$1(b2);
          f2 = false;
        } else
          null !== zg && (Gj(zg), zg = null), f2 = true;
        if (!f2)
          return b2.flags & 65536 ? b2 : null;
      }
      if (0 !== (b2.flags & 128))
        return b2.lanes = c2, b2;
      d2 = null !== d2;
      d2 !== (null !== a2 && null !== a2.memoizedState) && d2 && (b2.child.flags |= 8192, 0 !== (b2.mode & 1) && (null === a2 || 0 !== (M$1.current & 1) ? 0 === T$1 && (T$1 = 3) : uj()));
      null !== b2.updateQueue && (b2.flags |= 4);
      S$1(b2);
      return null;
    case 4:
      return Jh(), Bj(a2, b2), null === a2 && sf(b2.stateNode.containerInfo), S$1(b2), null;
    case 10:
      return Rg(b2.type._context), S$1(b2), null;
    case 17:
      return Zf(b2.type) && $f(), S$1(b2), null;
    case 19:
      E$1(M$1);
      f2 = b2.memoizedState;
      if (null === f2)
        return S$1(b2), null;
      d2 = 0 !== (b2.flags & 128);
      g2 = f2.rendering;
      if (null === g2)
        if (d2)
          Ej(f2, false);
        else {
          if (0 !== T$1 || null !== a2 && 0 !== (a2.flags & 128))
            for (a2 = b2.child; null !== a2; ) {
              g2 = Mh(a2);
              if (null !== g2) {
                b2.flags |= 128;
                Ej(f2, false);
                d2 = g2.updateQueue;
                null !== d2 && (b2.updateQueue = d2, b2.flags |= 4);
                b2.subtreeFlags = 0;
                d2 = c2;
                for (c2 = b2.child; null !== c2; )
                  f2 = c2, a2 = d2, f2.flags &= 14680066, g2 = f2.alternate, null === g2 ? (f2.childLanes = 0, f2.lanes = a2, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a2 = g2.dependencies, f2.dependencies = null === a2 ? null : { lanes: a2.lanes, firstContext: a2.firstContext }), c2 = c2.sibling;
                G$1(M$1, M$1.current & 1 | 2);
                return b2.child;
              }
              a2 = a2.sibling;
            }
          null !== f2.tail && B$1() > Hj && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        }
      else {
        if (!d2)
          if (a2 = Mh(g2), null !== a2) {
            if (b2.flags |= 128, d2 = true, c2 = a2.updateQueue, null !== c2 && (b2.updateQueue = c2, b2.flags |= 4), Ej(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g2.alternate && !I$1)
              return S$1(b2), null;
          } else
            2 * B$1() - f2.renderingStartTime > Hj && 1073741824 !== c2 && (b2.flags |= 128, d2 = true, Ej(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = f2.last, null !== c2 ? c2.sibling = g2 : b2.child = g2, f2.last = g2);
      }
      if (null !== f2.tail)
        return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = B$1(), b2.sibling = null, c2 = M$1.current, G$1(M$1, d2 ? c2 & 1 | 2 : c2 & 1), b2;
      S$1(b2);
      return null;
    case 22:
    case 23:
      return Ij(), d2 = null !== b2.memoizedState, null !== a2 && null !== a2.memoizedState !== d2 && (b2.flags |= 8192), d2 && 0 !== (b2.mode & 1) ? 0 !== (gj & 1073741824) && (S$1(b2), b2.subtreeFlags & 6 && (b2.flags |= 8192)) : S$1(b2), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$7(156, b2.tag));
}
function Jj(a2, b2) {
  wg(b2);
  switch (b2.tag) {
    case 1:
      return Zf(b2.type) && $f(), a2 = b2.flags, a2 & 65536 ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 3:
      return Jh(), E$1(Wf), E$1(H$1), Oh(), a2 = b2.flags, 0 !== (a2 & 65536) && 0 === (a2 & 128) ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 5:
      return Lh(b2), null;
    case 13:
      E$1(M$1);
      a2 = b2.memoizedState;
      if (null !== a2 && null !== a2.dehydrated) {
        if (null === b2.alternate)
          throw Error(p$7(340));
        Ig();
      }
      a2 = b2.flags;
      return a2 & 65536 ? (b2.flags = a2 & -65537 | 128, b2) : null;
    case 19:
      return E$1(M$1), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b2.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = false, U$1 = false, Lj = "function" === typeof WeakSet ? WeakSet : Set, V$1 = null;
function Mj(a2, b2) {
  var c2 = a2.ref;
  if (null !== c2)
    if ("function" === typeof c2)
      try {
        c2(null);
      } catch (d2) {
        W$1(a2, b2, d2);
      }
    else
      c2.current = null;
}
function Nj(a2, b2, c2) {
  try {
    c2();
  } catch (d2) {
    W$1(a2, b2, d2);
  }
}
var Oj = false;
function Pj(a2, b2) {
  Cf = dd;
  a2 = Me();
  if (Ne(a2)) {
    if ("selectionStart" in a2)
      var c2 = { start: a2.selectionStart, end: a2.selectionEnd };
    else
      a: {
        c2 = (c2 = a2.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && 0 !== d2.rangeCount) {
          c2 = d2.anchorNode;
          var e2 = d2.anchorOffset, f2 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f2.nodeType;
          } catch (F2) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a2, r2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                q2 !== c2 || 0 !== e2 && 3 !== q2.nodeType || (h2 = g2 + e2);
                q2 !== f2 || 0 !== d2 && 3 !== q2.nodeType || (k2 = g2 + d2);
                3 === q2.nodeType && (g2 += q2.nodeValue.length);
                if (null === (y2 = q2.firstChild))
                  break;
                r2 = q2;
                q2 = y2;
              }
              for (; ; ) {
                if (q2 === a2)
                  break b;
                r2 === c2 && ++l2 === e2 && (h2 = g2);
                r2 === f2 && ++m2 === d2 && (k2 = g2);
                if (null !== (y2 = q2.nextSibling))
                  break;
                q2 = r2;
                r2 = q2.parentNode;
              }
              q2 = y2;
            }
          c2 = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
        } else
          c2 = null;
      }
    c2 = c2 || { start: 0, end: 0 };
  } else
    c2 = null;
  Df = { focusedElem: a2, selectionRange: c2 };
  dd = false;
  for (V$1 = b2; null !== V$1; )
    if (b2 = V$1, a2 = b2.child, 0 !== (b2.subtreeFlags & 1028) && null !== a2)
      a2.return = b2, V$1 = a2;
    else
      for (; null !== V$1; ) {
        b2 = V$1;
        try {
          var n2 = b2.alternate;
          if (0 !== (b2.flags & 1024))
            switch (b2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b2.stateNode, w2 = x2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? t2 : Lg(b2.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b2.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$7(163));
            }
        } catch (F2) {
          W$1(b2, b2.return, F2);
        }
        a2 = b2.sibling;
        if (null !== a2) {
          a2.return = b2.return;
          V$1 = a2;
          break;
        }
        V$1 = b2.return;
      }
  n2 = Oj;
  Oj = false;
  return n2;
}
function Qj(a2, b2, c2) {
  var d2 = b2.updateQueue;
  d2 = null !== d2 ? d2.lastEffect : null;
  if (null !== d2) {
    var e2 = d2 = d2.next;
    do {
      if ((e2.tag & a2) === a2) {
        var f2 = e2.destroy;
        e2.destroy = void 0;
        void 0 !== f2 && Nj(b2, c2, f2);
      }
      e2 = e2.next;
    } while (e2 !== d2);
  }
}
function Rj(a2, b2) {
  b2 = b2.updateQueue;
  b2 = null !== b2 ? b2.lastEffect : null;
  if (null !== b2) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a2) === a2) {
        var d2 = c2.create;
        c2.destroy = d2();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function Sj(a2) {
  var b2 = a2.ref;
  if (null !== b2) {
    var c2 = a2.stateNode;
    switch (a2.tag) {
      case 5:
        a2 = c2;
        break;
      default:
        a2 = c2;
    }
    "function" === typeof b2 ? b2(a2) : b2.current = a2;
  }
}
function Tj(a2) {
  var b2 = a2.alternate;
  null !== b2 && (a2.alternate = null, Tj(b2));
  a2.child = null;
  a2.deletions = null;
  a2.sibling = null;
  5 === a2.tag && (b2 = a2.stateNode, null !== b2 && (delete b2[Of], delete b2[Pf], delete b2[of], delete b2[Qf], delete b2[Rf]));
  a2.stateNode = null;
  a2.return = null;
  a2.dependencies = null;
  a2.memoizedProps = null;
  a2.memoizedState = null;
  a2.pendingProps = null;
  a2.stateNode = null;
  a2.updateQueue = null;
}
function Uj(a2) {
  return 5 === a2.tag || 3 === a2.tag || 4 === a2.tag;
}
function Vj(a2) {
  a:
    for (; ; ) {
      for (; null === a2.sibling; ) {
        if (null === a2.return || Uj(a2.return))
          return null;
        a2 = a2.return;
      }
      a2.sibling.return = a2.return;
      for (a2 = a2.sibling; 5 !== a2.tag && 6 !== a2.tag && 18 !== a2.tag; ) {
        if (a2.flags & 2)
          continue a;
        if (null === a2.child || 4 === a2.tag)
          continue a;
        else
          a2.child.return = a2, a2 = a2.child;
      }
      if (!(a2.flags & 2))
        return a2.stateNode;
    }
}
function Wj(a2, b2, c2) {
  var d2 = a2.tag;
  if (5 === d2 || 6 === d2)
    a2 = a2.stateNode, b2 ? 8 === c2.nodeType ? c2.parentNode.insertBefore(a2, b2) : c2.insertBefore(a2, b2) : (8 === c2.nodeType ? (b2 = c2.parentNode, b2.insertBefore(a2, c2)) : (b2 = c2, b2.appendChild(a2)), c2 = c2._reactRootContainer, null !== c2 && void 0 !== c2 || null !== b2.onclick || (b2.onclick = Bf));
  else if (4 !== d2 && (a2 = a2.child, null !== a2))
    for (Wj(a2, b2, c2), a2 = a2.sibling; null !== a2; )
      Wj(a2, b2, c2), a2 = a2.sibling;
}
function Xj(a2, b2, c2) {
  var d2 = a2.tag;
  if (5 === d2 || 6 === d2)
    a2 = a2.stateNode, b2 ? c2.insertBefore(a2, b2) : c2.appendChild(a2);
  else if (4 !== d2 && (a2 = a2.child, null !== a2))
    for (Xj(a2, b2, c2), a2 = a2.sibling; null !== a2; )
      Xj(a2, b2, c2), a2 = a2.sibling;
}
var X = null, Yj = false;
function Zj(a2, b2, c2) {
  for (c2 = c2.child; null !== c2; )
    ak(a2, b2, c2), c2 = c2.sibling;
}
function ak(a2, b2, c2) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c2);
    } catch (h2) {
    }
  switch (c2.tag) {
    case 5:
      U$1 || Mj(c2, b2);
    case 6:
      var d2 = X, e2 = Yj;
      X = null;
      Zj(a2, b2, c2);
      X = d2;
      Yj = e2;
      null !== X && (Yj ? (a2 = X, c2 = c2.stateNode, 8 === a2.nodeType ? a2.parentNode.removeChild(c2) : a2.removeChild(c2)) : X.removeChild(c2.stateNode));
      break;
    case 18:
      null !== X && (Yj ? (a2 = X, c2 = c2.stateNode, 8 === a2.nodeType ? Kf(a2.parentNode, c2) : 1 === a2.nodeType && Kf(a2, c2), bd(a2)) : Kf(X, c2.stateNode));
      break;
    case 4:
      d2 = X;
      e2 = Yj;
      X = c2.stateNode.containerInfo;
      Yj = true;
      Zj(a2, b2, c2);
      X = d2;
      Yj = e2;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U$1 && (d2 = c2.updateQueue, null !== d2 && (d2 = d2.lastEffect, null !== d2))) {
        e2 = d2 = d2.next;
        do {
          var f2 = e2, g2 = f2.destroy;
          f2 = f2.tag;
          void 0 !== g2 && (0 !== (f2 & 2) ? Nj(c2, b2, g2) : 0 !== (f2 & 4) && Nj(c2, b2, g2));
          e2 = e2.next;
        } while (e2 !== d2);
      }
      Zj(a2, b2, c2);
      break;
    case 1:
      if (!U$1 && (Mj(c2, b2), d2 = c2.stateNode, "function" === typeof d2.componentWillUnmount))
        try {
          d2.props = c2.memoizedProps, d2.state = c2.memoizedState, d2.componentWillUnmount();
        } catch (h2) {
          W$1(c2, b2, h2);
        }
      Zj(a2, b2, c2);
      break;
    case 21:
      Zj(a2, b2, c2);
      break;
    case 22:
      c2.mode & 1 ? (U$1 = (d2 = U$1) || null !== c2.memoizedState, Zj(a2, b2, c2), U$1 = d2) : Zj(a2, b2, c2);
      break;
    default:
      Zj(a2, b2, c2);
  }
}
function bk(a2) {
  var b2 = a2.updateQueue;
  if (null !== b2) {
    a2.updateQueue = null;
    var c2 = a2.stateNode;
    null === c2 && (c2 = a2.stateNode = new Lj());
    b2.forEach(function(b3) {
      var d2 = ck.bind(null, a2, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function dk(a2, b2) {
  var c2 = b2.deletions;
  if (null !== c2)
    for (var d2 = 0; d2 < c2.length; d2++) {
      var e2 = c2[d2];
      try {
        var f2 = a2, g2 = b2, h2 = g2;
        a:
          for (; null !== h2; ) {
            switch (h2.tag) {
              case 5:
                X = h2.stateNode;
                Yj = false;
                break a;
              case 3:
                X = h2.stateNode.containerInfo;
                Yj = true;
                break a;
              case 4:
                X = h2.stateNode.containerInfo;
                Yj = true;
                break a;
            }
            h2 = h2.return;
          }
        if (null === X)
          throw Error(p$7(160));
        ak(f2, g2, e2);
        X = null;
        Yj = false;
        var k2 = e2.alternate;
        null !== k2 && (k2.return = null);
        e2.return = null;
      } catch (l2) {
        W$1(e2, b2, l2);
      }
    }
  if (b2.subtreeFlags & 12854)
    for (b2 = b2.child; null !== b2; )
      ek(b2, a2), b2 = b2.sibling;
}
function ek(a2, b2) {
  var c2 = a2.alternate, d2 = a2.flags;
  switch (a2.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4) {
        try {
          Qj(3, a2, a2.return), Rj(3, a2);
        } catch (t2) {
          W$1(a2, a2.return, t2);
        }
        try {
          Qj(5, a2, a2.return);
        } catch (t2) {
          W$1(a2, a2.return, t2);
        }
      }
      break;
    case 1:
      dk(b2, a2);
      fk(a2);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      break;
    case 5:
      dk(b2, a2);
      fk(a2);
      d2 & 512 && null !== c2 && Mj(c2, c2.return);
      if (a2.flags & 32) {
        var e2 = a2.stateNode;
        try {
          ob(e2, "");
        } catch (t2) {
          W$1(a2, a2.return, t2);
        }
      }
      if (d2 & 4 && (e2 = a2.stateNode, null != e2)) {
        var f2 = a2.memoizedProps, g2 = null !== c2 ? c2.memoizedProps : f2, h2 = a2.type, k2 = a2.updateQueue;
        a2.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h2 && "radio" === f2.type && null != f2.name && ab(e2, f2);
            vb(h2, g2);
            var l2 = vb(h2, f2);
            for (g2 = 0; g2 < k2.length; g2 += 2) {
              var m2 = k2[g2], q2 = k2[g2 + 1];
              "style" === m2 ? sb(e2, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e2, q2) : "children" === m2 ? ob(e2, q2) : ta(e2, m2, q2, l2);
            }
            switch (h2) {
              case "input":
                bb(e2, f2);
                break;
              case "textarea":
                ib(e2, f2);
                break;
              case "select":
                var r2 = e2._wrapperState.wasMultiple;
                e2._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb(e2, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                  e2,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb(e2, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e2[Pf] = f2;
          } catch (t2) {
            W$1(a2, a2.return, t2);
          }
      }
      break;
    case 6:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4) {
        if (null === a2.stateNode)
          throw Error(p$7(162));
        e2 = a2.stateNode;
        f2 = a2.memoizedProps;
        try {
          e2.nodeValue = f2;
        } catch (t2) {
          W$1(a2, a2.return, t2);
        }
      }
      break;
    case 3:
      dk(b2, a2);
      fk(a2);
      if (d2 & 4 && null !== c2 && c2.memoizedState.isDehydrated)
        try {
          bd(b2.containerInfo);
        } catch (t2) {
          W$1(a2, a2.return, t2);
        }
      break;
    case 4:
      dk(b2, a2);
      fk(a2);
      break;
    case 13:
      dk(b2, a2);
      fk(a2);
      e2 = a2.child;
      e2.flags & 8192 && (f2 = null !== e2.memoizedState, e2.stateNode.isHidden = f2, !f2 || null !== e2.alternate && null !== e2.alternate.memoizedState || (gk = B$1()));
      d2 & 4 && bk(a2);
      break;
    case 22:
      m2 = null !== c2 && null !== c2.memoizedState;
      a2.mode & 1 ? (U$1 = (l2 = U$1) || m2, dk(b2, a2), U$1 = l2) : dk(b2, a2);
      fk(a2);
      if (d2 & 8192) {
        l2 = null !== a2.memoizedState;
        if ((a2.stateNode.isHidden = l2) && !m2 && 0 !== (a2.mode & 1))
          for (V$1 = a2, m2 = a2.child; null !== m2; ) {
            for (q2 = V$1 = m2; null !== V$1; ) {
              r2 = V$1;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, r2, r2.return);
                  break;
                case 1:
                  Mj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d2 = r2;
                    c2 = r2.return;
                    try {
                      b2 = d2, n2.props = b2.memoizedProps, n2.state = b2.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W$1(d2, c2, t2);
                    }
                  }
                  break;
                case 5:
                  Mj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    hk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V$1 = y2) : hk(q2);
            }
            m2 = m2.sibling;
          }
        a:
          for (m2 = null, q2 = a2; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e2 = q2.stateNode, l2 ? (f2 = e2.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g2 = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g2));
                } catch (t2) {
                  W$1(a2, a2.return, t2);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2)
                try {
                  q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                } catch (t2) {
                  W$1(a2, a2.return, t2);
                }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a2) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a2)
              break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a2)
                break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
      }
      break;
    case 19:
      dk(b2, a2);
      fk(a2);
      d2 & 4 && bk(a2);
      break;
    case 21:
      break;
    default:
      dk(
        b2,
        a2
      ), fk(a2);
  }
}
function fk(a2) {
  var b2 = a2.flags;
  if (b2 & 2) {
    try {
      a: {
        for (var c2 = a2.return; null !== c2; ) {
          if (Uj(c2)) {
            var d2 = c2;
            break a;
          }
          c2 = c2.return;
        }
        throw Error(p$7(160));
      }
      switch (d2.tag) {
        case 5:
          var e2 = d2.stateNode;
          d2.flags & 32 && (ob(e2, ""), d2.flags &= -33);
          var f2 = Vj(a2);
          Xj(a2, f2, e2);
          break;
        case 3:
        case 4:
          var g2 = d2.stateNode.containerInfo, h2 = Vj(a2);
          Wj(a2, h2, g2);
          break;
        default:
          throw Error(p$7(161));
      }
    } catch (k2) {
      W$1(a2, a2.return, k2);
    }
    a2.flags &= -3;
  }
  b2 & 4096 && (a2.flags &= -4097);
}
function ik(a2, b2, c2) {
  V$1 = a2;
  jk(a2);
}
function jk(a2, b2, c2) {
  for (var d2 = 0 !== (a2.mode & 1); null !== V$1; ) {
    var e2 = V$1, f2 = e2.child;
    if (22 === e2.tag && d2) {
      var g2 = null !== e2.memoizedState || Kj;
      if (!g2) {
        var h2 = e2.alternate, k2 = null !== h2 && null !== h2.memoizedState || U$1;
        h2 = Kj;
        var l2 = U$1;
        Kj = g2;
        if ((U$1 = k2) && !l2)
          for (V$1 = e2; null !== V$1; )
            g2 = V$1, k2 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? kk(e2) : null !== k2 ? (k2.return = g2, V$1 = k2) : kk(e2);
        for (; null !== f2; )
          V$1 = f2, jk(f2), f2 = f2.sibling;
        V$1 = e2;
        Kj = h2;
        U$1 = l2;
      }
      lk(a2);
    } else
      0 !== (e2.subtreeFlags & 8772) && null !== f2 ? (f2.return = e2, V$1 = f2) : lk(a2);
  }
}
function lk(a2) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (0 !== (b2.flags & 8772)) {
      var c2 = b2.alternate;
      try {
        if (0 !== (b2.flags & 8772))
          switch (b2.tag) {
            case 0:
            case 11:
            case 15:
              U$1 || Rj(5, b2);
              break;
            case 1:
              var d2 = b2.stateNode;
              if (b2.flags & 4 && !U$1)
                if (null === c2)
                  d2.componentDidMount();
                else {
                  var e2 = b2.elementType === b2.type ? c2.memoizedProps : Lg(b2.type, c2.memoizedProps);
                  d2.componentDidUpdate(e2, c2.memoizedState, d2.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b2.updateQueue;
              null !== f2 && ih(b2, f2, d2);
              break;
            case 3:
              var g2 = b2.updateQueue;
              if (null !== g2) {
                c2 = null;
                if (null !== b2.child)
                  switch (b2.child.tag) {
                    case 5:
                      c2 = b2.child.stateNode;
                      break;
                    case 1:
                      c2 = b2.child.stateNode;
                  }
                ih(b2, g2, c2);
              }
              break;
            case 5:
              var h2 = b2.stateNode;
              if (null === c2 && b2.flags & 4) {
                c2 = h2;
                var k2 = b2.memoizedProps;
                switch (b2.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c2.focus();
                    break;
                  case "img":
                    k2.src && (c2.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b2.memoizedState) {
                var l2 = b2.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p$7(163));
          }
        U$1 || b2.flags & 512 && Sj(b2);
      } catch (r2) {
        W$1(b2, b2.return, r2);
      }
    }
    if (b2 === a2) {
      V$1 = null;
      break;
    }
    c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function hk(a2) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    if (b2 === a2) {
      V$1 = null;
      break;
    }
    var c2 = b2.sibling;
    if (null !== c2) {
      c2.return = b2.return;
      V$1 = c2;
      break;
    }
    V$1 = b2.return;
  }
}
function kk(a2) {
  for (; null !== V$1; ) {
    var b2 = V$1;
    try {
      switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          var c2 = b2.return;
          try {
            Rj(4, b2);
          } catch (k2) {
            W$1(b2, c2, k2);
          }
          break;
        case 1:
          var d2 = b2.stateNode;
          if ("function" === typeof d2.componentDidMount) {
            var e2 = b2.return;
            try {
              d2.componentDidMount();
            } catch (k2) {
              W$1(b2, e2, k2);
            }
          }
          var f2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W$1(b2, f2, k2);
          }
          break;
        case 5:
          var g2 = b2.return;
          try {
            Sj(b2);
          } catch (k2) {
            W$1(b2, g2, k2);
          }
      }
    } catch (k2) {
      W$1(b2, b2.return, k2);
    }
    if (b2 === a2) {
      V$1 = null;
      break;
    }
    var h2 = b2.sibling;
    if (null !== h2) {
      h2.return = b2.return;
      V$1 = h2;
      break;
    }
    V$1 = b2.return;
  }
}
var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K = 0, R$2 = null, Y$1 = null, Z = 0, gj = 0, fj = Uf(0), T$1 = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = Infinity, vk = null, Pi = false, Qi = null, Si = null, wk = false, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
function L$1() {
  return 0 !== (K & 6) ? B$1() : -1 !== Bk ? Bk : Bk = B$1();
}
function lh(a2) {
  if (0 === (a2.mode & 1))
    return 1;
  if (0 !== (K & 2) && 0 !== Z)
    return Z & -Z;
  if (null !== Kg.transition)
    return 0 === Ck && (Ck = yc()), Ck;
  a2 = C$3;
  if (0 !== a2)
    return a2;
  a2 = window.event;
  a2 = void 0 === a2 ? 16 : jd(a2.type);
  return a2;
}
function mh(a2, b2, c2, d2) {
  if (50 < zk)
    throw zk = 0, Ak = null, Error(p$7(185));
  Ac(a2, c2, d2);
  if (0 === (K & 2) || a2 !== R$2)
    a2 === R$2 && (0 === (K & 2) && (rk |= c2), 4 === T$1 && Dk(a2, Z)), Ek(a2, d2), 1 === c2 && 0 === K && 0 === (b2.mode & 1) && (Hj = B$1() + 500, fg && jg());
}
function Ek(a2, b2) {
  var c2 = a2.callbackNode;
  wc(a2, b2);
  var d2 = uc(a2, a2 === R$2 ? Z : 0);
  if (0 === d2)
    null !== c2 && bc(c2), a2.callbackNode = null, a2.callbackPriority = 0;
  else if (b2 = d2 & -d2, a2.callbackPriority !== b2) {
    null != c2 && bc(c2);
    if (1 === b2)
      0 === a2.tag ? ig(Fk.bind(null, a2)) : hg(Fk.bind(null, a2)), Jf(function() {
        0 === (K & 6) && jg();
      }), c2 = null;
    else {
      switch (Dc(d2)) {
        case 1:
          c2 = fc;
          break;
        case 4:
          c2 = gc;
          break;
        case 16:
          c2 = hc;
          break;
        case 536870912:
          c2 = jc;
          break;
        default:
          c2 = hc;
      }
      c2 = Gk(c2, Hk.bind(null, a2));
    }
    a2.callbackPriority = b2;
    a2.callbackNode = c2;
  }
}
function Hk(a2, b2) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6))
    throw Error(p$7(327));
  var c2 = a2.callbackNode;
  if (Ik() && a2.callbackNode !== c2)
    return null;
  var d2 = uc(a2, a2 === R$2 ? Z : 0);
  if (0 === d2)
    return null;
  if (0 !== (d2 & 30) || 0 !== (d2 & a2.expiredLanes) || b2)
    b2 = Jk(a2, d2);
  else {
    b2 = d2;
    var e2 = K;
    K |= 2;
    var f2 = Kk();
    if (R$2 !== a2 || Z !== b2)
      vk = null, Hj = B$1() + 500, Lk(a2, b2);
    do
      try {
        Mk();
        break;
      } catch (h2) {
        Nk(a2, h2);
      }
    while (1);
    Qg();
    nk.current = f2;
    K = e2;
    null !== Y$1 ? b2 = 0 : (R$2 = null, Z = 0, b2 = T$1);
  }
  if (0 !== b2) {
    2 === b2 && (e2 = xc(a2), 0 !== e2 && (d2 = e2, b2 = Ok(a2, e2)));
    if (1 === b2)
      throw c2 = qk, Lk(a2, 0), Dk(a2, d2), Ek(a2, B$1()), c2;
    if (6 === b2)
      Dk(a2, d2);
    else {
      e2 = a2.current.alternate;
      if (0 === (d2 & 30) && !Pk(e2) && (b2 = Jk(a2, d2), 2 === b2 && (f2 = xc(a2), 0 !== f2 && (d2 = f2, b2 = Ok(a2, f2))), 1 === b2))
        throw c2 = qk, Lk(a2, 0), Dk(a2, d2), Ek(a2, B$1()), c2;
      a2.finishedWork = e2;
      a2.finishedLanes = d2;
      switch (b2) {
        case 0:
        case 1:
          throw Error(p$7(345));
        case 2:
          Qk(a2, uk, vk);
          break;
        case 3:
          Dk(a2, d2);
          if ((d2 & 130023424) === d2 && (b2 = gk + 500 - B$1(), 10 < b2)) {
            if (0 !== uc(a2, 0))
              break;
            e2 = a2.suspendedLanes;
            if ((e2 & d2) !== d2) {
              L$1();
              a2.pingedLanes |= a2.suspendedLanes & e2;
              break;
            }
            a2.timeoutHandle = Ff(Qk.bind(null, a2, uk, vk), b2);
            break;
          }
          Qk(a2, uk, vk);
          break;
        case 4:
          Dk(a2, d2);
          if ((d2 & 4194240) === d2)
            break;
          b2 = a2.eventTimes;
          for (e2 = -1; 0 < d2; ) {
            var g2 = 31 - oc(d2);
            f2 = 1 << g2;
            g2 = b2[g2];
            g2 > e2 && (e2 = g2);
            d2 &= ~f2;
          }
          d2 = e2;
          d2 = B$1() - d2;
          d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * mk(d2 / 1960)) - d2;
          if (10 < d2) {
            a2.timeoutHandle = Ff(Qk.bind(null, a2, uk, vk), d2);
            break;
          }
          Qk(a2, uk, vk);
          break;
        case 5:
          Qk(a2, uk, vk);
          break;
        default:
          throw Error(p$7(329));
      }
    }
  }
  Ek(a2, B$1());
  return a2.callbackNode === c2 ? Hk.bind(null, a2) : null;
}
function Ok(a2, b2) {
  var c2 = tk;
  a2.current.memoizedState.isDehydrated && (Lk(a2, b2).flags |= 256);
  a2 = Jk(a2, b2);
  2 !== a2 && (b2 = uk, uk = c2, null !== b2 && Gj(b2));
  return a2;
}
function Gj(a2) {
  null === uk ? uk = a2 : uk.push.apply(uk, a2);
}
function Pk(a2) {
  for (var b2 = a2; ; ) {
    if (b2.flags & 16384) {
      var c2 = b2.updateQueue;
      if (null !== c2 && (c2 = c2.stores, null !== c2))
        for (var d2 = 0; d2 < c2.length; d2++) {
          var e2 = c2[d2], f2 = e2.getSnapshot;
          e2 = e2.value;
          try {
            if (!He(f2(), e2))
              return false;
          } catch (g2) {
            return false;
          }
        }
    }
    c2 = b2.child;
    if (b2.subtreeFlags & 16384 && null !== c2)
      c2.return = b2, b2 = c2;
    else {
      if (b2 === a2)
        break;
      for (; null === b2.sibling; ) {
        if (null === b2.return || b2.return === a2)
          return true;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return true;
}
function Dk(a2, b2) {
  b2 &= ~sk;
  b2 &= ~rk;
  a2.suspendedLanes |= b2;
  a2.pingedLanes &= ~b2;
  for (a2 = a2.expirationTimes; 0 < b2; ) {
    var c2 = 31 - oc(b2), d2 = 1 << c2;
    a2[c2] = -1;
    b2 &= ~d2;
  }
}
function Fk(a2) {
  if (0 !== (K & 6))
    throw Error(p$7(327));
  Ik();
  var b2 = uc(a2, 0);
  if (0 === (b2 & 1))
    return Ek(a2, B$1()), null;
  var c2 = Jk(a2, b2);
  if (0 !== a2.tag && 2 === c2) {
    var d2 = xc(a2);
    0 !== d2 && (b2 = d2, c2 = Ok(a2, d2));
  }
  if (1 === c2)
    throw c2 = qk, Lk(a2, 0), Dk(a2, b2), Ek(a2, B$1()), c2;
  if (6 === c2)
    throw Error(p$7(345));
  a2.finishedWork = a2.current.alternate;
  a2.finishedLanes = b2;
  Qk(a2, uk, vk);
  Ek(a2, B$1());
  return null;
}
function Rk(a2, b2) {
  var c2 = K;
  K |= 1;
  try {
    return a2(b2);
  } finally {
    K = c2, 0 === K && (Hj = B$1() + 500, fg && jg());
  }
}
function Sk(a2) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b2 = K;
  K |= 1;
  var c2 = pk.transition, d2 = C$3;
  try {
    if (pk.transition = null, C$3 = 1, a2)
      return a2();
  } finally {
    C$3 = d2, pk.transition = c2, K = b2, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E$1(fj);
}
function Lk(a2, b2) {
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  var c2 = a2.timeoutHandle;
  -1 !== c2 && (a2.timeoutHandle = -1, Gf(c2));
  if (null !== Y$1)
    for (c2 = Y$1.return; null !== c2; ) {
      var d2 = c2;
      wg(d2);
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          null !== d2 && void 0 !== d2 && $f();
          break;
        case 3:
          Jh();
          E$1(Wf);
          E$1(H$1);
          Oh();
          break;
        case 5:
          Lh(d2);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E$1(M$1);
          break;
        case 19:
          E$1(M$1);
          break;
        case 10:
          Rg(d2.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      c2 = c2.return;
    }
  R$2 = a2;
  Y$1 = a2 = wh(a2.current, null);
  Z = gj = b2;
  T$1 = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b2 = 0; b2 < Wg.length; b2++)
      if (c2 = Wg[b2], d2 = c2.interleaved, null !== d2) {
        c2.interleaved = null;
        var e2 = d2.next, f2 = c2.pending;
        if (null !== f2) {
          var g2 = f2.next;
          f2.next = e2;
          d2.next = g2;
        }
        c2.pending = d2;
      }
    Wg = null;
  }
  return a2;
}
function Nk(a2, b2) {
  do {
    var c2 = Y$1;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d2 = N$3.memoizedState; null !== d2; ) {
          var e2 = d2.queue;
          null !== e2 && (e2.pending = null);
          d2 = d2.next;
        }
        Sh = false;
      }
      Rh = 0;
      P$2 = O$1 = N$3 = null;
      Th = false;
      Uh = 0;
      ok.current = null;
      if (null === c2 || null === c2.return) {
        T$1 = 1;
        qk = b2;
        Y$1 = null;
        break;
      }
      a: {
        var f2 = a2, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = Z;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Vi(g2);
          if (null !== y2) {
            y2.flags &= -257;
            Wi(y2, g2, h2, f2, b2);
            y2.mode & 1 && Ti(f2, l2, b2);
            b2 = y2;
            k2 = l2;
            var n2 = b2.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b2.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b2 & 1)) {
              Ti(f2, l2, b2);
              uj();
              break a;
            }
            k2 = Error(p$7(426));
          }
        } else if (I$1 && h2.mode & 1) {
          var J2 = Vi(g2);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Wi(J2, g2, h2, f2, b2);
            Jg(Ki(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ki(k2, h2);
        4 !== T$1 && (T$1 = 2);
        null === tk ? tk = [f2] : tk.push(f2);
        f2 = g2;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b2 &= -b2;
              f2.lanes |= b2;
              var x2 = Oi(f2, k2, b2);
              fh(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Si || !Si.has(u2)))) {
                f2.flags |= 65536;
                b2 &= -b2;
                f2.lanes |= b2;
                var F2 = Ri(f2, h2, b2);
                fh(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Tk(c2);
    } catch (na) {
      b2 = na;
      Y$1 === c2 && null !== c2 && (Y$1 = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a2 = nk.current;
  nk.current = ai;
  return null === a2 ? ai : a2;
}
function uj() {
  if (0 === T$1 || 3 === T$1 || 2 === T$1)
    T$1 = 4;
  null === R$2 || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R$2, Z);
}
function Jk(a2, b2) {
  var c2 = K;
  K |= 2;
  var d2 = Kk();
  if (R$2 !== a2 || Z !== b2)
    vk = null, Lk(a2, b2);
  do
    try {
      Uk();
      break;
    } catch (e2) {
      Nk(a2, e2);
    }
  while (1);
  Qg();
  K = c2;
  nk.current = d2;
  if (null !== Y$1)
    throw Error(p$7(261));
  R$2 = null;
  Z = 0;
  return T$1;
}
function Uk() {
  for (; null !== Y$1; )
    Vk(Y$1);
}
function Mk() {
  for (; null !== Y$1 && !cc(); )
    Vk(Y$1);
}
function Vk(a2) {
  var b2 = Wk(a2.alternate, a2, gj);
  a2.memoizedProps = a2.pendingProps;
  null === b2 ? Tk(a2) : Y$1 = b2;
  ok.current = null;
}
function Tk(a2) {
  var b2 = a2;
  do {
    var c2 = b2.alternate;
    a2 = b2.return;
    if (0 === (b2.flags & 32768)) {
      if (c2 = Fj(c2, b2, gj), null !== c2) {
        Y$1 = c2;
        return;
      }
    } else {
      c2 = Jj(c2, b2);
      if (null !== c2) {
        c2.flags &= 32767;
        Y$1 = c2;
        return;
      }
      if (null !== a2)
        a2.flags |= 32768, a2.subtreeFlags = 0, a2.deletions = null;
      else {
        T$1 = 6;
        Y$1 = null;
        return;
      }
    }
    b2 = b2.sibling;
    if (null !== b2) {
      Y$1 = b2;
      return;
    }
    Y$1 = b2 = a2;
  } while (null !== b2);
  0 === T$1 && (T$1 = 5);
}
function Qk(a2, b2, c2) {
  var d2 = C$3, e2 = pk.transition;
  try {
    pk.transition = null, C$3 = 1, Xk(a2, b2, c2, d2);
  } finally {
    pk.transition = e2, C$3 = d2;
  }
  return null;
}
function Xk(a2, b2, c2, d2) {
  do
    Ik();
  while (null !== xk);
  if (0 !== (K & 6))
    throw Error(p$7(327));
  c2 = a2.finishedWork;
  var e2 = a2.finishedLanes;
  if (null === c2)
    return null;
  a2.finishedWork = null;
  a2.finishedLanes = 0;
  if (c2 === a2.current)
    throw Error(p$7(177));
  a2.callbackNode = null;
  a2.callbackPriority = 0;
  var f2 = c2.lanes | c2.childLanes;
  Bc(a2, f2);
  a2 === R$2 && (Y$1 = R$2 = null, Z = 0);
  0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || wk || (wk = true, Gk(hc, function() {
    Ik();
    return null;
  }));
  f2 = 0 !== (c2.flags & 15990);
  if (0 !== (c2.subtreeFlags & 15990) || f2) {
    f2 = pk.transition;
    pk.transition = null;
    var g2 = C$3;
    C$3 = 1;
    var h2 = K;
    K |= 4;
    ok.current = null;
    Pj(a2, c2);
    ek(c2, a2);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a2.current = c2;
    ik(c2);
    dc();
    K = h2;
    C$3 = g2;
    pk.transition = f2;
  } else
    a2.current = c2;
  wk && (wk = false, xk = a2, yk = e2);
  f2 = a2.pendingLanes;
  0 === f2 && (Si = null);
  mc(c2.stateNode);
  Ek(a2, B$1());
  if (null !== b2)
    for (d2 = a2.onRecoverableError, c2 = 0; c2 < b2.length; c2++)
      e2 = b2[c2], d2(e2.value, { componentStack: e2.stack, digest: e2.digest });
  if (Pi)
    throw Pi = false, a2 = Qi, Qi = null, a2;
  0 !== (yk & 1) && 0 !== a2.tag && Ik();
  f2 = a2.pendingLanes;
  0 !== (f2 & 1) ? a2 === Ak ? zk++ : (zk = 0, Ak = a2) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a2 = Dc(yk), b2 = pk.transition, c2 = C$3;
    try {
      pk.transition = null;
      C$3 = 16 > a2 ? 16 : a2;
      if (null === xk)
        var d2 = false;
      else {
        a2 = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6))
          throw Error(p$7(331));
        var e2 = K;
        K |= 4;
        for (V$1 = a2.current; null !== V$1; ) {
          var f2 = V$1, g2 = f2.child;
          if (0 !== (V$1.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V$1 = l2; null !== V$1; ) {
                  var m2 = V$1;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V$1 = q2;
                  else
                    for (; null !== V$1; ) {
                      m2 = V$1;
                      var r2 = m2.sibling, y2 = m2.return;
                      Tj(m2);
                      if (m2 === l2) {
                        V$1 = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V$1 = r2;
                        break;
                      }
                      V$1 = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V$1 = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g2)
            g2.return = f2, V$1 = g2;
          else
            b:
              for (; null !== V$1; ) {
                f2 = V$1;
                if (0 !== (f2.flags & 2048))
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f2, f2.return);
                  }
                var x2 = f2.sibling;
                if (null !== x2) {
                  x2.return = f2.return;
                  V$1 = x2;
                  break b;
                }
                V$1 = f2.return;
              }
        }
        var w2 = a2.current;
        for (V$1 = w2; null !== V$1; ) {
          g2 = V$1;
          var u2 = g2.child;
          if (0 !== (g2.subtreeFlags & 2064) && null !== u2)
            u2.return = g2, V$1 = u2;
          else
            b:
              for (g2 = w2; null !== V$1; ) {
                h2 = V$1;
                if (0 !== (h2.flags & 2048))
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h2);
                    }
                  } catch (na) {
                    W$1(h2, h2.return, na);
                  }
                if (h2 === g2) {
                  V$1 = null;
                  break b;
                }
                var F2 = h2.sibling;
                if (null !== F2) {
                  F2.return = h2.return;
                  V$1 = F2;
                  break b;
                }
                V$1 = h2.return;
              }
        }
        K = e2;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a2);
          } catch (na) {
          }
        d2 = true;
      }
      return d2;
    } finally {
      C$3 = c2, pk.transition = b2;
    }
  }
  return false;
}
function Yk(a2, b2, c2) {
  b2 = Ki(c2, b2);
  b2 = Oi(a2, b2, 1);
  a2 = dh(a2, b2, 1);
  b2 = L$1();
  null !== a2 && (Ac(a2, 1, b2), Ek(a2, b2));
}
function W$1(a2, b2, c2) {
  if (3 === a2.tag)
    Yk(a2, a2, c2);
  else
    for (; null !== b2; ) {
      if (3 === b2.tag) {
        Yk(b2, a2, c2);
        break;
      } else if (1 === b2.tag) {
        var d2 = b2.stateNode;
        if ("function" === typeof b2.type.getDerivedStateFromError || "function" === typeof d2.componentDidCatch && (null === Si || !Si.has(d2))) {
          a2 = Ki(c2, a2);
          a2 = Ri(b2, a2, 1);
          b2 = dh(b2, a2, 1);
          a2 = L$1();
          null !== b2 && (Ac(b2, 1, a2), Ek(b2, a2));
          break;
        }
      }
      b2 = b2.return;
    }
}
function Ui(a2, b2, c2) {
  var d2 = a2.pingCache;
  null !== d2 && d2.delete(b2);
  b2 = L$1();
  a2.pingedLanes |= a2.suspendedLanes & c2;
  R$2 === a2 && (Z & c2) === c2 && (4 === T$1 || 3 === T$1 && (Z & 130023424) === Z && 500 > B$1() - gk ? Lk(a2, 0) : sk |= c2);
  Ek(a2, b2);
}
function Zk(a2, b2) {
  0 === b2 && (0 === (a2.mode & 1) ? b2 = 1 : (b2 = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c2 = L$1();
  a2 = Zg(a2, b2);
  null !== a2 && (Ac(a2, b2, c2), Ek(a2, c2));
}
function vj(a2) {
  var b2 = a2.memoizedState, c2 = 0;
  null !== b2 && (c2 = b2.retryLane);
  Zk(a2, c2);
}
function ck(a2, b2) {
  var c2 = 0;
  switch (a2.tag) {
    case 13:
      var d2 = a2.stateNode;
      var e2 = a2.memoizedState;
      null !== e2 && (c2 = e2.retryLane);
      break;
    case 19:
      d2 = a2.stateNode;
      break;
    default:
      throw Error(p$7(314));
  }
  null !== d2 && d2.delete(b2);
  Zk(a2, c2);
}
var Wk;
Wk = function(a2, b2, c2) {
  if (null !== a2)
    if (a2.memoizedProps !== b2.pendingProps || Wf.current)
      Ug = true;
    else {
      if (0 === (a2.lanes & c2) && 0 === (b2.flags & 128))
        return Ug = false, zj(a2, b2, c2);
      Ug = 0 !== (a2.flags & 131072) ? true : false;
    }
  else
    Ug = false, I$1 && 0 !== (b2.flags & 1048576) && ug(b2, ng, b2.index);
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      var d2 = b2.type;
      jj(a2, b2);
      a2 = b2.pendingProps;
      var e2 = Yf(b2, H$1.current);
      Tg(b2, c2);
      e2 = Xh(null, b2, d2, a2, e2, c2);
      var f2 = bi();
      b2.flags |= 1;
      "object" === typeof e2 && null !== e2 && "function" === typeof e2.render && void 0 === e2.$$typeof ? (b2.tag = 1, b2.memoizedState = null, b2.updateQueue = null, Zf(d2) ? (f2 = true, cg(b2)) : f2 = false, b2.memoizedState = null !== e2.state && void 0 !== e2.state ? e2.state : null, ah(b2), e2.updater = nh, b2.stateNode = e2, e2._reactInternals = b2, rh(b2, d2, a2, c2), b2 = kj(null, b2, d2, true, f2, c2)) : (b2.tag = 0, I$1 && f2 && vg(b2), Yi(null, b2, e2, c2), b2 = b2.child);
      return b2;
    case 16:
      d2 = b2.elementType;
      a: {
        jj(a2, b2);
        a2 = b2.pendingProps;
        e2 = d2._init;
        d2 = e2(d2._payload);
        b2.type = d2;
        e2 = b2.tag = $k(d2);
        a2 = Lg(d2, a2);
        switch (e2) {
          case 0:
            b2 = dj(null, b2, d2, a2, c2);
            break a;
          case 1:
            b2 = ij(null, b2, d2, a2, c2);
            break a;
          case 11:
            b2 = Zi(null, b2, d2, a2, c2);
            break a;
          case 14:
            b2 = aj(null, b2, d2, Lg(d2.type, a2), c2);
            break a;
        }
        throw Error(p$7(
          306,
          d2,
          ""
        ));
      }
      return b2;
    case 0:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), dj(a2, b2, d2, e2, c2);
    case 1:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), ij(a2, b2, d2, e2, c2);
    case 3:
      a: {
        lj(b2);
        if (null === a2)
          throw Error(p$7(387));
        d2 = b2.pendingProps;
        f2 = b2.memoizedState;
        e2 = f2.element;
        bh(a2, b2);
        gh(b2, d2, null, c2);
        var g2 = b2.memoizedState;
        d2 = g2.element;
        if (f2.isDehydrated)
          if (f2 = { element: d2, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b2.updateQueue.baseState = f2, b2.memoizedState = f2, b2.flags & 256) {
            e2 = Ki(Error(p$7(423)), b2);
            b2 = mj(a2, b2, d2, c2, e2);
            break a;
          } else if (d2 !== e2) {
            e2 = Ki(Error(p$7(424)), b2);
            b2 = mj(a2, b2, d2, c2, e2);
            break a;
          } else
            for (yg = Lf(b2.stateNode.containerInfo.firstChild), xg = b2, I$1 = true, zg = null, c2 = Ch(b2, null, d2, c2), b2.child = c2; c2; )
              c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
        else {
          Ig();
          if (d2 === e2) {
            b2 = $i(a2, b2, c2);
            break a;
          }
          Yi(a2, b2, d2, c2);
        }
        b2 = b2.child;
      }
      return b2;
    case 5:
      return Kh(b2), null === a2 && Eg(b2), d2 = b2.type, e2 = b2.pendingProps, f2 = null !== a2 ? a2.memoizedProps : null, g2 = e2.children, Ef(d2, e2) ? g2 = null : null !== f2 && Ef(d2, f2) && (b2.flags |= 32), hj(a2, b2), Yi(a2, b2, g2, c2), b2.child;
    case 6:
      return null === a2 && Eg(b2), null;
    case 13:
      return pj(a2, b2, c2);
    case 4:
      return Ih(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, null === a2 ? b2.child = Bh(b2, null, d2, c2) : Yi(a2, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), Zi(a2, b2, d2, e2, c2);
    case 7:
      return Yi(a2, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return Yi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return Yi(a2, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e2 = b2.pendingProps;
        f2 = b2.memoizedProps;
        g2 = e2.value;
        G$1(Mg, d2._currentValue);
        d2._currentValue = g2;
        if (null !== f2)
          if (He(f2.value, g2)) {
            if (f2.children === e2.children && !Wf.current) {
              b2 = $i(a2, b2, c2);
              break a;
            }
          } else
            for (f2 = b2.child, null !== f2 && (f2.return = b2); null !== f2; ) {
              var h2 = f2.dependencies;
              if (null !== h2) {
                g2 = f2.child;
                for (var k2 = h2.firstContext; null !== k2; ) {
                  if (k2.context === d2) {
                    if (1 === f2.tag) {
                      k2 = ch(-1, c2 & -c2);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c2;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c2);
                    Sg(
                      f2.return,
                      c2,
                      b2
                    );
                    h2.lanes |= c2;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g2 = f2.type === b2.type ? null : f2.child;
              else if (18 === f2.tag) {
                g2 = f2.return;
                if (null === g2)
                  throw Error(p$7(341));
                g2.lanes |= c2;
                h2 = g2.alternate;
                null !== h2 && (h2.lanes |= c2);
                Sg(g2, c2, b2);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (null !== g2)
                g2.return = f2;
              else
                for (g2 = f2; null !== g2; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (null !== f2) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        Yi(a2, b2, e2.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e2 = b2.type, d2 = b2.pendingProps.children, Tg(b2, c2), e2 = Vg(e2), d2 = d2(e2), b2.flags |= 1, Yi(a2, b2, d2, c2), b2.child;
    case 14:
      return d2 = b2.type, e2 = Lg(d2, b2.pendingProps), e2 = Lg(d2.type, e2), aj(a2, b2, d2, e2, c2);
    case 15:
      return cj(a2, b2, b2.type, b2.pendingProps, c2);
    case 17:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : Lg(d2, e2), jj(a2, b2), b2.tag = 1, Zf(d2) ? (a2 = true, cg(b2)) : a2 = false, Tg(b2, c2), ph(b2, d2, e2), rh(b2, d2, e2, c2), kj(null, b2, d2, true, a2, c2);
    case 19:
      return yj(a2, b2, c2);
    case 22:
      return ej(a2, b2, c2);
  }
  throw Error(p$7(156, b2.tag));
};
function Gk(a2, b2) {
  return ac(a2, b2);
}
function al(a2, b2, c2, d2) {
  this.tag = a2;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a2, b2, c2, d2) {
  return new al(a2, b2, c2, d2);
}
function bj(a2) {
  a2 = a2.prototype;
  return !(!a2 || !a2.isReactComponent);
}
function $k(a2) {
  if ("function" === typeof a2)
    return bj(a2) ? 1 : 0;
  if (void 0 !== a2 && null !== a2) {
    a2 = a2.$$typeof;
    if (a2 === Da)
      return 11;
    if (a2 === Ga)
      return 14;
  }
  return 2;
}
function wh(a2, b2) {
  var c2 = a2.alternate;
  null === c2 ? (c2 = Bg(a2.tag, b2, a2.key, a2.mode), c2.elementType = a2.elementType, c2.type = a2.type, c2.stateNode = a2.stateNode, c2.alternate = a2, a2.alternate = c2) : (c2.pendingProps = b2, c2.type = a2.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a2.flags & 14680064;
  c2.childLanes = a2.childLanes;
  c2.lanes = a2.lanes;
  c2.child = a2.child;
  c2.memoizedProps = a2.memoizedProps;
  c2.memoizedState = a2.memoizedState;
  c2.updateQueue = a2.updateQueue;
  b2 = a2.dependencies;
  c2.dependencies = null === b2 ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a2.sibling;
  c2.index = a2.index;
  c2.ref = a2.ref;
  return c2;
}
function yh(a2, b2, c2, d2, e2, f2) {
  var g2 = 2;
  d2 = a2;
  if ("function" === typeof a2)
    bj(a2) && (g2 = 1);
  else if ("string" === typeof a2)
    g2 = 5;
  else
    a:
      switch (a2) {
        case ya:
          return Ah(c2.children, e2, f2, b2);
        case za:
          g2 = 8;
          e2 |= 8;
          break;
        case Aa:
          return a2 = Bg(12, c2, b2, e2 | 2), a2.elementType = Aa, a2.lanes = f2, a2;
        case Ea:
          return a2 = Bg(13, c2, b2, e2), a2.elementType = Ea, a2.lanes = f2, a2;
        case Fa:
          return a2 = Bg(19, c2, b2, e2), a2.elementType = Fa, a2.lanes = f2, a2;
        case Ia:
          return qj(c2, e2, f2, b2);
        default:
          if ("object" === typeof a2 && null !== a2)
            switch (a2.$$typeof) {
              case Ba:
                g2 = 10;
                break a;
              case Ca:
                g2 = 9;
                break a;
              case Da:
                g2 = 11;
                break a;
              case Ga:
                g2 = 14;
                break a;
              case Ha:
                g2 = 16;
                d2 = null;
                break a;
            }
          throw Error(p$7(130, null == a2 ? a2 : typeof a2, ""));
      }
  b2 = Bg(g2, c2, b2, e2);
  b2.elementType = a2;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function Ah(a2, b2, c2, d2) {
  a2 = Bg(7, a2, d2, b2);
  a2.lanes = c2;
  return a2;
}
function qj(a2, b2, c2, d2) {
  a2 = Bg(22, a2, d2, b2);
  a2.elementType = Ia;
  a2.lanes = c2;
  a2.stateNode = { isHidden: false };
  return a2;
}
function xh(a2, b2, c2) {
  a2 = Bg(6, a2, null, b2);
  a2.lanes = c2;
  return a2;
}
function zh(a2, b2, c2) {
  b2 = Bg(4, null !== a2.children ? a2.children : [], a2.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
  return b2;
}
function bl(a2, b2, c2, d2, e2) {
  this.tag = b2;
  this.containerInfo = a2;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d2;
  this.onRecoverableError = e2;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  a2 = new bl(a2, b2, c2, h2, k2);
  1 === b2 ? (b2 = 1, true === f2 && (b2 |= 8)) : b2 = 0;
  f2 = Bg(3, null, null, b2);
  a2.current = f2;
  f2.stateNode = a2;
  f2.memoizedState = { element: d2, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  ah(f2);
  return a2;
}
function dl(a2, b2, c2) {
  var d2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d2 ? null : "" + d2, children: a2, containerInfo: b2, implementation: c2 };
}
function el(a2) {
  if (!a2)
    return Vf;
  a2 = a2._reactInternals;
  a: {
    if (Vb(a2) !== a2 || 1 !== a2.tag)
      throw Error(p$7(170));
    var b2 = a2;
    do {
      switch (b2.tag) {
        case 3:
          b2 = b2.stateNode.context;
          break a;
        case 1:
          if (Zf(b2.type)) {
            b2 = b2.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b2 = b2.return;
    } while (null !== b2);
    throw Error(p$7(171));
  }
  if (1 === a2.tag) {
    var c2 = a2.type;
    if (Zf(c2))
      return bg(a2, c2, b2);
  }
  return b2;
}
function fl(a2, b2, c2, d2, e2, f2, g2, h2, k2) {
  a2 = cl(c2, d2, true, a2, e2, f2, g2, h2, k2);
  a2.context = el(null);
  c2 = a2.current;
  d2 = L$1();
  e2 = lh(c2);
  f2 = ch(d2, e2);
  f2.callback = void 0 !== b2 && null !== b2 ? b2 : null;
  dh(c2, f2, e2);
  a2.current.lanes = e2;
  Ac(a2, e2, d2);
  Ek(a2, d2);
  return a2;
}
function gl(a2, b2, c2, d2) {
  var e2 = b2.current, f2 = L$1(), g2 = lh(e2);
  c2 = el(c2);
  null === b2.context ? b2.context = c2 : b2.pendingContext = c2;
  b2 = ch(f2, g2);
  b2.payload = { element: a2 };
  d2 = void 0 === d2 ? null : d2;
  null !== d2 && (b2.callback = d2);
  a2 = dh(e2, b2, g2);
  null !== a2 && (mh(a2, e2, g2, f2), eh(a2, e2, g2));
  return g2;
}
function hl(a2) {
  a2 = a2.current;
  if (!a2.child)
    return null;
  switch (a2.child.tag) {
    case 5:
      return a2.child.stateNode;
    default:
      return a2.child.stateNode;
  }
}
function il(a2, b2) {
  a2 = a2.memoizedState;
  if (null !== a2 && null !== a2.dehydrated) {
    var c2 = a2.retryLane;
    a2.retryLane = 0 !== c2 && c2 < b2 ? c2 : b2;
  }
}
function jl(a2, b2) {
  il(a2, b2);
  (a2 = a2.alternate) && il(a2, b2);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function(a2) {
  console.error(a2);
};
function ml(a2) {
  this._internalRoot = a2;
}
nl.prototype.render = ml.prototype.render = function(a2) {
  var b2 = this._internalRoot;
  if (null === b2)
    throw Error(p$7(409));
  gl(a2, b2, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function() {
  var a2 = this._internalRoot;
  if (null !== a2) {
    this._internalRoot = null;
    var b2 = a2.containerInfo;
    Sk(function() {
      gl(null, a2, null, null);
    });
    b2[uf] = null;
  }
};
function nl(a2) {
  this._internalRoot = a2;
}
nl.prototype.unstable_scheduleHydration = function(a2) {
  if (a2) {
    var b2 = Hc();
    a2 = { blockedOn: null, target: a2, priority: b2 };
    for (var c2 = 0; c2 < Qc.length && 0 !== b2 && b2 < Qc[c2].priority; c2++)
      ;
    Qc.splice(c2, 0, a2);
    0 === c2 && Vc(a2);
  }
};
function ol(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType);
}
function pl(a2) {
  return !(!a2 || 1 !== a2.nodeType && 9 !== a2.nodeType && 11 !== a2.nodeType && (8 !== a2.nodeType || " react-mount-point-unstable " !== a2.nodeValue));
}
function ql() {
}
function rl(a2, b2, c2, d2, e2) {
  if (e2) {
    if ("function" === typeof d2) {
      var f2 = d2;
      d2 = function() {
        var a3 = hl(g2);
        f2.call(a3);
      };
    }
    var g2 = fl(b2, d2, a2, 0, null, false, false, "", ql);
    a2._reactRootContainer = g2;
    a2[uf] = g2.current;
    sf(8 === a2.nodeType ? a2.parentNode : a2);
    Sk();
    return g2;
  }
  for (; e2 = a2.lastChild; )
    a2.removeChild(e2);
  if ("function" === typeof d2) {
    var h2 = d2;
    d2 = function() {
      var a3 = hl(k2);
      h2.call(a3);
    };
  }
  var k2 = cl(a2, 0, false, null, null, false, false, "", ql);
  a2._reactRootContainer = k2;
  a2[uf] = k2.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  Sk(function() {
    gl(b2, k2, c2, d2);
  });
  return k2;
}
function sl(a2, b2, c2, d2, e2) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if ("function" === typeof e2) {
      var h2 = e2;
      e2 = function() {
        var a3 = hl(g2);
        h2.call(a3);
      };
    }
    gl(b2, g2, a2, e2);
  } else
    g2 = rl(c2, b2, a2, e2, d2);
  return hl(g2);
}
Ec = function(a2) {
  switch (a2.tag) {
    case 3:
      var b2 = a2.stateNode;
      if (b2.current.memoizedState.isDehydrated) {
        var c2 = tc(b2.pendingLanes);
        0 !== c2 && (Cc(b2, c2 | 1), Ek(b2, B$1()), 0 === (K & 6) && (Hj = B$1() + 500, jg()));
      }
      break;
    case 13:
      Sk(function() {
        var b3 = Zg(a2, 1);
        if (null !== b3) {
          var c3 = L$1();
          mh(b3, a2, 1, c3);
        }
      }), jl(a2, 1);
  }
};
Fc = function(a2) {
  if (13 === a2.tag) {
    var b2 = Zg(a2, 134217728);
    if (null !== b2) {
      var c2 = L$1();
      mh(b2, a2, 134217728, c2);
    }
    jl(a2, 134217728);
  }
};
Gc = function(a2) {
  if (13 === a2.tag) {
    var b2 = lh(a2), c2 = Zg(a2, b2);
    if (null !== c2) {
      var d2 = L$1();
      mh(c2, a2, b2, d2);
    }
    jl(a2, b2);
  }
};
Hc = function() {
  return C$3;
};
Ic = function(a2, b2) {
  var c2 = C$3;
  try {
    return C$3 = a2, b2();
  } finally {
    C$3 = c2;
  }
};
yb = function(a2, b2, c2) {
  switch (b2) {
    case "input":
      bb(a2, c2);
      b2 = c2.name;
      if ("radio" === c2.type && null != b2) {
        for (c2 = a2; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a2 && d2.form === a2.form) {
            var e2 = Db(d2);
            if (!e2)
              throw Error(p$7(90));
            Wa(d2);
            bb(d2, e2);
          }
        }
      }
      break;
    case "textarea":
      ib(a2, c2);
      break;
    case "select":
      b2 = c2.value, null != b2 && fb(a2, !!c2.multiple, b2, false);
  }
};
Gb = Rk;
Hb = Sk;
var tl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" };
var vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
  a2 = Zb(a2);
  return null === a2 ? null : a2.stateNode;
}, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      kc = wl.inject(vl), lc = wl;
    } catch (a2) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function(a2, b2) {
  var c2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b2))
    throw Error(p$7(200));
  return dl(a2, b2, null, c2);
};
reactDom_production_min.createRoot = function(a2, b2) {
  if (!ol(a2))
    throw Error(p$7(299));
  var c2 = false, d2 = "", e2 = ll;
  null !== b2 && void 0 !== b2 && (true === b2.unstable_strictMode && (c2 = true), void 0 !== b2.identifierPrefix && (d2 = b2.identifierPrefix), void 0 !== b2.onRecoverableError && (e2 = b2.onRecoverableError));
  b2 = cl(a2, 1, false, null, null, c2, false, d2, e2);
  a2[uf] = b2.current;
  sf(8 === a2.nodeType ? a2.parentNode : a2);
  return new ml(b2);
};
reactDom_production_min.findDOMNode = function(a2) {
  if (null == a2)
    return null;
  if (1 === a2.nodeType)
    return a2;
  var b2 = a2._reactInternals;
  if (void 0 === b2) {
    if ("function" === typeof a2.render)
      throw Error(p$7(188));
    a2 = Object.keys(a2).join(",");
    throw Error(p$7(268, a2));
  }
  a2 = Zb(b2);
  a2 = null === a2 ? null : a2.stateNode;
  return a2;
};
reactDom_production_min.flushSync = function(a2) {
  return Sk(a2);
};
reactDom_production_min.hydrate = function(a2, b2, c2) {
  if (!pl(b2))
    throw Error(p$7(200));
  return sl(null, a2, b2, true, c2);
};
reactDom_production_min.hydrateRoot = function(a2, b2, c2) {
  if (!ol(a2))
    throw Error(p$7(405));
  var d2 = null != c2 && c2.hydratedSources || null, e2 = false, f2 = "", g2 = ll;
  null !== c2 && void 0 !== c2 && (true === c2.unstable_strictMode && (e2 = true), void 0 !== c2.identifierPrefix && (f2 = c2.identifierPrefix), void 0 !== c2.onRecoverableError && (g2 = c2.onRecoverableError));
  b2 = fl(b2, null, a2, 1, null != c2 ? c2 : null, e2, false, f2, g2);
  a2[uf] = b2.current;
  sf(a2);
  if (d2)
    for (a2 = 0; a2 < d2.length; a2++)
      c2 = d2[a2], e2 = c2._getVersion, e2 = e2(c2._source), null == b2.mutableSourceEagerHydrationData ? b2.mutableSourceEagerHydrationData = [c2, e2] : b2.mutableSourceEagerHydrationData.push(
        c2,
        e2
      );
  return new nl(b2);
};
reactDom_production_min.render = function(a2, b2, c2) {
  if (!pl(b2))
    throw Error(p$7(200));
  return sl(null, a2, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a2) {
  if (!pl(a2))
    throw Error(p$7(40));
  return a2._reactRootContainer ? (Sk(function() {
    sl(null, null, a2, false, function() {
      a2._reactRootContainer = null;
      a2[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a2, b2, c2, d2) {
  if (!pl(c2))
    throw Error(p$7(200));
  if (null == a2 || void 0 === a2._reactInternals)
    throw Error(p$7(38));
  return sl(a2, b2, c2, false, d2);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var reactDomExports = reactDom.exports;
const ReactDOM = /* @__PURE__ */ getDefaultExportFromCjs(reactDomExports);
var m$c = reactDomExports;
{
  client.createRoot = m$c.createRoot;
  client.hydrateRoot = m$c.hydrateRoot;
}
const scriptRel = "modulepreload";
const assetsURL = function(dep) {
  return "/" + dep;
};
const seen = {};
const __vitePreload = function preload(baseModule, deps, importerUrl) {
  if (!deps || deps.length === 0) {
    return baseModule();
  }
  const links = document.getElementsByTagName("link");
  return Promise.all(deps.map((dep) => {
    dep = assetsURL(dep);
    if (dep in seen)
      return;
    seen[dep] = true;
    const isCss = dep.endsWith(".css");
    const cssSelector = isCss ? '[rel="stylesheet"]' : "";
    const isBaseRelative = !!importerUrl;
    if (isBaseRelative) {
      for (let i2 = links.length - 1; i2 >= 0; i2--) {
        const link2 = links[i2];
        if (link2.href === dep && (!isCss || link2.rel === "stylesheet")) {
          return;
        }
      }
    } else if (document.querySelector(`link[href="${dep}"]${cssSelector}`)) {
      return;
    }
    const link = document.createElement("link");
    link.rel = isCss ? "stylesheet" : scriptRel;
    if (!isCss) {
      link.as = "script";
      link.crossOrigin = "";
    }
    link.href = dep;
    document.head.appendChild(link);
    if (isCss) {
      return new Promise((res, rej) => {
        link.addEventListener("load", res);
        link.addEventListener("error", () => rej(new Error(`Unable to preload CSS for ${dep}`)));
      });
    }
  })).then(() => baseModule());
};
/**
 * @remix-run/router v1.6.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$3() {
  _extends$3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$3.apply(this, arguments);
}
var Action;
(function(Action2) {
  Action2["Pop"] = "POP";
  Action2["Push"] = "PUSH";
  Action2["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash: hash2
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash: hash2
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to === "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message);
    try {
      throw new Error(message);
    } catch (e2) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location2, index2) {
  return {
    usr: location2.state,
    key: location2.key,
    idx: index2
  };
}
function createLocation(current, to, state, key) {
  if (state === void 0) {
    state = null;
  }
  let location2 = _extends$3({
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to === "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
  return location2;
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash: hash2 = ""
  } = _ref;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash2 && hash2 !== "#")
    pathname += hash2.charAt(0) === "#" ? hash2 : "#" + hash2;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  if (options === void 0) {
    options = {};
  }
  let {
    window: window2 = document.defaultView,
    v5Compat = false
  } = options;
  let globalHistory = window2.history;
  let action = Action.Pop;
  let listener = null;
  let index2 = getIndex();
  if (index2 == null) {
    index2 = 0;
    globalHistory.replaceState(_extends$3({}, globalHistory.state, {
      idx: index2
    }), "");
  }
  function getIndex() {
    let state = globalHistory.state || {
      idx: null
    };
    return state.idx;
  }
  function handlePop() {
    action = Action.Pop;
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index2;
    index2 = nextIndex;
    if (listener) {
      listener({
        action,
        location: history.location,
        delta
      });
    }
  }
  function push(to, state) {
    action = Action.Push;
    let location2 = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location2, to);
    index2 = getIndex() + 1;
    let historyState = getHistoryState(location2, index2);
    let url = history.createHref(location2);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 1
      });
    }
  }
  function replace2(to, state) {
    action = Action.Replace;
    let location2 = createLocation(history.location, to, state);
    if (validateLocation)
      validateLocation(location2, to);
    index2 = getIndex();
    let historyState = getHistoryState(location2, index2);
    let url = history.createHref(location2);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({
        action,
        location: history.location,
        delta: 0
      });
    }
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href;
    let href = typeof to === "string" ? to : createPath(to);
    invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
    return new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace: replace2,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
var ResultType;
(function(ResultType2) {
  ResultType2["data"] = "data";
  ResultType2["deferred"] = "deferred";
  ResultType2["redirect"] = "redirect";
  ResultType2["error"] = "error";
})(ResultType || (ResultType = {}));
function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }
  let location2 = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location2.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i2 = 0; matches == null && i2 < branches.length; ++i2) {
    matches = matchRouteBranch(
      branches[i2],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  }
  return matches;
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }
  if (parentsMeta === void 0) {
    parentsMeta = [];
  }
  if (parentPath === void 0) {
    parentPath = "";
  }
  let flattenRoute = (route, index2, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index2,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
      );
      flattenRoutes(route.children, branches, routesMeta, path);
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index2) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) {
      flattenRoute(route, index2);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index2, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/")));
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a2, b2) => a2.score !== b2.score ? b2.score - a2.score : compareIndexes(a2.routesMeta.map((meta) => meta.childrenIndex), b2.routesMeta.map((meta) => meta.childrenIndex)));
}
const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s2) => s2 === "*";
function computeScore(path, index2) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index2) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s2) => !isSplat(s2)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a2, b2) {
  let siblings = a2.length === b2.length && a2.slice(0, -1).every((n2, i2) => n2 === b2[i2]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a2[a2.length - 1] - b2[b2.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i2 = 0; i2 < routesMeta.length; ++i2) {
    let meta = routesMeta[i2];
    let end = i2 === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match2 = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match2)
      return null;
    Object.assign(matchedParams, match2.params);
    let route = meta.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match2.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match2.pathnameBase])),
      route
    });
    if (match2.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match2.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }
  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match2 = pathname.match(matcher);
  if (!match2)
    return null;
  let matchedPathname = match2[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match2.slice(1);
  let params = paramNames.reduce((memo, paramName, index2) => {
    if (paramName === "*") {
      let splatValue = captureGroups[index2] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }
    memo[paramName] = safelyDecodeURIComponent(captureGroups[index2] || "", paramName);
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }
  if (end === void 0) {
    end = true;
  }
  warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let paramNames = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_2, paramName) => {
    paramNames.push(paramName);
    return "/([^\\/]+)";
  });
  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else
    ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    warning(false, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ")."));
    return value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    warning(false, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ")."));
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }
  let {
    pathname: toPathname,
    search = "",
    hash: hash2 = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash2)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1)
        segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char2, field, dest, path) {
  return "Cannot include a '" + char2 + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match2, index2) => index2 === 0 || match2.route.path && match2.route.path.length > 0);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  if (isPathRelative === void 0) {
    isPathRelative = false;
  }
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = _extends$3({}, toArg);
    invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
    invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
    invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from2;
  if (isPathRelative || toPathname == null) {
    from2 = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from2 = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from2);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
const joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
const normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
const normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
const normalizeHash = (hash2) => !hash2 || hash2 === "#" ? "" : hash2.startsWith("#") ? hash2 : "#" + hash2;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = ["post", "put", "patch", "delete"];
new Set(validMutationMethodsArr);
const validRequestMethodsArr = ["get", ...validMutationMethodsArr];
new Set(validRequestMethodsArr);
/**
 * React Router v6.13.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$2() {
  _extends$2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
const START_TRANSITION = "startTransition";
var startTransitionImpl = React$1[START_TRANSITION];
const DataRouterContext = /* @__PURE__ */ reactExports.createContext(null);
const DataRouterStateContext = /* @__PURE__ */ reactExports.createContext(null);
const NavigationContext = /* @__PURE__ */ reactExports.createContext(null);
const LocationContext = /* @__PURE__ */ reactExports.createContext(null);
const RouteContext = /* @__PURE__ */ reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
const RouteErrorContext = /* @__PURE__ */ reactExports.createContext(null);
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    basename,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    hash: hash2,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash: hash2
  });
}
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  !useInRouterContext() ? invariant(false) : void 0;
  return reactExports.useContext(LocationContext).location;
}
function useIsomorphicLayoutEffect(cb2) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb2);
  }
}
function useNavigate() {
  let {
    isDataRoute
  } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  !useInRouterContext() ? invariant(false) : void 0;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let {
    basename,
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match2) => match2.pathnameBase));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    if (dataRouterContext == null && basename !== "/") {
      path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
    }
    (!!options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
  return navigate;
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2;
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match2) => match2.pathnameBase));
  return reactExports.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState) {
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    navigator: navigator2
  } = reactExports.useContext(NavigationContext);
  let {
    matches: parentMatches
  } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  routeMatch && routeMatch.route;
  let locationFromContext = useLocation();
  let location2;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? invariant(false) : void 0;
    location2 = parsedLocationArg;
  } else {
    location2 = locationFromContext;
  }
  let pathname = location2.pathname || "/";
  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });
  let renderedMatches = _renderMatches(matches && matches.map((match2) => Object.assign({}, match2, {
    params: Object.assign({}, parentParams, match2.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathname).pathname : match2.pathname
    ]),
    pathnameBase: match2.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathnameBase).pathname : match2.pathnameBase
    ])
  })), parentMatches, dataRouterState);
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
      value: {
        location: _extends$2({
          pathname: "/",
          search: "",
          hash: "",
          state: null,
          key: "default"
        }, location2),
        navigationType: Action.Pop
      }
    }, renderedMatches);
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  };
  let devInfo = null;
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
const defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error || state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    console.error("React Router caught the following error during render", error, errorInfo);
  }
  render() {
    return this.state.error ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ reactExports.createElement(RouteErrorContext.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match: match2,
    children
  } = _ref;
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match2.route.errorElement || match2.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match2.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  var _dataRouterState2;
  if (parentMatches === void 0) {
    parentMatches = [];
  }
  if (dataRouterState === void 0) {
    dataRouterState = null;
  }
  if (matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m2) => m2.route.id && (errors == null ? void 0 : errors[m2.route.id]));
    !(errorIndex >= 0) ? invariant(false) : void 0;
    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight((outlet, match2, index2) => {
    let error = match2.route.id ? errors == null ? void 0 : errors[match2.route.id] : null;
    let errorElement = null;
    if (dataRouterState) {
      errorElement = match2.route.errorElement || defaultErrorElement;
    }
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index2 + 1));
    let getChildren = () => {
      let children;
      if (error) {
        children = errorElement;
      } else if (match2.route.Component) {
        children = /* @__PURE__ */ reactExports.createElement(match2.route.Component, null);
      } else if (match2.route.element) {
        children = match2.route.element;
      } else {
        children = outlet;
      }
      return /* @__PURE__ */ reactExports.createElement(RenderedRoute, {
        match: match2,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match2.route.ErrorBoundary || match2.route.errorElement || index2 === 0) ? /* @__PURE__ */ reactExports.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: true
      }
    }) : getChildren();
  }, null);
}
var DataRouterHook$1;
(function(DataRouterHook2) {
  DataRouterHook2["UseBlocker"] = "useBlocker";
  DataRouterHook2["UseRevalidator"] = "useRevalidator";
  DataRouterHook2["UseNavigateStable"] = "useNavigate";
})(DataRouterHook$1 || (DataRouterHook$1 = {}));
var DataRouterStateHook$1;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseBlocker"] = "useBlocker";
  DataRouterStateHook2["UseLoaderData"] = "useLoaderData";
  DataRouterStateHook2["UseActionData"] = "useActionData";
  DataRouterStateHook2["UseRouteError"] = "useRouteError";
  DataRouterStateHook2["UseNavigation"] = "useNavigation";
  DataRouterStateHook2["UseRouteLoaderData"] = "useRouteLoaderData";
  DataRouterStateHook2["UseMatches"] = "useMatches";
  DataRouterStateHook2["UseRevalidator"] = "useRevalidator";
  DataRouterStateHook2["UseNavigateStable"] = "useNavigate";
  DataRouterStateHook2["UseRouteId"] = "useRouteId";
})(DataRouterStateHook$1 || (DataRouterStateHook$1 = {}));
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  !ctx ? invariant(false) : void 0;
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  !state ? invariant(false) : void 0;
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  !route ? invariant(false) : void 0;
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext();
  let thisRoute = route.matches[route.matches.length - 1];
  !thisRoute.route.id ? invariant(false) : void 0;
  return thisRoute.route.id;
}
function useRouteError() {
  var _state$errors;
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(DataRouterStateHook$1.UseRouteError);
  let routeId = useCurrentRouteId(DataRouterStateHook$1.UseRouteError);
  if (error) {
    return error;
  }
  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook$1.UseNavigateStable);
  let id2 = useCurrentRouteId(DataRouterStateHook$1.UseNavigateStable);
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(function(to, options) {
    if (options === void 0) {
      options = {};
    }
    if (!activeRef.current)
      return;
    if (typeof to === "number") {
      router.navigate(to);
    } else {
      router.navigate(to, _extends$2({
        fromRouteId: id2
      }, options));
    }
  }, [router, id2]);
  return navigate;
}
function Navigate(_ref4) {
  let {
    to,
    replace: replace2,
    state,
    relative
  } = _ref4;
  !useInRouterContext() ? invariant(false) : void 0;
  let {
    matches
  } = reactExports.useContext(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let navigate = useNavigate();
  let path = resolveTo(to, getPathContributingMatches(matches).map((match2) => match2.pathnameBase), locationPathname, relative === "path");
  let jsonPath = JSON.stringify(path);
  reactExports.useEffect(() => navigate(JSON.parse(jsonPath), {
    replace: replace2,
    state,
    relative
  }), [navigate, jsonPath, relative, replace2, state]);
  return null;
}
function Route(_props) {
  invariant(false);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = false
  } = _ref5;
  !!useInRouterContext() ? invariant(false) : void 0;
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp
  }), [basename, navigator2, staticProp]);
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash: hash2 = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash: hash2,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash2, state, key, navigationType]);
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location: location2
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location2);
}
var AwaitRenderStatus;
(function(AwaitRenderStatus2) {
  AwaitRenderStatus2[AwaitRenderStatus2["pending"] = 0] = "pending";
  AwaitRenderStatus2[AwaitRenderStatus2["success"] = 1] = "success";
  AwaitRenderStatus2[AwaitRenderStatus2["error"] = 2] = "error";
})(AwaitRenderStatus || (AwaitRenderStatus = {}));
new Promise(() => {
});
function createRoutesFromChildren(children, parentPath) {
  if (parentPath === void 0) {
    parentPath = [];
  }
  let routes = [];
  reactExports.Children.forEach(children, (element, index2) => {
    if (!/* @__PURE__ */ reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index2];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    !(element.type === Route) ? invariant(false) : void 0;
    !(!element.props.index || !element.props.children) ? invariant(false) : void 0;
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children, treePath);
    }
    routes.push(route);
  });
  return routes;
}
/**
 * React Router DOM v6.13.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
const _excluded$e = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"];
function BrowserRouter(_ref) {
  let {
    basename,
    children,
    future,
    window: window2
  } = _ref;
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window2,
      v5Compat: true
    });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location
  });
  let {
    v7_startTransition
  } = future || {};
  let setState = reactExports.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  reactExports.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ reactExports.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
const isBrowser$1 = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const Link = /* @__PURE__ */ reactExports.forwardRef(function LinkWithRef(_ref4, ref) {
  let {
    onClick,
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to,
    preventScrollReset
  } = _ref4, rest = _objectWithoutPropertiesLoose$1(_ref4, _excluded$e);
  let {
    basename
  } = reactExports.useContext(NavigationContext);
  let absoluteHref;
  let isExternal = false;
  if (typeof to === "string" && ABSOLUTE_URL_REGEX.test(to)) {
    absoluteHref = to;
    if (isBrowser$1) {
      try {
        let currentUrl = new URL(window.location.href);
        let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
        let path = stripBasename(targetUrl.pathname, basename);
        if (targetUrl.origin === currentUrl.origin && path != null) {
          to = path + targetUrl.search + targetUrl.hash;
        } else {
          isExternal = true;
        }
      } catch (e2) {
      }
    }
  }
  let href = useHref(to, {
    relative
  });
  let internalOnClick = useLinkClickHandler(to, {
    replace: replace2,
    state,
    target,
    preventScrollReset,
    relative
  });
  function handleClick(event) {
    if (onClick)
      onClick(event);
    if (!event.defaultPrevented) {
      internalOnClick(event);
    }
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ reactExports.createElement("a", _extends$1({}, rest, {
      href: absoluteHref || href,
      onClick: isExternal || reloadDocument ? onClick : handleClick,
      ref,
      target
    }))
  );
});
var DataRouterHook;
(function(DataRouterHook2) {
  DataRouterHook2["UseScrollRestoration"] = "useScrollRestoration";
  DataRouterHook2["UseSubmitImpl"] = "useSubmitImpl";
  DataRouterHook2["UseFetcher"] = "useFetcher";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook2) {
  DataRouterStateHook2["UseFetchers"] = "useFetchers";
  DataRouterStateHook2["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative
  } = _temp === void 0 ? {} : _temp;
  let navigate = useNavigate();
  let location2 = useLocation();
  let path = useResolvedPath(to, {
    relative
  });
  return reactExports.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location2) === createPath(path);
      navigate(to, {
        replace: replace2,
        state,
        preventScrollReset,
        relative
      });
    }
  }, [location2, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
const tuple = (...e2) => e2;
const normalColors = tuple("default", "primary", "secondary", "success", "warning", "error", "gradient");
const e$j = (r2, t2 = true) => {
  reactExports.useEffect(() => {
    const e2 = () => r2();
    return t2 && e2(), window.addEventListener("resize", e2), () => window.removeEventListener("resize", e2);
  }, []);
};
var e$i = "colors", t$e = "sizes", r$i = "space", n$d = { gap: r$i, gridGap: r$i, columnGap: r$i, gridColumnGap: r$i, rowGap: r$i, gridRowGap: r$i, inset: r$i, insetBlock: r$i, insetBlockEnd: r$i, insetBlockStart: r$i, insetInline: r$i, insetInlineEnd: r$i, insetInlineStart: r$i, margin: r$i, marginTop: r$i, marginRight: r$i, marginBottom: r$i, marginLeft: r$i, marginBlock: r$i, marginBlockEnd: r$i, marginBlockStart: r$i, marginInline: r$i, marginInlineEnd: r$i, marginInlineStart: r$i, padding: r$i, paddingTop: r$i, paddingRight: r$i, paddingBottom: r$i, paddingLeft: r$i, paddingBlock: r$i, paddingBlockEnd: r$i, paddingBlockStart: r$i, paddingInline: r$i, paddingInlineEnd: r$i, paddingInlineStart: r$i, top: r$i, right: r$i, bottom: r$i, left: r$i, scrollMargin: r$i, scrollMarginTop: r$i, scrollMarginRight: r$i, scrollMarginBottom: r$i, scrollMarginLeft: r$i, scrollMarginX: r$i, scrollMarginY: r$i, scrollMarginBlock: r$i, scrollMarginBlockEnd: r$i, scrollMarginBlockStart: r$i, scrollMarginInline: r$i, scrollMarginInlineEnd: r$i, scrollMarginInlineStart: r$i, scrollPadding: r$i, scrollPaddingTop: r$i, scrollPaddingRight: r$i, scrollPaddingBottom: r$i, scrollPaddingLeft: r$i, scrollPaddingX: r$i, scrollPaddingY: r$i, scrollPaddingBlock: r$i, scrollPaddingBlockEnd: r$i, scrollPaddingBlockStart: r$i, scrollPaddingInline: r$i, scrollPaddingInlineEnd: r$i, scrollPaddingInlineStart: r$i, fontSize: "fontSizes", background: e$i, backgroundColor: e$i, backgroundImage: e$i, borderImage: e$i, border: e$i, borderBlock: e$i, borderBlockEnd: e$i, borderBlockStart: e$i, borderBottom: e$i, borderBottomColor: e$i, borderColor: e$i, borderInline: e$i, borderInlineEnd: e$i, borderInlineStart: e$i, borderLeft: e$i, borderLeftColor: e$i, borderRight: e$i, borderRightColor: e$i, borderTop: e$i, borderTopColor: e$i, caretColor: e$i, color: e$i, columnRuleColor: e$i, fill: e$i, outline: e$i, outlineColor: e$i, stroke: e$i, textDecorationColor: e$i, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t$e, minBlockSize: t$e, maxBlockSize: t$e, inlineSize: t$e, minInlineSize: t$e, maxInlineSize: t$e, width: t$e, minWidth: t$e, maxWidth: t$e, height: t$e, minHeight: t$e, maxHeight: t$e, flexBasis: t$e, gridTemplateColumns: t$e, gridTemplateRows: t$e, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" }, i$5 = (e2, t2) => "function" == typeof t2 ? { "()": Function.prototype.toString.call(t2) } : t2, o$e = () => {
  const e2 = /* @__PURE__ */ Object.create(null);
  return (t2, r2, ...n2) => {
    const o2 = ((e3) => JSON.stringify(e3, i$5))(t2);
    return o2 in e2 ? e2[o2] : e2[o2] = r2(t2, ...n2);
  };
}, l$c = Symbol.for("sxs.internal"), s$4 = (e2, t2) => Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)), a$b = (e2) => {
  for (const t2 in e2)
    return true;
  return false;
}, { hasOwnProperty: c$j } = Object.prototype, d$a = (e2) => e2.includes("-") ? e2 : e2.replace(/[A-Z]/g, (e3) => "-" + e3.toLowerCase()), g$4 = /\s+(?![^()]*\))/, p$6 = (e2) => (t2) => e2(..."string" == typeof t2 ? String(t2).split(g$4) : [t2]), u$5 = { appearance: (e2) => ({ WebkitAppearance: e2, appearance: e2 }), backfaceVisibility: (e2) => ({ WebkitBackfaceVisibility: e2, backfaceVisibility: e2 }), backdropFilter: (e2) => ({ WebkitBackdropFilter: e2, backdropFilter: e2 }), backgroundClip: (e2) => ({ WebkitBackgroundClip: e2, backgroundClip: e2 }), boxDecorationBreak: (e2) => ({ WebkitBoxDecorationBreak: e2, boxDecorationBreak: e2 }), clipPath: (e2) => ({ WebkitClipPath: e2, clipPath: e2 }), content: (e2) => ({ content: e2.includes('"') || e2.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e2) ? e2 : `"${e2}"` }), hyphens: (e2) => ({ WebkitHyphens: e2, hyphens: e2 }), maskImage: (e2) => ({ WebkitMaskImage: e2, maskImage: e2 }), maskSize: (e2) => ({ WebkitMaskSize: e2, maskSize: e2 }), tabSize: (e2) => ({ MozTabSize: e2, tabSize: e2 }), textSizeAdjust: (e2) => ({ WebkitTextSizeAdjust: e2, textSizeAdjust: e2 }), userSelect: (e2) => ({ WebkitUserSelect: e2, userSelect: e2 }), marginBlock: p$6((e2, t2) => ({ marginBlockStart: e2, marginBlockEnd: t2 || e2 })), marginInline: p$6((e2, t2) => ({ marginInlineStart: e2, marginInlineEnd: t2 || e2 })), maxSize: p$6((e2, t2) => ({ maxBlockSize: e2, maxInlineSize: t2 || e2 })), minSize: p$6((e2, t2) => ({ minBlockSize: e2, minInlineSize: t2 || e2 })), paddingBlock: p$6((e2, t2) => ({ paddingBlockStart: e2, paddingBlockEnd: t2 || e2 })), paddingInline: p$6((e2, t2) => ({ paddingInlineStart: e2, paddingInlineEnd: t2 || e2 })) }, h$3 = /([\d.]+)([^]*)/, f$4 = (e2, t2) => e2.length ? e2.reduce((e3, r2) => (e3.push(...t2.map((e4) => e4.includes("&") ? e4.replace(/&/g, /[ +>|~]/.test(r2) && /&.*&/.test(e4) ? `:is(${r2})` : r2) : r2 + " " + e4)), e3), []) : t2, m$b = (e2, t2) => e2 in b$7 && "string" == typeof t2 ? t2.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t3, r2, n2, i2) => r2 + ("stretch" === n2 ? `-moz-available${i2};${d$a(e2)}:${r2}-webkit-fill-available` : `-moz-fit-content${i2};${d$a(e2)}:${r2}fit-content`) + i2) : String(t2), b$7 = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 }, S = (e2) => e2 ? e2 + "-" : "", k$3 = (e2, t2, r2) => e2.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e3, n2, i2, o2, l2) => "$" == o2 == !!i2 ? e3 : (n2 || "--" == o2 ? "calc(" : "") + "var(--" + ("$" === o2 ? S(t2) + (l2.includes("$") ? "" : S(r2)) + l2.replace(/\$/g, "-") : l2) + ")" + (n2 || "--" == o2 ? "*" + (n2 || "") + (i2 || "1") + ")" : "")), y$1 = /\s*,\s*(?![^()]*\))/, B = Object.prototype.toString, $$1 = (e2, t2, r2, n2, i2) => {
  let o2, l2, s2;
  const a2 = (e3, t3, r3) => {
    let c2, g2;
    const p2 = (e4) => {
      for (c2 in e4) {
        const R2 = 64 === c2.charCodeAt(0), z2 = R2 && Array.isArray(e4[c2]) ? e4[c2] : [e4[c2]];
        for (g2 of z2) {
          const e5 = /[A-Z]/.test($2 = c2) ? $2 : $2.replace(/-[^]/g, (e6) => e6[1].toUpperCase()), z3 = "object" == typeof g2 && g2 && g2.toString === B && (!n2.utils[e5] || !t3.length);
          if (e5 in n2.utils && !z3) {
            const t4 = n2.utils[e5];
            if (t4 !== l2) {
              l2 = t4, p2(t4(g2)), l2 = null;
              continue;
            }
          } else if (e5 in u$5) {
            const t4 = u$5[e5];
            if (t4 !== s2) {
              s2 = t4, p2(t4(g2)), s2 = null;
              continue;
            }
          }
          if (R2 && (b2 = c2.slice(1) in n2.media ? "@media " + n2.media[c2.slice(1)] : c2, c2 = b2.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e6, t4, r4, n3, i3, o3) => {
            const l3 = h$3.test(t4), s3 = 0.0625 * (l3 ? -1 : 1), [a3, c3] = l3 ? [n3, t4] : [t4, n3];
            return "(" + ("=" === r4[0] ? "" : ">" === r4[0] === l3 ? "max-" : "min-") + a3 + ":" + ("=" !== r4[0] && 1 === r4.length ? c3.replace(h$3, (e7, t5, n4) => Number(t5) + s3 * (">" === r4 ? 1 : -1) + n4) : c3) + (i3 ? ") and (" + (">" === i3[0] ? "min-" : "max-") + a3 + ":" + (1 === i3.length ? o3.replace(h$3, (e7, t5, r5) => Number(t5) + s3 * (">" === i3 ? -1 : 1) + r5) : o3) : "") + ")";
          })), z3) {
            const e6 = R2 ? r3.concat(c2) : [...r3], n3 = R2 ? [...t3] : f$4(t3, c2.split(y$1));
            void 0 !== o2 && i2(x$2(...o2)), o2 = void 0, a2(g2, n3, e6);
          } else
            void 0 === o2 && (o2 = [[], t3, r3]), c2 = R2 || 36 !== c2.charCodeAt(0) ? c2 : `--${S(n2.prefix)}${c2.slice(1).replace(/\$/g, "-")}`, g2 = z3 ? g2 : "number" == typeof g2 ? g2 && e5 in I ? String(g2) + "px" : String(g2) : k$3(m$b(e5, null == g2 ? "" : g2), n2.prefix, n2.themeMap[e5]), o2[0].push(`${R2 ? `${c2} ` : `${d$a(c2)}:`}${g2}`);
        }
      }
      var b2, $2;
    };
    p2(e3), void 0 !== o2 && i2(x$2(...o2)), o2 = void 0;
  };
  a2(e2, t2, r2);
}, x$2 = (e2, t2, r2) => `${r2.map((e3) => `${e3}{`).join("")}${t2.length ? `${t2.join(",")}{` : ""}${e2.join(";")}${t2.length ? "}" : ""}${Array(r2.length ? r2.length + 1 : 0).join("}")}`, I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 }, R$1 = (e2) => String.fromCharCode(e2 + (e2 > 25 ? 39 : 97)), z$1 = (e2) => ((e3) => {
  let t2, r2 = "";
  for (t2 = Math.abs(e3); t2 > 52; t2 = t2 / 52 | 0)
    r2 = R$1(t2 % 52) + r2;
  return R$1(t2 % 52) + r2;
})(((e3, t2) => {
  let r2 = t2.length;
  for (; r2; )
    e3 = 33 * e3 ^ t2.charCodeAt(--r2);
  return e3;
})(5381, JSON.stringify(e2)) >>> 0), W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"], j = (e2) => {
  if (e2.href && !e2.href.startsWith(location.origin))
    return false;
  try {
    return !!e2.cssRules;
  } catch (e3) {
    return false;
  }
}, E = (e2) => {
  let t2;
  const r2 = () => {
    const { cssRules: e3 } = t2.sheet;
    return [].map.call(e3, (r3, n3) => {
      const { cssText: i2 } = r3;
      let o2 = "";
      if (i2.startsWith("--sxs"))
        return "";
      if (e3[n3 - 1] && (o2 = e3[n3 - 1].cssText).startsWith("--sxs")) {
        if (!r3.cssRules.length)
          return "";
        for (const e4 in t2.rules)
          if (t2.rules[e4].group === r3)
            return `--sxs{--sxs:${[...t2.rules[e4].cache].join(" ")}}${i2}`;
        return r3.cssRules.length ? `${o2}${i2}` : "";
      }
      return i2;
    }).join("");
  }, n2 = () => {
    if (t2) {
      const { rules: e3, sheet: r3 } = t2;
      if (!r3.deleteRule) {
        for (; 3 === Object(Object(r3.cssRules)[0]).type; )
          r3.cssRules.splice(0, 1);
        r3.cssRules = [];
      }
      for (const t3 in e3)
        delete e3[t3];
    }
    const i2 = Object(e2).styleSheets || [];
    for (const e3 of i2)
      if (j(e3)) {
        for (let i3 = 0, o3 = e3.cssRules; o3[i3]; ++i3) {
          const l3 = Object(o3[i3]);
          if (1 !== l3.type)
            continue;
          const s2 = Object(o3[i3 + 1]);
          if (4 !== s2.type)
            continue;
          ++i3;
          const { cssText: a2 } = l3;
          if (!a2.startsWith("--sxs"))
            continue;
          const c2 = a2.slice(14, -3).trim().split(/\s+/), d2 = W[c2[0]];
          d2 && (t2 || (t2 = { sheet: e3, reset: n2, rules: {}, toString: r2 }), t2.rules[d2] = { group: s2, index: i3, cache: new Set(c2) });
        }
        if (t2)
          break;
      }
    if (!t2) {
      const i3 = (e3, t3) => ({ type: t3, cssRules: [], insertRule(e4, t4) {
        this.cssRules.splice(t4, 0, i3(e4, { import: 3, undefined: 1 }[(e4.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return "@media{}" === e3 ? `@media{${[].map.call(this.cssRules, (e4) => e4.cssText).join("")}}` : e3;
      } });
      t2 = { sheet: e2 ? (e2.head || e2).appendChild(document.createElement("style")).sheet : i3("", "text/css"), rules: {}, reset: n2, toString: r2 };
    }
    const { sheet: o2, rules: l2 } = t2;
    for (let e3 = W.length - 1; e3 >= 0; --e3) {
      const t3 = W[e3];
      if (!l2[t3]) {
        const r3 = W[e3 + 1], n3 = l2[r3] ? l2[r3].index : o2.cssRules.length;
        o2.insertRule("@media{}", n3), o2.insertRule(`--sxs{--sxs:${e3}}`, n3), l2[t3] = { group: o2.cssRules[n3 + 1], index: n3, cache: /* @__PURE__ */ new Set([e3]) };
      }
      v$3(l2[t3]);
    }
  };
  return n2(), t2;
}, v$3 = (e2) => {
  const t2 = e2.group;
  let r2 = t2.cssRules.length;
  e2.apply = (e3) => {
    try {
      t2.insertRule(e3, r2), ++r2;
    } catch (e4) {
    }
  };
}, T = Symbol(), w$2 = o$e(), M = (e2, t2) => w$2(e2, () => (...r2) => {
  let n2 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t3 of r2)
    if (null != t3)
      if (t3[l$c]) {
        null == n2.type && (n2.type = t3[l$c].type);
        for (const e3 of t3[l$c].composers)
          n2.composers.add(e3);
      } else
        t3.constructor !== Object || t3.$$typeof ? null == n2.type && (n2.type = t3) : n2.composers.add(C$2(t3, e2));
  return null == n2.type && (n2.type = "span"), n2.composers.size || n2.composers.add(["PJLV", {}, [], [], {}, []]), P$1(e2, n2, t2);
}), C$2 = ({ variants: e2, compoundVariants: t2, defaultVariants: r2, ...n2 }, i2) => {
  const o2 = `${S(i2.prefix)}c-${z$1(n2)}`, l2 = [], s2 = [], d2 = /* @__PURE__ */ Object.create(null), g2 = [];
  for (const e3 in r2)
    d2[e3] = String(r2[e3]);
  if ("object" == typeof e2 && e2)
    for (const t3 in e2) {
      p2 = d2, u2 = t3, c$j.call(p2, u2) || (d2[t3] = "undefined");
      const r3 = e2[t3];
      for (const e3 in r3) {
        const n3 = { [t3]: String(e3) };
        "undefined" === String(e3) && g2.push(t3);
        const i3 = r3[e3], o3 = [n3, i3, !a$b(i3)];
        l2.push(o3);
      }
    }
  var p2, u2;
  if ("object" == typeof t2 && t2)
    for (const e3 of t2) {
      let { css: t3, ...r3 } = e3;
      t3 = "object" == typeof t3 && t3 || {};
      for (const e4 in r3)
        r3[e4] = String(r3[e4]);
      const n3 = [r3, t3, !a$b(t3)];
      s2.push(n3);
    }
  return [o2, n2, l2, s2, d2, g2];
}, P$1 = (e2, t2, r2) => {
  const [n2, i2, o2, a2] = L(t2.composers), c2 = "function" == typeof t2.type || t2.type.$$typeof ? ((e3) => {
    function t3() {
      for (let r3 = 0; r3 < t3[T].length; r3++) {
        const [n3, i3] = t3[T][r3];
        e3.rules[n3].apply(i3);
      }
      return t3[T] = [], null;
    }
    return t3[T] = [], t3.rules = {}, W.forEach((e4) => t3.rules[e4] = { apply: (r3) => t3[T].push([e4, r3]) }), t3;
  })(r2) : null, d2 = (c2 || r2).rules, g2 = `.${n2}${i2.length > 1 ? `:where(.${i2.slice(1).join(".")})` : ""}`, p2 = (l2) => {
    l2 = "object" == typeof l2 && l2 || A$1;
    const { css: s2, ...p3 } = l2, u2 = {};
    for (const e3 in o2)
      if (delete p3[e3], e3 in l2) {
        let t3 = l2[e3];
        "object" == typeof t3 && t3 ? u2[e3] = { "@initial": o2[e3], ...t3 } : (t3 = String(t3), u2[e3] = "undefined" !== t3 || a2.has(e3) ? t3 : o2[e3]);
      } else
        u2[e3] = o2[e3];
    const h2 = /* @__PURE__ */ new Set([...i2]);
    for (const [n3, i3, o3, l3] of t2.composers) {
      r2.rules.styled.cache.has(n3) || (r2.rules.styled.cache.add(n3), $$1(i3, [`.${n3}`], [], e2, (e3) => {
        d2.styled.apply(e3);
      }));
      const t3 = O(o3, u2, e2.media), s3 = O(l3, u2, e2.media, true);
      for (const i4 of t3)
        if (void 0 !== i4)
          for (const [t4, o4, l4] of i4) {
            const i5 = `${n3}-${z$1(o4)}-${t4}`;
            h2.add(i5);
            const s4 = (l4 ? r2.rules.resonevar : r2.rules.onevar).cache, a3 = l4 ? d2.resonevar : d2.onevar;
            s4.has(i5) || (s4.add(i5), $$1(o4, [`.${i5}`], [], e2, (e3) => {
              a3.apply(e3);
            }));
          }
      for (const t4 of s3)
        if (void 0 !== t4)
          for (const [i4, o4] of t4) {
            const t5 = `${n3}-${z$1(o4)}-${i4}`;
            h2.add(t5), r2.rules.allvar.cache.has(t5) || (r2.rules.allvar.cache.add(t5), $$1(o4, [`.${t5}`], [], e2, (e3) => {
              d2.allvar.apply(e3);
            }));
          }
    }
    if ("object" == typeof s2 && s2) {
      const t3 = `${n2}-i${z$1(s2)}-css`;
      h2.add(t3), r2.rules.inline.cache.has(t3) || (r2.rules.inline.cache.add(t3), $$1(s2, [`.${t3}`], [], e2, (e3) => {
        d2.inline.apply(e3);
      }));
    }
    for (const e3 of String(l2.className || "").trim().split(/\s+/))
      e3 && h2.add(e3);
    const f2 = p3.className = [...h2].join(" ");
    return { type: t2.type, className: f2, selector: g2, props: p3, toString: () => f2, deferredInjector: c2 };
  };
  return s$4(p2, { className: n2, selector: g2, [l$c]: t2, toString: () => (r2.rules.styled.cache.has(n2) || p2(), n2) });
}, L = (e2) => {
  let t2 = "";
  const r2 = [], n2 = {}, i2 = [];
  for (const [o2, , , , l2, s2] of e2) {
    "" === t2 && (t2 = o2), r2.push(o2), i2.push(...s2);
    for (const e3 in l2) {
      const t3 = l2[e3];
      (void 0 === n2[e3] || "undefined" !== t3 || s2.includes(t3)) && (n2[e3] = t3);
    }
  }
  return [t2, r2, n2, new Set(i2)];
}, O = (e2, t2, r2, n2) => {
  const i2 = [];
  e:
    for (let [o2, l2, s2] of e2) {
      if (s2)
        continue;
      let e3, a2 = 0, c2 = false;
      for (e3 in o2) {
        const n3 = o2[e3];
        let i3 = t2[e3];
        if (i3 !== n3) {
          if ("object" != typeof i3 || !i3)
            continue e;
          {
            let e4, t3, o3 = 0;
            for (const l3 in i3) {
              if (n3 === String(i3[l3])) {
                if ("@initial" !== l3) {
                  const e5 = l3.slice(1);
                  (t3 = t3 || []).push(e5 in r2 ? r2[e5] : l3.replace(/^@media ?/, "")), c2 = true;
                }
                a2 += o3, e4 = true;
              }
              ++o3;
            }
            if (t3 && t3.length && (l2 = { ["@media " + t3.join(", ")]: l2 }), !e4)
              continue e;
          }
        }
      }
      (i2[a2] = i2[a2] || []).push([n2 ? "cv" : `${e3}-${o2[e3]}`, l2, c2]);
    }
  return i2;
}, A$1 = {}, N$2 = o$e(), D$1 = (e2, t2) => N$2(e2, () => (...r2) => {
  const n2 = () => {
    for (let n3 of r2) {
      n3 = "object" == typeof n3 && n3 || {};
      let r3 = z$1(n3);
      if (!t2.rules.global.cache.has(r3)) {
        if (t2.rules.global.cache.add(r3), "@import" in n3) {
          let e3 = [].indexOf.call(t2.sheet.cssRules, t2.rules.themed.group) - 1;
          for (let r4 of [].concat(n3["@import"]))
            r4 = r4.includes('"') || r4.includes("'") ? r4 : `"${r4}"`, t2.sheet.insertRule(`@import ${r4};`, e3++);
          delete n3["@import"];
        }
        $$1(n3, [], [], e2, (e3) => {
          t2.rules.global.apply(e3);
        });
      }
    }
    return "";
  };
  return s$4(n2, { toString: n2 });
}), H = o$e(), V = (e2, t2) => H(e2, () => (r2) => {
  const n2 = `${S(e2.prefix)}k-${z$1(r2)}`, i2 = () => {
    if (!t2.rules.global.cache.has(n2)) {
      t2.rules.global.cache.add(n2);
      const i3 = [];
      $$1(r2, [], [], e2, (e3) => i3.push(e3));
      const o2 = `@keyframes ${n2}{${i3.join("")}}`;
      t2.rules.global.apply(o2);
    }
    return n2;
  };
  return s$4(i2, { get name() {
    return i2();
  }, toString: i2 });
}), G = class {
  constructor(e2, t2, r2, n2) {
    this.token = null == e2 ? "" : String(e2), this.value = null == t2 ? "" : String(t2), this.scale = null == r2 ? "" : String(r2), this.prefix = null == n2 ? "" : String(n2);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
}, F = o$e(), J = (e2, t2) => F(e2, () => (r2, n2) => {
  n2 = "object" == typeof r2 && r2 || Object(n2);
  const i2 = `.${r2 = (r2 = "string" == typeof r2 ? r2 : "") || `${S(e2.prefix)}t-${z$1(n2)}`}`, o2 = {}, l2 = [];
  for (const t3 in n2) {
    o2[t3] = {};
    for (const r3 in n2[t3]) {
      const i3 = `--${S(e2.prefix)}${t3}-${r3}`, s3 = k$3(String(n2[t3][r3]), e2.prefix, t3);
      o2[t3][r3] = new G(r3, s3, t3, e2.prefix), l2.push(`${i3}:${s3}`);
    }
  }
  const s2 = () => {
    if (l2.length && !t2.rules.themed.cache.has(r2)) {
      t2.rules.themed.cache.add(r2);
      const i3 = `${n2 === e2.theme ? ":root," : ""}.${r2}{${l2.join(";")}}`;
      t2.rules.themed.apply(i3);
    }
    return r2;
  };
  return { ...o2, get className() {
    return s2();
  }, selector: i2, toString: s2 };
}), U = o$e();
var Y = o$e(), q$2 = (e2) => {
  const t2 = ((e3) => {
    let t3 = false;
    const r2 = U(e3, (e4) => {
      t3 = true;
      const r3 = "prefix" in (e4 = "object" == typeof e4 && e4 || {}) ? String(e4.prefix) : "", i2 = "object" == typeof e4.media && e4.media || {}, o2 = "object" == typeof e4.root ? e4.root || null : globalThis.document || null, l2 = "object" == typeof e4.theme && e4.theme || {}, s2 = { prefix: r3, media: i2, theme: l2, themeMap: "object" == typeof e4.themeMap && e4.themeMap || { ...n$d }, utils: "object" == typeof e4.utils && e4.utils || {} }, a2 = E(o2), c2 = { css: M(s2, a2), globalCss: D$1(s2, a2), keyframes: V(s2, a2), createTheme: J(s2, a2), reset() {
        a2.reset(), c2.theme.toString();
      }, theme: {}, sheet: a2, config: s2, prefix: r3, getCssText: a2.toString, toString: a2.toString };
      return String(c2.theme = c2.createTheme(l2)), c2;
    });
    return t3 || r2.reset(), r2;
  })(e2);
  return t2.styled = (({ config: e3, sheet: t3 }) => Y(e3, () => {
    const r2 = M(e3, t3);
    return (...e4) => {
      const t4 = r2(...e4), n2 = t4[l$c].type, i2 = React.forwardRef((e5, r3) => {
        const i3 = e5 && e5.as || n2, { props: o2, deferredInjector: l2 } = t4(e5);
        return delete o2.as, o2.ref = r3, l2 ? React.createElement(React.Fragment, null, React.createElement(i3, o2), React.createElement(l2, null)) : React.createElement(i3, o2);
      });
      return i2.className = t4.className, i2.displayName = `Styled.${n2.displayName || n2.name || n2}`, i2.selector = t4.selector, i2.toString = () => t4.selector, i2[l$c] = t4[l$c], i2;
    };
  }))(t2), t2;
};
function t$d(o2) {
  for (var r2, e2, l2 = Array.prototype.slice.call(arguments, 1); l2.length; )
    for (e2 in r2 = l2.shift())
      r2.hasOwnProperty(e2) && ("object" == typeof o2[e2] && o2[e2] && "[object Array]" !== Object.prototype.toString.call(o2[e2]) && "object" == typeof r2[e2] && null !== r2[e2] ? o2[e2] = t$d({}, o2[e2], r2[e2]) : o2[e2] = r2[e2]);
  return o2;
}
const defaultTokens = { fonts: { sans: "-apple-system, BlinkMacSystemFont, 'Segoe UI','Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans','Helvetica Neue', sans-serif;", mono: "Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono','Courier New', monospace;" }, fontSizes: { xs: "0.75rem", sm: "0.875rem", base: "1rem", md: "1rem", lg: "1.125rem", xl: "1.25rem", "2xl": "1.5rem", "3xl": "1.875rem", "4xl": "2.25rem", "5xl": "3rem", "6xl": "3.75rem", "7xl": "4.5rem", "8xl": "6rem", "9xl": "8rem" }, fontWeights: { hairline: 100, thin: 200, light: 300, normal: 400, medium: 500, semibold: 600, bold: 700, extrabold: 800, black: 900 }, lineHeights: { xs: 1, sm: 1.25, base: 1.5, md: 1.5, lg: 1.75, xl: 1.75, "2xl": 2, "3xl": 2.25, "4xl": 2.5, "5xl": 1, "6xl": 1, "7xl": 1, "8xl": 1, "9xl": 1 }, letterSpacings: { tighter: "-0.05em", tight: "-0.025em", normal: "0", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, space: { 0: "0rem", xs: "0.5rem", sm: "0.75rem", md: "1rem", lg: "1.25rem", xl: "2.25rem", "2xl": "3rem", "3xl": "5rem", "4xl": "10rem", "5xl": "14rem", "6xl": "18rem", "7xl": "24rem", "8xl": "32rem", "9xl": "40rem", min: "min-content", max: "max-content", fit: "fit-content", screen: "100vw", full: "100%", px: "1px", 1: "0.125rem", 2: "0.25rem", 3: "0.375rem", 4: "0.5rem", 5: "0.625rem", 6: "0.75rem", 7: "0.875rem", 8: "1rem", 9: "1.25rem", 10: "1.5rem", 11: "1.75rem", 12: "2rem", 13: "2.25rem", 14: "2.5rem", 15: "2.75rem", 16: "3rem", 17: "3.5rem", 18: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, radii: { xs: "7px", sm: "9px", md: "12px", base: "14px", lg: "14px", xl: "18px", "2xl": "24px", "3xl": "32px", squared: "33%", rounded: "50%", pill: "9999px" }, zIndices: { 1: "100", 2: "200", 3: "300", 4: "400", 5: "500", 10: "1000", max: "9999" }, borderWeights: { light: "1px", normal: "2px", bold: "3px", extrabold: "4px", black: "5px" }, transitions: { default: "all 250ms ease", button: "background 0.25s ease 0s, color 0.25s ease 0s, border-color 0.25s ease 0s, box-shadow 0.25s ease 0s, transform 0.25s ease 0s, opacity 0.25s ease 0s", avatar: "box-shadow 0.25s ease 0s, opacity 0.25s ease 0s", card: "transform 0.25s ease 0s, filter 0.25s ease 0s, box-shadow 0.25s ease 0s", dropdownItem: "background 0.12s ease, transform 0.12s ease, color 0.12s ease, box-shadow 0.12s ease 0s" }, breakpoints: { xs: "650px", sm: "960px", md: "1280px", lg: "1400px", xl: "1920px" } };
const defaultColors = { white: "#ffffff", black: "#000000", primaryLight: "$blue200", primaryLightHover: "$blue300", primaryLightActive: "$blue400", primaryLightContrast: "$blue600", primary: "$blue600", primaryBorder: "$blue500", primaryBorderHover: "$blue600", primarySolidHover: "$blue700", primarySolidContrast: "$white", primaryShadow: "$blue500", secondaryLight: "$purple200", secondaryLightHover: "$purple300", secondaryLightActive: "$purple400", secondaryLightContrast: "$purple600", secondary: "$purple600", secondaryBorder: "$purple500", secondaryBorderHover: "$purple600", secondarySolidHover: "$purple700", secondarySolidContrast: "$white", secondaryShadow: "$purple500", successLight: "$green200", successLightHover: "$green300", successLightActive: "$green400", successLightContrast: "$green700", success: "$green600", successBorder: "$green500", successBorderHover: "$green600", successSolidHover: "$green700", successSolidContrast: "$white", successShadow: "$green500", warningLight: "$yellow200", warningLightHover: "$yellow300", warningLightActive: "$yellow400", warningLightContrast: "$yellow700", warning: "$yellow600", warningBorder: "$yellow500", warningBorderHover: "$yellow600", warningSolidHover: "$yellow700", warningSolidContrast: "$white", warningShadow: "$yellow500", errorLight: "$red200", errorLightHover: "$red300", errorLightActive: "$red400", errorLightContrast: "$red600", error: "$red600", errorBorder: "$red500", errorBorderHover: "$red600", errorSolidHover: "$red700", errorSolidContrast: "$white", errorShadow: "$red500", neutralLight: "$gray100", neutralLightHover: "$gray200", neutralLightActive: "$gray300", neutralLightContrast: "$gray800", neutral: "$gray600", neutralBorder: "$gray400", neutralBorderHover: "$gray500", neutralSolidHover: "$gray600", neutralSolidContrast: "$white", neutralShadow: "$gray400", gradient: "linear-gradient(112deg, $cyan600 -63.59%, $pink600 -20.3%, $blue600 70.46%)", accents0: "$gray50", accents1: "$gray100", accents2: "$gray200", accents3: "$gray300", accents4: "$gray400", accents5: "$gray500", accents6: "$gray600", accents7: "$gray700", accents8: "$gray800", accents9: "$gray900" };
const defaultMedia = { xs: `(min-width: ${defaultTokens.breakpoints.xs})`, sm: `(min-width: ${defaultTokens.breakpoints.sm})`, md: `(min-width: ${defaultTokens.breakpoints.md})`, lg: `(min-width: ${defaultTokens.breakpoints.lg})`, xl: `(min-width: ${defaultTokens.breakpoints.xl})`, xsMin: `(min-width: ${defaultTokens.breakpoints.xs})`, smMin: `(min-width: ${defaultTokens.breakpoints.sm})`, mdMin: `(min-width: ${defaultTokens.breakpoints.md})`, lgMin: `(min-width: ${defaultTokens.breakpoints.lg})`, xlMin: `(min-width: ${defaultTokens.breakpoints.xl})`, xsMax: `(max-width: ${defaultTokens.breakpoints.xs})`, smMax: `(max-width: ${defaultTokens.breakpoints.sm})`, mdMax: `(max-width: ${defaultTokens.breakpoints.md})`, lgMax: `(max-width: ${defaultTokens.breakpoints.lg})`, xlMax: `(max-width: ${defaultTokens.breakpoints.xl})`, motion: "(prefers-reduced-motion: reduce)", safari: "not all and (min-resolution:.001dpcm)", hover: "(any-hover: hover)", dark: "(prefers-color-scheme: dark)", light: "(prefers-color-scheme: light)" };
const defaultUtils = { p: (e2) => ({ padding: e2 }), pt: (e2) => ({ paddingTop: e2 }), pr: (e2) => ({ paddingRight: e2 }), pb: (e2) => ({ paddingBottom: e2 }), pl: (e2) => ({ paddingLeft: e2 }), px: (e2) => ({ paddingLeft: e2, paddingRight: e2 }), py: (e2) => ({ paddingTop: e2, paddingBottom: e2 }), m: (e2) => ({ margin: e2 }), mt: (e2) => ({ marginTop: e2 }), mr: (e2) => ({ marginRight: e2 }), mb: (e2) => ({ marginBottom: e2 }), ml: (e2) => ({ marginLeft: e2 }), mx: (e2) => ({ marginLeft: e2, marginRight: e2 }), my: (e2) => ({ marginTop: e2, marginBottom: e2 }), ta: (e2) => ({ textAlign: e2 }), tt: (e2) => ({ textTransform: e2 }), to: (e2) => ({ textOverflow: e2 }), d: (e2) => ({ display: e2 }), dflex: (e2) => ({ display: "flex", alignItems: e2, justifyContent: e2 }), fd: (e2) => ({ flexDirection: e2 }), fw: (e2) => ({ flexWrap: e2 }), ai: (e2) => ({ alignItems: e2 }), ac: (e2) => ({ alignContent: e2 }), jc: (e2) => ({ justifyContent: e2 }), as: (e2) => ({ alignSelf: e2 }), fg: (e2) => ({ flexGrow: e2 }), fs: (e2) => ({ fontSize: e2 }), fb: (e2) => ({ flexBasis: e2 }), bc: (e2) => ({ backgroundColor: e2 }), bf: (e2) => ({ backdropFilter: e2 }), bg: (e2) => ({ background: e2 }), bgBlur: (e2) => ({ bf: "saturate(180%) blur(10px)", bg: e2 }), bgColor: (e2) => ({ backgroundColor: e2 }), backgroundClip: (e2) => ({ WebkitBackgroundClip: e2, backgroundClip: e2 }), bgClip: (e2) => ({ WebkitBackgroundClip: e2, backgroundClip: e2 }), br: (e2) => ({ borderRadius: e2 }), bw: (e2) => ({ borderWidth: e2 }), btrr: (e2) => ({ borderTopRightRadius: e2 }), bbrr: (e2) => ({ borderBottomRightRadius: e2 }), bblr: (e2) => ({ borderBottomLeftRadius: e2 }), btlr: (e2) => ({ borderTopLeftRadius: e2 }), bs: (e2) => ({ boxShadow: e2 }), ds: (e2) => ({ dropShadow: e2 }), shadow: (e2) => ({ boxShadow: e2 }), dshadow: (e2) => ({ dropShadow: e2 }), dropShadow: (e2) => ({ filter: `$dropShadows${e2}` }), normalShadow: (e2) => ({ boxShadow: `0 4px 14px 0 $colors${e2}` }), normalShadowVar: (e2) => ({ boxShadow: `0 4px 14px 0 ${e2}` }), lh: (e2) => ({ lineHeight: e2 }), ov: (e2) => ({ overflow: e2 }), ox: (e2) => ({ overflowX: e2 }), oy: (e2) => ({ overflowY: e2 }), pe: (e2) => ({ pointerEvents: e2 }), events: (e2) => ({ pointerEvents: e2 }), us: (e2) => ({ WebkitUserSelect: e2, userSelect: e2 }), userSelect: (e2) => ({ WebkitUserSelect: e2, userSelect: e2 }), w: (e2) => ({ width: e2 }), h: (e2) => ({ height: e2 }), mw: (e2) => ({ maxWidth: e2 }), maxW: (e2) => ({ maxWidth: e2 }), mh: (e2) => ({ maxHeight: e2 }), maxH: (e2) => ({ maxHeight: e2 }), size: (e2) => ({ width: e2, height: e2 }), minSize: (e2) => ({ minWidth: e2, minHeight: e2, width: e2, height: e2 }), sizeMin: (e2) => ({ minWidth: e2, minHeight: e2, width: e2, height: e2 }), maxSize: (e2) => ({ maxWidth: e2, maxHeight: e2 }), sizeMax: (e2) => ({ maxWidth: e2, maxHeight: e2 }), appearance: (e2) => ({ WebkitAppearance: e2, appearance: e2 }), scale: (e2) => ({ transform: `scale(${e2})` }), linearGradient: (e2) => ({ backgroundImage: `linear-gradient(${e2})` }), tdl: (e2) => ({ textDecorationLine: e2 }), truncateText: (e2) => ({ maxWidth: e2, whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis" }), textGradient: (e2) => ({ backgroundImage: `linear-gradient(${e2})`, WebkitBackgroundClip: "text", WebkitTextFillColor: "transparent", "&::selection": { WebkitTextFillColor: "$colors$text" } }) };
const defaultThemeMap = { ...n$d, width: "space", height: "space", minWidth: "space", maxWidth: "space", minHeight: "space", maxHeight: "space", flexBasis: "space", gridTemplateColumns: "space", gridTemplateRows: "space", blockSize: "space", minBlockSize: "space", maxBlockSize: "space", inlineSize: "space", minInlineSize: "space", maxInlineSize: "space", borderWidth: "borderWeights" };
const o$d = { prefix: "nextui", theme: { ...defaultTokens, colors: defaultColors, shadows: {}, dropShadows: {} }, media: defaultMedia, utils: defaultUtils, themeMap: defaultThemeMap };
const getCssVar = (t2, r2 = null) => {
  if ("undefined" == typeof document || !t2)
    return "";
  const e2 = r2 || document.documentElement, o2 = isCssVar(t2) ? t2.replace("var(", "").replace(")", "") : t2.includes("--") ? t2 : `--${t2}`;
  return getComputedStyle(e2).getPropertyValue(o2);
};
const isCssVar = (t2) => !(!t2 || 0 !== (null == t2 ? void 0 : t2.indexOf("var(")));
const hexToRGBA = (t2, r2 = 1) => {
  let e2 = 0, o2 = 0, n2 = 0;
  return 4 == t2.length ? (e2 = "0x" + t2[1] + t2[1], o2 = "0x" + t2[2] + t2[2], n2 = "0x" + t2[3] + t2[3]) : 7 == t2.length && (e2 = "0x" + t2[1] + t2[2], o2 = "0x" + t2[3] + t2[4], n2 = "0x" + t2[5] + t2[6]), `rgba(${+e2},${+o2},${+n2},${r2})`;
};
const isNormalColor = (r2) => {
  let e2 = normalColors.find((t2) => t2 === r2);
  return null != e2;
};
const hexToRgb$1 = (t2) => {
  const r2 = t2.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t3, r3, e3, o2) => `${r3}${r3}${e3}${e3}${o2}${o2}`), e2 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(r2);
  if (!e2)
    throw new Error(`Next UI: Unsupported ${t2} color.`);
  return [Number.parseInt(e2[1], 16), Number.parseInt(e2[2], 16), Number.parseInt(e2[3], 16)];
};
const colorToRgbValues = (t2) => {
  const r2 = isCssVar(t2) ? getCssVar(t2) : t2;
  if ("#" === r2.charAt(0))
    return hexToRgb$1(r2);
  const e2 = r2.replace(/ /g, ""), o2 = r2.substr(0, 4), n2 = e2.match(/\((.+)\)/);
  return o2.startsWith("rgb") && n2 ? n2[1].split(",").map((t3) => Number.parseFloat(t3)) : (console.warn('NextUI: Only supports ["RGB", "RGBA", "HEX"] color.'), [0, 0, 0]);
};
const addColorAlpha = (t2, r2 = 1) => {
  if (!t2)
    return "";
  const e2 = isCssVar(t2) ? getCssVar(t2) : t2;
  if (/#[a-fA-F0-9]{3,6}/g.test(e2))
    return hexToRGBA(e2, r2);
  if (!/^#|rgb|RGB/.test(e2))
    return e2;
  const [o2, n2, s2] = colorToRgbValues(e2);
  return `rgba(${o2}, ${n2}, ${s2}, ${r2 > 1 ? 1 : r2 < 0 ? 0 : r2})`;
};
const rgbToRgba = (t2, r2 = 1) => {
  const [e2, o2, n2] = t2.split(",").map((t3) => Number.parseFloat(t3));
  return `rgba(${e2}, ${o2}, ${n2}, ${r2 > 1 ? 1 : r2 < 0 ? 0 : r2})`;
};
const blue$2 = { blue50: "#EDF5FF", blue100: "#E1EFFF", blue200: "#CEE4FE", blue300: "#B7D5F8", blue400: "#96C1F2", blue500: "#5EA2EF", blue600: "#0072F5", blue700: "#005FCC", blue800: "#004799", blue900: "#00254D" };
const blueDark = { blue50: "#10253E", blue100: "#102C4C", blue200: "#0F3158", blue300: "#0D3868", blue400: "#0A4281", blue500: "#0952A5", blue600: "#0072F5", blue700: "#3694FF", blue800: "#3694FF", blue900: "#EAF4FF" };
const purple$2 = { purple50: "#F7F2FD", purple100: "#F1E8FB", purple200: "#EADCF8", purple300: "#E0CBF5", purple400: "#D1B1F0", purple500: "#BC8EE9", purple600: "#7828C8", purple700: "#6622AA", purple800: "#4D1980", purple900: "#290E44" };
const purpleDark = { purple50: "#1F0A33", purple100: "#240C3C", purple200: "#2E0F4D", purple300: "#3B1362", purple400: "#451773", purple500: "#571D91", purple600: "#7828C8", purple700: "#9750DD", purple800: "#B583E7", purple900: "#F7ECFC" };
const green$2 = { green50: "#F1FDF7", green100: "#E8FCF1", green200: "#DAFBE8", green300: "#C8F9DD", green400: "#ADF5CC", green500: "#88F1B6", green600: "#17C964", green700: "#13A452", green800: "#108944", green900: "#06371B" };
const greenDark = { green50: "#042F14", green100: "#06381B", green200: "#074A24", green300: "#0A6130", green400: "#0B7439", green500: "#0F9549", green600: "#17C964", green700: "#41EC8B", green800: "#78F2AD", green900: "#ECFDF4" };
const yellow = { yellow50: "#FEF9F0", yellow100: "#FEF5E7", yellow200: "#FDEFD8", yellow300: "#FCE7C5", yellow400: "#FBDBA7", yellow500: "#F9CB80", yellow600: "#F5A524", yellow700: "#B97509", yellow800: "#925D07", yellow900: "#4E3104" };
const yellowDark = { yellow50: "#3A2503", yellow100: "#442B03", yellow200: "#583804", yellow300: "#704705", yellow400: "#845306", yellow500: "#A66908", yellow600: "#F5A524", yellow700: "#F6AD37", yellow800: "#F8C572", yellow900: "#FEF7EC" };
const red$2 = { red50: "#FEF0F5", red100: "#FEE7EF", red200: "#FDD8E5", red300: "#FCC5D8", red400: "#FAA8C5", red500: "#F881AB", red600: "#F31260", red700: "#B80A47", red800: "#910838", red900: "#4E041E" };
const redDark = { red50: "#300313", red100: "#300313", red200: "#44041A", red300: "#5C0523", red400: "#6F062B", red500: "#910838", red600: "#F31260", red700: "#F4256D", red800: "#F75F94", red900: "#FDD8E5" };
const cyan = { cyan50: "#F0FCFF", cyan100: "#E6FAFE", cyan200: "#D7F8FE", cyan300: "#C3F4FD", cyan400: "#A5EEFD", cyan500: "#7EE7FC", cyan600: "#06B7DB", cyan700: "#09AACD", cyan800: "#0E8AAA", cyan900: "#053B48" };
const cyanDark = { cyan50: "#012A32", cyan100: "#023A46", cyan200: "#024B5A", cyan300: "#036072", cyan400: "#037086", cyan500: "#048EA9", cyan600: "#06B7DB", cyan700: "#33D9FA", cyan800: "#6FE4FB", cyan900: "#EBFBFE" };
const pink = { pink50: "#FFF0FB", pink100: "#FFE5F8", pink200: "#FFD6F3", pink300: "#FFC2EE", pink400: "#FFA3E5", pink500: "#FF7AD9", pink600: "#FF4ECD", pink700: "#D6009A", pink800: "#B80084", pink900: "#4D0037" };
const pinkDark = { pink50: "#330025", pink100: "#470033", pink200: "#5C0042", pink300: "#750054", pink400: "#8A0063", pink500: "#AD007C", pink600: "#FF4ECD", pink700: "#FF2EC4", pink800: "#FF6BD5", pink900: "#FFEBF9" };
const gray = { gray50: "#F1F3F5", gray100: "#ECEEF0", gray200: "#E6E8EB", gray300: "#DFE3E6", gray400: "#D7DBDF", gray500: "#C1C8CD", gray600: "#889096", gray700: "#7E868C", gray800: "#687076", gray900: "#11181C" };
const grayDark = { gray50: "#16181A", gray100: "#26292B", gray200: "#2B2F31", gray300: "#313538", gray400: "#3A3F42", gray500: "#4C5155", gray600: "#697177", gray700: "#787F85", gray800: "#9BA1A6", gray900: "#ECEDEE" };
const r$h = { colors: { background: "$white", backgroundAlpha: "rgba(255, 255, 255, 0.8)", foreground: "$black", backgroundContrast: "$white", ...blue$2, ...purple$2, ...green$2, ...yellow, ...red$2, ...cyan, ...pink, ...gray, textLight: addColorAlpha(gray.gray900, 0.2), text: "$gray900", linkLight: addColorAlpha(blue$2.blue600, 0.2), link: "$blue600", codeLight: "$pink100", code: "$pink600", selection: "$blue200", border: "rgba(0, 0, 0, 0.15)" }, shadows: { xs: "0 2px 8px 1px rgb(104 112 118 / 0.07), 0 1px 1px -1px rgb(104 112 118 / 0.04)", sm: "0 2px 8px 2px rgb(104 112 118 / 0.07), 0 2px 4px -1px rgb(104 112 118 / 0.04)", md: "0 12px 20px 6px rgb(104 112 118 / 0.08)", lg: "0 12px 34px 6px rgb(104 112 118 / 0.18)", xl: "0 25px 65px 0px rgb(104 112 118 / 0.35)" }, dropShadows: { xs: "drop-shadow(0 2px 4px rgb(104 112 118 / 0.07)) drop-shadow(0 1px 1px rgb(104 112 118 / 0.04))", sm: "drop-shadow(0 2px 8px rgb(104 112 118 / 0.07)) drop-shadow(0 2px 4px rgb(104 112 118 / 0.04))", md: "drop-shadow(0 4px 12px rgb(104 112 118 / 0.08)) drop-shadow(0 20px 8px rgb(104 112 118 / 0.04))", lg: "drop-shadow(0 12px 24px rgb(104 112 118 / 0.15)) drop-shadow(0 12px 14px rgb(104 112 118 / 0.1))", xl: "drop-shadow(0 25px 34px rgb(104 112 118 / 0.35))" } };
const r$g = { colors: { background: "$black", backgroundAlpha: "rgba(0, 0, 0, 0.6)", foreground: "$white", backgroundContrast: "$accents0", ...blueDark, ...purpleDark, ...greenDark, ...yellowDark, ...redDark, ...cyanDark, ...pinkDark, ...grayDark, primaryLight: "$blue50", primaryLightHover: "$blue100", primaryLightActive: "$blue200", primaryLightContrast: "$blue600", secondaryLight: "$purple50", secondaryLightHover: "$purple100", secondaryLightActive: "$purple200", secondaryLightContrast: "$purple800", secondary: "$purple700", secondaryBorder: "$purple500", secondaryBorderHover: "$purple600", secondarySolidHover: "$purple700", secondaryShadow: "$purple500", successLight: "$green50", successLightHover: "$green100", successLightActive: "$green200", warningLight: "$yellow50", warningLightHover: "$yellow100", warningLightActive: "$yellow200", errorLight: "$red50", errorLightHover: "$red100", errorLightActive: "$red200", errorLightContrast: "$red700", neutralLight: "$gray200", neutralLightHover: "$gray300", neutralLightActive: "$gray400", neutralSolidContrast: "$white", textLight: addColorAlpha(grayDark.gray900, 0.2), text: "$gray900", linkLight: addColorAlpha(blueDark.blue600, 0.2), link: "$blue700", codeLight: "$cyan50", code: "$cyan600", selection: "$pink800", border: "rgba(255, 255, 255, 0.15)" }, shadows: { xs: "0 2px 8px 1px rgb(0 0 0 / 0.07), 0 1px 1px -1px rgb(0 0 0 / 0.04)", sm: "0 2px 8px 2px rgb(0 0 0 / 0.07), 0 2px 4px -1px rgb(0 0 0 / 0.04)", md: "0 12px 20px 6px rgb(0 0 0 / 0.08)", lg: "0 12px 34px 6px rgb(0 0 0 / 0.18)", xl: "0 25px 65px 0px rgb(0 0 0 / 0.35)" }, dropShadows: { xs: "drop-shadow(0 2px 4px rgb(0 0 0 / 0.07)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.04))", sm: "drop-shadow(0 2px 8px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 4px rgb(0 0 0 / 0.04))", md: "drop-shadow(0 4px 12px rgb(0 0 0 / 0.08)) drop-shadow(0 20px 8px rgb(0 0 0 / 0.04))", lg: "drop-shadow(0 12px 24px rgb(0 0 0 / 0.15)) drop-shadow(0 12px 14px rgb(0 0 0 / 0.1))", xl: "drop-shadow(0 25px 34px rgb(0 0 0 / 0.35))" } };
const m$a = q$2({ ...o$d, theme: { ...o$d.theme, shadows: { ...r$h.shadows }, dropShadows: { ...r$h.dropShadows }, colors: { ...o$d.theme.colors, ...r$h.colors } } });
const createThemeBase = m$a.createTheme;
const styled$3 = m$a.styled;
const css$1 = m$a.css;
const globalCss = m$a.globalCss;
const keyframes$1 = m$a.keyframes;
const getCssText = m$a.getCssText;
const theme = m$a.theme;
m$a.config;
const createTheme$2 = ({ type: e2, theme: o2, className: m2 }) => {
  if (!e2)
    throw new Error("Theme type is required");
  return createThemeBase(m2 || `${e2}-theme`, t$d("dark" === e2 ? r$g : r$h, o2));
};
const defaultContext = { isDark: false, theme, type: "light" };
const o$c = React.createContext(defaultContext);
const f$3 = o$c;
const e$h = () => React.useContext(f$3);
const r$f = () => {
  const [n2, r2] = reactExports.useState(false);
  return reactExports.useEffect(() => {
    r2(Boolean("undefined" != typeof window && window.document && window.document.createElement));
  }, []), { isBrowser: n2, isServer: !n2 };
};
const getId = () => Math.random().toString(32).slice(2, 10);
const pickChild = (t2, n2) => {
  let r2 = [];
  return [React.Children.map(t2, (t3) => React.isValidElement(t3) && t3.type === n2 ? (r2.push(t3), null) : t3), r2.length >= 0 ? r2 : void 0];
};
const pickSingleChild = (e2, t2) => {
  const [n2, r2] = pickChild(e2, t2);
  let o2 = null;
  return r2 && r2.length >= 1 && (o2 = r2.length >= 0 ? r2[0] : void 0), [n2, o2];
};
const isChildElement = (e2, t2) => {
  if (!e2 || !t2)
    return false;
  let n2 = t2;
  for (; n2; ) {
    if (n2 === e2)
      return true;
    n2 = n2.parentNode;
  }
  return false;
};
const isMac = () => !!Boolean("undefined" != typeof window && window.document && window.document.createElement) && navigator.platform.toUpperCase().indexOf("MAC") >= 0;
const n$c = (t2) => {
  const e2 = document.createElement("div");
  return e2.setAttribute("id", t2), e2;
};
const o$b = (l2 = getId(), u2) => {
  const i2 = `nextui-${l2}`, { isBrowser: s2 } = r$f(), [c2, d2] = reactExports.useState(s2 ? n$c(i2) : null);
  return reactExports.useEffect(() => {
    const t2 = (u2 ? u2() : null) || document.body, e2 = null == t2 ? void 0 : t2.querySelector(`#${i2}`), o2 = e2 || n$c(i2);
    e2 || t2.appendChild(o2), d2(o2);
  }, []), c2;
};
const a$a = (e2, n2) => {
  reactExports.useEffect(() => {
    const t2 = (t3) => {
      const r2 = e2.current;
      t3 && r2 && !r2.contains(t3.target) && n2(t3);
    };
    return document.addEventListener("click", t2), () => document.removeEventListener("click", t2);
  }, [e2, n2]);
};
const o$a = {};
const warn = (n2, e2) => {
  const r2 = `[Next UI]${e2 ? ` [${e2}]` : " "}: ${n2}`;
  if ("undefined" != typeof console && !o$a[r2]) {
    if (o$a[r2] = true, false)
      ;
    console.warn(r2);
  }
};
const __DEV__ = false;
function isFunction(t2) {
  return "function" == typeof t2;
}
const e$g = (t2) => {
  reactExports.useEffect(() => {
    const e2 = (e3) => t2(e3);
    return document.addEventListener("click", e2), () => document.removeEventListener("click", e2);
  }, [t2]);
};
const isObject = (e2) => e2 && "object" == typeof e2;
const copyObject = (e2) => isObject(e2) ? e2 instanceof Array ? [...e2] : { ...e2 } : e2;
const getKeyValue = (e2, t2) => isObject(e2) ? e2 instanceof Array ? [...e2] : e2[t2] : e2;
const KeyCode = { Unknown: 0, Backspace: 8, Tab: 9, Enter: 13, Shift: 16, Ctrl: 17, Alt: 18, PauseBreak: 19, CapsLock: 20, Escape: 27, Space: 32, PageUp: 33, PageDown: 34, End: 35, Home: 36, LeftArrow: 37, UpArrow: 38, RightArrow: 39, DownArrow: 40, Insert: 45, Delete: 46, KEY_0: 48, KEY_1: 49, KEY_2: 50, KEY_3: 51, KEY_4: 52, KEY_5: 53, KEY_6: 54, KEY_7: 55, KEY_8: 56, KEY_9: 57, KEY_A: 65, KEY_B: 66, KEY_C: 67, KEY_D: 68, KEY_E: 69, KEY_F: 70, KEY_G: 71, KEY_H: 72, KEY_I: 73, KEY_J: 74, KEY_K: 75, KEY_L: 76, KEY_M: 77, KEY_N: 78, KEY_O: 79, KEY_P: 80, KEY_Q: 81, KEY_R: 82, KEY_S: 83, KEY_T: 84, KEY_U: 85, KEY_V: 86, KEY_W: 87, KEY_X: 88, KEY_Y: 89, KEY_Z: 90, Meta: 91, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NumLock: 144, ScrollLock: 145, Equal: 187, Minus: 189, Backquote: 192, Backslash: 220 };
const KeyMod = { CtrlCmd: 2048, Shift: 1024, Alt: 512, WinCtrl: 256 };
const getCtrlKeysByPlatform = () => ({ CtrlCmd: isMac() ? "metaKey" : "ctrlKey", WinCtrl: isMac() ? "ctrlKey" : "metaKey" });
const getActiveModMap = (r2) => {
  const e2 = r2.filter((r3) => !!getKeyValue(KeyMod, r3)), l2 = { CtrlCmd: false, Shift: false, Alt: false, WinCtrl: false };
  return e2.forEach((r3) => {
    const e3 = getKeyValue(KeyMod, r3);
    l2[e3] = true;
  }), l2;
};
const o$9 = (p2, s2, i2 = {}) => {
  const a2 = Array.isArray(s2) ? s2 : [s2], { disableGlobalEvent: y2 = false, capture: l2 = false, stopPropagation: d2 = false, preventDefault: u2 = false, event: m2 = "keydown" } = i2, f2 = getActiveModMap(a2), C2 = a2.filter((e2) => !getKeyValue(KeyMod, e2)), { CtrlCmd: c2, WinCtrl: k2 } = getCtrlKeysByPlatform(), K2 = (e2) => {
    f2.Shift && !e2.shiftKey || f2.Alt && !e2.altKey || f2.CtrlCmd && !e2[c2] || f2.WinCtrl && !e2[k2] || C2.length > 0 && !C2.includes(e2.keyCode) || (d2 && e2.stopPropagation(), u2 && e2.preventDefault(), p2 && p2(e2));
  };
  reactExports.useEffect(() => (y2 || document.addEventListener(m2, K2), () => {
    document.removeEventListener(m2, K2);
  }), [y2]);
  const v2 = (e2, t2 = false) => e2 !== m2 || t2 !== l2 ? () => {
  } : (e3) => K2(e3);
  return { bindings: { onKeyDown: v2("keydown"), onKeyDownCapture: v2("keydown", true), onKeyPress: v2("keypress"), onKeyPressCapture: v2("keypress", true), onKeyUp: v2("keyup"), onKeyUpCapture: v2("keyup", true) } };
};
function range(r2, n2) {
  const e2 = n2 - r2 + 1;
  return Array.from({ length: e2 }, (n3, e3) => e3 + r2);
}
const DOTS = "dots";
const n$b = ({ page: o2, total: a2, siblings: s2 = 1, boundaries: u2 = 1, initialPage: l2 = 1, onChange: c2 }) => {
  const [f2, m2] = reactExports.useState(o2 || l2), g2 = reactExports.useMemo(() => void 0 !== o2, [o2]);
  reactExports.useEffect(() => {
    o2 && o2 !== f2 && m2(o2);
  }, [o2, f2]);
  const p2 = reactExports.useCallback((t2) => {
    g2 || m2(t2), null == c2 || c2(t2);
  }, [m2, c2, g2]), D2 = reactExports.useCallback((t2) => {
    p2(t2 <= 0 ? 1 : t2 > a2 ? a2 : t2);
  }, [p2, a2]);
  return { range: reactExports.useMemo(() => {
    if (2 * s2 + 3 + 2 * u2 >= a2)
      return range(1, a2);
    const t2 = Math.max(f2 - s2, u2), r2 = Math.min(f2 + s2, a2 - u2), e2 = t2 > u2 + 2, n2 = r2 < a2 - (u2 + 1);
    if (!e2 && n2) {
      return [...range(1, 2 * s2 + u2 + 2), DOTS, ...range(a2 - (u2 - 1), a2)];
    }
    if (e2 && !n2) {
      const t3 = u2 + 1 + 2 * s2;
      return [...range(1, u2), DOTS, ...range(a2 - t3, a2)];
    }
    return [...range(1, u2), DOTS, ...range(t2, r2), DOTS, ...range(a2 - u2 + 1, a2)];
  }, [a2, s2, f2]), active: f2, setPage: D2, next: () => D2(f2 + 1), previous: () => D2(f2 - 1), first: () => D2(1), last: () => D2(a2) };
};
const r$e = (e2 = false, n2) => {
  const [r2, o2] = reactExports.useState(e2), [c2, i2] = reactExports.useState(0), [l2, u2] = reactExports.useState(0);
  return { visible: r2, x: c2, y: l2, onClick: (t2) => {
    if (!n2.current)
      return;
    const e3 = n2.current.getBoundingClientRect();
    o2(true), i2(t2.clientX - e3.left), u2(t2.clientY - e3.top);
  }, onCompleted: () => {
    o2(false), i2(0), u2(0);
  } };
};
const n$a = (e2, t2) => (e2.defaultProps = t2, e2);
function r$d(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2))
      for (t2 = 0; t2 < e2.length; t2++)
        e2[t2] && (f2 = r$d(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    else
      for (t2 in e2)
        e2[t2] && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function a$9(...e2) {
  for (var t2, f2, n2 = 0, o2 = ""; n2 < e2.length; )
    (t2 = e2[n2++]) && (f2 = r$d(t2)) && (o2 && (o2 += " "), o2 += f2);
  return o2;
}
const a$8 = keyframes$1({ "0%": { opacity: 0, transform: "scale(0.25)" }, "30%": { opacity: 1 }, "80%": { opacity: 0.5 }, "100%": { transform: "scale(28)", opacity: 0 } });
const StyledDrip = styled$3("div", { position: "absolute", left: 0, right: 0, top: 0, bottom: 0, "& svg": { position: "absolute", animation: `350ms linear ${a$8}`, animationFillMode: "forwards", width: "$md", height: "$md" } });
const m$9 = ({ visible: t2, x: o2, y: r2, color: l2, onCompleted: a2, className: m2, ...c2 }) => {
  const d2 = reactExports.useRef(null), p2 = Number.isNaN(+r2) ? 0 : r2 - 10, f2 = Number.isNaN(+o2) ? 0 : o2 - 10;
  return reactExports.useEffect(() => {
    let t3 = d2.current;
    if (t3)
      return t3.addEventListener("animationend", a2), () => {
        t3 && t3.removeEventListener("animationend", a2);
      };
  }), t2 ? jsxRuntimeExports.jsx(StyledDrip, { ref: d2, className: a$9("nextui-drip", m2), ...c2, children: jsxRuntimeExports.jsx("svg", { height: "20", style: { top: p2, left: f2 }, viewBox: "0 0 20 20", width: "20", children: jsxRuntimeExports.jsx("g", { fill: "none", fillRule: "evenodd", stroke: "none", strokeWidth: "1", children: jsxRuntimeExports.jsx("g", { className: "nextui-drip-filler", fill: l2, children: jsxRuntimeExports.jsx("rect", { height: "100%", rx: "10", width: "100%" }) }) }) }) }) : null;
}, c$i = React.memo(m$9);
const s$3 = n$a(c$i, { visible: false, x: 0, y: 0, className: "" });
const n$9 = globalCss({ "*, *:before, *:after": { boxSizing: "border-box", textRendering: "geometricPrecision", WebkitTapHighlightColor: "transparent" }, html: { fontSize: "$base" }, body: { margin: 0, padding: 0, minHeight: "100%", position: "relative", overflowX: "hidden", WebkitFontSmoothing: "antialiased", MozOsxFontSmoothing: "grayscale", textRendering: "optimizeLegibility", fontSize: "$base", lineHeight: "$md", fontFamily: "$sans" }, "html, body": { backgroundColor: "$background", color: "$text" }, "p, small": { color: "inherit", letterSpacing: "$tighter", fontWeight: "$normal", fontFamily: "$sans" }, p: { fontSize: "$base", lineHeight: "$lg" }, small: { margin: 0, lineHeight: "$xs", fontSize: "$xs" }, b: { fontWeight: "$semibold" }, span: { fontSize: "inherit", color: "inherit", fontWeight: "inherit" }, img: { maxWidth: "100%" }, a: { cursor: "pointer", fontSize: "inherit", WebkitTouchCallout: "none", WebkitTapHighlightColor: "rgba(0, 0, 0, 0)", WebkitBoxAlign: "center", alignItems: "center", color: "$link", textDecoration: "none" }, "a:hover": { textDecoration: "none" }, "ul,ol": { padding: 0, listStyleType: "none", margin: "$sm $sm $sm $lg", color: "$foreground" }, ol: { listStyleType: "decimal" }, li: { marginBottom: "$5", fontSize: "$base", lineHeight: "$lg" }, "h1,h2,h3,h4,h5,h6": { color: "inherit", margin: "0 0 $5 0" }, h1: { letterSpacing: "$tighter", fontSize: "$5xl", lineHeight: "$md", fontWeight: "$bold" }, h2: { letterSpacing: "$tighter", fontSize: "$4xl", fontWeight: "$semibold" }, h3: { letterSpacing: "$tighter", fontSize: "$2xl", fontWeight: "$semibold" }, h4: { letterSpacing: "$tighter", fontSize: "$xl", fontWeight: "$semibold" }, h5: { letterSpacing: "$tight", fontSize: "$md", fontWeight: "$semibold" }, h6: { letterSpacing: "$tight", fontSize: "$sm", fontWeight: "$semibold" }, "button, input, select,textarea": { fontFamily: "inherit", fontSize: "inherit", lineHeight: "inherit", color: "inherit", margin: 0 }, "button:focus, input:focus, select:focus, textarea:focus": { outline: "none" }, code: { color: "$code", padding: "$1 $2", borderRadius: "$xs", bg: "$codeLight", fontFamily: "$mono", fontSize: "$sm", whiteSpace: "pre-wrap", transition: "opacity 0.25s ease 0s" }, "code:hover": { opacity: 0.8 }, pre: { overflow: "auto", whiteSpace: "pre", textAlign: "left", fontSize: "$sm", borderRadius: "$lg", padding: "$md $lg", margin: "$lg 0", fontFamily: "$mono", lineHeight: "$md", webkitOverflowScrolling: "touch" }, "pre code": { color: "$foreground", fontSize: "$sm", lineHeight: "$sm", whiteSpace: "pre" }, "pre code:before,pre code:after": { display: "none" }, "pre p": { margin: 0 }, "pre::-webkit-scrollbar": { display: "none", width: 0, height: 0, background: "transparent" }, hr: { background: "$border", borderColor: "transparent", borderWidth: "0px", borderStyle: "none", height: "1px" }, details: { backgroundColor: "$accents1", border: "none" }, "details:focus, details:hover, details:active": { outline: "none" }, summary: { cursor: "pointer", userSelect: "none", listStyle: "none", outline: "none" }, "summary::-webkit-details-marker, summary::before": { display: "none" }, "summary::-moz-list-bullet": { fontSize: 0 }, "summary:focus, summary:hover, summary:active": { outline: "none", listStyle: "none" }, "::selection": { backgroundColor: "$selection" }, blockquote: { padding: "$md $lg", color: "$accents7", backgroundColor: "$accents0", borderRadius: "$lg", margin: "$10 0" }, "blockquote *:first-child": { marginTop: 0 }, "blockquote *:last-child": { marginBottom: 0 }, kbd: { width: "fit-content", textAlign: "center", display: "inline-block", color: "$accents8", bg: "$accents0", border: "1px solid $border", boxShadow: "0 0 1px 0 rgb(0 0 0 / 14%)", fontFamily: "$sans", borderRadius: "5px", padding: "$1 $3", mx: "$1", lineHeight: "$sm", fontSize: "$sm" }, "kbd + kbd": { ml: "$2" }, "dl, dd, hr, figure, p": { margin: 0 } }), r$c = ({ children: t2 }) => (n$9(), jsxRuntimeExports.jsx(React.Fragment, { children: t2 })), l$b = React.memo(r$c);
l$b.flush = () => jsxRuntimeExports.jsx("style", { dangerouslySetInnerHTML: { __html: getCssText() }, id: "stitches" });
const CssBaseline = l$b;
const $704cf1d3b684cc5c$var$defaultContext$5 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
const $704cf1d3b684cc5c$var$SSRContext$5 = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext$5);
function $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {
  let cur = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$5);
  let value = reactExports.useMemo(
    () => ({
      // If this is the first SSRProvider, start with an empty string prefix, otherwise
      // append and increment the counter.
      prefix: cur === $704cf1d3b684cc5c$var$defaultContext$5 ? "" : `${cur.prefix}-${++cur.current}`,
      current: 0
    }),
    [
      cur
    ]
  );
  return /* @__PURE__ */ React.createElement($704cf1d3b684cc5c$var$SSRContext$5.Provider, {
    value
  }, props.children);
}
let $704cf1d3b684cc5c$var$canUseDOM$4 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
function $704cf1d3b684cc5c$export$619500959fc48b26$4(defaultId) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$5);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext$5 && !$704cf1d3b684cc5c$var$canUseDOM$4)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  return reactExports.useMemo(
    () => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`,
    [
      defaultId
    ]
  );
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a273$3() {
  let cur = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$5);
  let isInSSRContext = cur !== $704cf1d3b684cc5c$var$defaultContext$5;
  let [isSSR, setIsSSR] = reactExports.useState(isInSSRContext);
  if (typeof window !== "undefined" && isInSSRContext)
    reactExports.useLayoutEffect(() => {
      setIsSSR(false);
    }, []);
  return isSSR;
}
class $5b160d28a433310d$export$c17fa47878dc55b6 {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    let string = strings[key];
    if (!string)
      throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.strings = {
      ...messages
    };
    this.defaultLocale = defaultLocale;
  }
}
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale])
    return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language])
    return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-"))
      return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}
const $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
const $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
class $6db58dc88e78b024$export$2f817fcdc4b89ae0 {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count, options, type = "cardinal") {
    let opt = options["=" + count];
    if (opt)
      return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
const $148a7a147e38ea7f$var$RTL_SCRIPTS$2 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
const $148a7a147e38ea7f$var$RTL_LANGS$2 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764$2(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS$2.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS$2.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$2() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764$2(locale) ? "rtl" : "ltr"
  };
}
let $1e5a04cdaf7d1af8$var$currentLocale$2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$2();
let $1e5a04cdaf7d1af8$var$listeners$2 = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale$2() {
  $1e5a04cdaf7d1af8$var$currentLocale$2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$2();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners$2)
    listener($1e5a04cdaf7d1af8$var$currentLocale$2);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a$2() {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a273$3();
  let [defaultLocale, setDefaultLocale] = reactExports.useState($1e5a04cdaf7d1af8$var$currentLocale$2);
  reactExports.useEffect(() => {
    if ($1e5a04cdaf7d1af8$var$listeners$2.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale$2);
    $1e5a04cdaf7d1af8$var$listeners$2.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners$2.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners$2.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale$2);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
const $18f2051aff69b9bf$var$I18nContext$2 = /* @__PURE__ */ React.createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$2() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a$2();
  let context = reactExports.useContext($18f2051aff69b9bf$var$I18nContext$2);
  return context || defaultLocale;
}
const $fca6afa0e843324b$var$cache$1 = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary$1(strings) {
  let dictionary = $fca6afa0e843324b$var$cache$1.get(strings);
  if (!dictionary) {
    dictionary = new $5b160d28a433310d$export$c17fa47878dc55b6(strings);
    $fca6afa0e843324b$var$cache$1.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1$1(strings) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$2();
  let dictionary = reactExports.useMemo(
    () => $fca6afa0e843324b$var$getCachedDictionary$1(strings),
    [
      strings
    ]
  );
  return reactExports.useMemo(
    () => new $6db58dc88e78b024$export$2f817fcdc4b89ae0(locale, dictionary),
    [
      locale,
      dictionary
    ]
  );
}
let $325a3faab7a68acd$var$cache$2 = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d$2(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$2();
  let cacheKey = locale + (options ? Object.entries(options).sort(
    (a2, b2) => a2[0] < b2[0] ? -1 : 1
  ).join() : "");
  if ($325a3faab7a68acd$var$cache$2.has(cacheKey))
    return $325a3faab7a68acd$var$cache$2.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache$2.set(cacheKey, formatter);
  return formatter;
}
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = reactExports.useState(value || defaultValue);
  let ref = reactExports.useRef(value !== void 0);
  let wasControlled = ref.current;
  let isControlled = value !== void 0;
  let stateRef = reactExports.useRef(stateValue);
  if (wasControlled !== isControlled)
    console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
  ref.current = isControlled;
  let setValue = reactExports.useCallback((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(stateRef.current, value3))
          onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        stateRef.current = value3;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled)
          return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled)
        setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    onChange
  ]);
  if (isControlled)
    stateRef.current = value;
  else
    value = stateValue;
  return [
    value,
    setValue
  ];
}
const $704cf1d3b684cc5c$var$defaultContext$4 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
const $704cf1d3b684cc5c$var$SSRContext$4 = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext$4);
let $704cf1d3b684cc5c$var$canUseDOM$3 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $704cf1d3b684cc5c$var$componentIds$3 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter$3(isDisabled = false) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$4);
  let ref = reactExports.useRef(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds$3.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds$3.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds$3.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b26$3(defaultId) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$4);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext$4 && !$704cf1d3b684cc5c$var$canUseDOM$3)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter$3(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a273$2() {
  let cur = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$4);
  return cur.isSSR;
}
function r$b(e2) {
  var t2, f2, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n2 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2))
      for (t2 = 0; t2 < e2.length; t2++)
        e2[t2] && (f2 = r$b(e2[t2])) && (n2 && (n2 += " "), n2 += f2);
    else
      for (t2 in e2)
        e2[t2] && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
function clsx() {
  for (var e2, t2, f2 = 0, n2 = ""; f2 < arguments.length; )
    (e2 = arguments[f2++]) && (t2 = r$b(e2)) && (n2 && (n2 += " "), n2 += t2);
  return n2;
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$7 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37$4(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26$3(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap$7.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap$7.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
let $bbed8b41f857bcc0$var$transitionsByElement$7 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$7 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$7() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$7.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$7.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$7.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$7.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$7.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$7)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$7.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$7();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$7);
}
function $313b98861ee5dd6c$export$d6875122194c7b44$1(props, defaultLabel) {
  let { id: id2, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id2 = $bdb11010cef70236$export$f680877a34711e37$4(id2);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      ...labelledBy.trim().split(/\s+/),
      id2
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id: id2,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $c87311424ea30a05$var$testUserAgent$7(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$7(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$7() {
  return $c87311424ea30a05$var$testPlatform$7(/^Mac/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8$7() {
  return $c87311424ea30a05$var$testUserAgent$7(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de$7(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$7() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$7 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$7.displayName = "PressResponderContext";
let $8a9cb279dc87e130$export$905e7fc544a71f36$4 = class $8a9cb279dc87e130$export$905e7fc544a71f36 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc$4(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return reactExports.useCallback((e2) => {
    if (e2.target instanceof HTMLButtonElement || e2.target instanceof HTMLInputElement || e2.target instanceof HTMLTextAreaElement || e2.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e2.target;
      let onBlurHandler = (e3) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f36$4("blur", e3));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
let $507fabe10e71c6fb$var$changeHandlers$7 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$7 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$7 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$7(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$7)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$7(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$7() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$7(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = true;
  if ($507fabe10e71c6fb$var$isValidKey$7(e2)) {
    $507fabe10e71c6fb$var$triggerChangeHandlers$7("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$7(e2) {
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$7("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$7(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$7(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = true;
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$7(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$7 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$7) {
    $507fabe10e71c6fb$var$triggerChangeHandlers$7("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$7 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$7() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$7 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$7() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$7)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$7 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$7, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$7, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$7, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$7, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$7, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$7, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$7 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$7();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$7);
}
function $9ab94262bd0047c7$export$420e68273165f4ec$1(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = reactExports.useRef({
    isFocusWithin: false
  });
  let onBlur = reactExports.useCallback((e2) => {
    if (state.current.isFocusWithin && !e2.currentTarget.contains(e2.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e2);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc$4(onBlur);
  let onFocus = reactExports.useCallback((e2) => {
    if (!state.current.isFocusWithin && document.activeElement === e2.target) {
      if (onFocusWithin)
        onFocusWithin(e2);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e2);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = reactExports.useRef({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false,
    onInteractOutside,
    onInteractOutsideStart
  });
  let state = stateRef.current;
  state.onInteractOutside = onInteractOutside;
  state.onInteractOutsideStart = onInteractOutsideStart;
  reactExports.useEffect(() => {
    if (isDisabled)
      return;
    let onPointerDown = (e2) => {
      if ($e0b6e0b68ec7f50f$var$isValidEvent(e2, ref) && state.onInteractOutside) {
        if (state.onInteractOutsideStart)
          state.onInteractOutsideStart(e2);
        state.isPointerDown = true;
      }
    };
    if (typeof PointerEvent !== "undefined") {
      let onPointerUp = (e2) => {
        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref))
          state.onInteractOutside(e2);
        state.isPointerDown = false;
      };
      document.addEventListener("pointerdown", onPointerDown, true);
      document.addEventListener("pointerup", onPointerUp, true);
      return () => {
        document.removeEventListener("pointerdown", onPointerDown, true);
        document.removeEventListener("pointerup", onPointerUp, true);
      };
    } else {
      let onMouseUp = (e2) => {
        if (state.ignoreEmulatedMouseEvents)
          state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref))
          state.onInteractOutside(e2);
        state.isPointerDown = false;
      };
      let onTouchEnd = (e2) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e2, ref))
          state.onInteractOutside(e2);
        state.isPointerDown = false;
      };
      document.addEventListener("mousedown", onPointerDown, true);
      document.addEventListener("mouseup", onMouseUp, true);
      document.addEventListener("touchstart", onPointerDown, true);
      document.addEventListener("touchend", onTouchEnd, true);
      return () => {
        document.removeEventListener("mousedown", onPointerDown, true);
        document.removeEventListener("mouseup", onMouseUp, true);
        document.removeEventListener("touchstart", onPointerDown, true);
        document.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    state,
    isDisabled
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0)
    return false;
  if (event.target) {
    const ownerDocument2 = event.target.ownerDocument;
    if (!ownerDocument2 || !ownerDocument2.documentElement.contains(event.target))
      return false;
    if (event.target.closest("[data-react-aria-top-layer]"))
      return false;
  }
  return ref.current && !ref.current.contains(event.target);
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$6 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37$3(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26$4(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap$6.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap$6.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629$5(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$6.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$6.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8$1(depArray = []) {
  let id2 = $bdb11010cef70236$export$f680877a34711e37$3();
  let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25$1(id2);
  let updateId = reactExports.useCallback(() => {
    setResolvedId(function* () {
      yield id2;
      yield document.getElementById(id2) ? id2 : void 0;
    });
  }, [
    id2,
    setResolvedId
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(updateId, [
    id2,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e$5(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928$5(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e$5(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629$5(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
const $65484d02dcb7eb3e$var$DOMPropNames$4 = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames$4 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$propRe$4 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f$4(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames$4.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames$4.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe$4.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$6(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$6())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$6(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$6(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$6 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$6() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$6 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$6 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$6 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$6;
}
function $7215afc6de606d6b$var$getScrollableElements$6(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$6(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$6 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$6 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$6() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$6.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$6.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$6.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$6.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$6.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$6)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$6.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$6();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$6);
}
function $bbed8b41f857bcc0$export$24490316f764c430$6(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$6.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$6.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6$4() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    var ref;
    let fn = ((ref = globalListeners.current.get(listener)) === null || ref === void 0 ? void 0 : ref.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id: id2, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id2 = $bdb11010cef70236$export$f680877a34711e37$3(id2);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      ...labelledBy.trim().split(/\s+/),
      id2
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id: id2,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e$4(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
let $ef06256079686ba0$var$descriptionId$3 = 0;
const $ef06256079686ba0$var$descriptionNodes$3 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1$3(description) {
  let [id1, setId] = reactExports.useState(void 0);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes$3.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId$3++}`;
      setId(id2);
      let node2 = document.createElement("div");
      node2.id = id2;
      node2.style.display = "none";
      node2.textContent = description;
      document.body.appendChild(node2);
      desc = {
        refCount: 0,
        element: node2
      };
      $ef06256079686ba0$var$descriptionNodes$3.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes$3.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id1 : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent$6(re2) {
  var ref;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((ref = window.navigator["userAgentData"]) === null || ref === void 0 ? void 0 : ref.brands.some(
    (brand) => re2.test(brand.brand)
  )) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$6(re2) {
  var ref;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((ref = window.navigator["userAgentData"]) === null || ref === void 0 ? void 0 : ref.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$6() {
  return $c87311424ea30a05$var$testPlatform$6(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99$4() {
  return $c87311424ea30a05$var$testPlatform$6(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224$4() {
  return $c87311424ea30a05$var$testPlatform$6(/^iPad/i) || $c87311424ea30a05$export$9ac100e40613ea10$6() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1$4() {
  return $c87311424ea30a05$export$186c6964ca17d99$4() || $c87311424ea30a05$export$7bef049ce92e4224$4();
}
function $c87311424ea30a05$export$a11b0059900ceec8$6() {
  return $c87311424ea30a05$var$testUserAgent$6(/Android/i);
}
function $1dbecbe27a04f9af$export$14d238f342723f25$1(defaultValue) {
  let [value, setValue] = reactExports.useState(defaultValue);
  let valueRef = reactExports.useRef(value);
  let effect = reactExports.useRef(null);
  valueRef.current = value;
  let nextRef = reactExports.useRef(null);
  nextRef.current = () => {
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value)
      nextRef.current();
    else
      setValue(newValue.value);
  };
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    if (effect.current)
      nextRef.current();
  });
  let queue = reactExports.useCallback((fn) => {
    effect.current = fn(valueRef.current);
    nextRef.current();
  }, [
    effect,
    nextRef
  ]);
  return [
    value,
    queue
  ];
}
function $6a7db85432448f7f$export$60278871457622de$6(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$6() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63$4(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
let $14c0b72509d70225$var$state$4 = "default";
let $14c0b72509d70225$var$savedUserSelect$4 = "";
let $14c0b72509d70225$var$modifiedElementMap$4 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487$4(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$4()) {
    if ($14c0b72509d70225$var$state$4 === "default") {
      $14c0b72509d70225$var$savedUserSelect$4 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state$4 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap$4.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295$4(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$4()) {
    if ($14c0b72509d70225$var$state$4 !== "disabled")
      return;
    $14c0b72509d70225$var$state$4 = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430$6(() => {
        if ($14c0b72509d70225$var$state$4 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect$4 || "";
          $14c0b72509d70225$var$savedUserSelect$4 = "";
          $14c0b72509d70225$var$state$4 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap$4.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap$4.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap$4.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$6 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$6.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext$4(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5$6);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928$5(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$4(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21$4(props) {
  let {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext$4(props);
  let propsRef = reactExports.useRef(null);
  propsRef.current = {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$4();
  let pressProps1 = reactExports.useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart, onPressChange, isDisabled } = propsRef.current;
      if (isDisabled || state.didFirePressStart)
        return;
      if (onPressStart)
        onPressStart({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd, onPressChange, onPress, isDisabled } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd)
        onPressEnd({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(false);
      setPressed(false);
      if (onPress && wasPressed && !isDisabled)
        onPress({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp, isDisabled } = propsRef.current;
      if (isDisabled)
        return;
      if (onPressUp)
        onPressUp({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$4(state.target);
      }
    };
    let pressProps = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$4(e2.nativeEvent, e2.currentTarget) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$4(e2.target, e2.key))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e2.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink$4(e2.currentTarget))
          e2.stopPropagation();
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$4(e2.nativeEvent, e2.currentTarget) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent$4(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled1)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de$6(e2.nativeEvent))) {
            if (!isDisabled1 && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3$6(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent$4(e2, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$4(e2.target, e2.key))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink$4(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63$4(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault$4(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled1 && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3$6(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487$4(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault$4(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget$4(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget$4(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget$4(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295$4(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel(e2);
      };
      pressProps.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    } else {
      pressProps.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault$4(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de$6(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$6(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget$4(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$4(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent$4(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$6(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487$4(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$4(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$4(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$4(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$4(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$4(state.target);
        removeAllGlobalListeners();
      };
      pressProps.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    }
    return pressProps;
  }, [
    addGlobalListener,
    isDisabled1,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295$4(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$5(domProps, pressProps1)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink$4(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent$4(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey$4(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$f6c31cce2adf654f$var$isHTMLAnchorLink$4(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent$4(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById$4(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i2 = 0; i2 < changedTouches.length; i2++) {
    const touch = changedTouches[i2];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent$4(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect$4(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping$4(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right)
    return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget$4(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect$4(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping$4(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault$4(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$4(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey$4(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes$4 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey$4(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes$4.has(target.type);
}
let $8a9cb279dc87e130$export$905e7fc544a71f36$3 = class $8a9cb279dc87e130$export$905e7fc544a71f362 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc$3(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return reactExports.useCallback((e1) => {
    if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e1.target;
      let onBlurHandler = (e2) => {
        var _current, ref;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (ref = (_current = stateRef.current).onBlur) === null || ref === void 0 ? void 0 : ref.call(_current, new $8a9cb279dc87e130$export$905e7fc544a71f36$3("blur", e2));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$3(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget) {
      if (onBlurProp)
        onBlurProp(e2);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc$3(onBlur);
  const onFocus = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget) {
      if (onFocusProp)
        onFocusProp(e2);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e2);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : null
    }
  };
}
let $507fabe10e71c6fb$var$currentModality$6 = null;
let $507fabe10e71c6fb$var$changeHandlers$6 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$6 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$6 = false;
const $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers$6(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$6)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$6(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$6() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$6(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = true;
  if ($507fabe10e71c6fb$var$isValidKey$6(e2)) {
    $507fabe10e71c6fb$var$currentModality$6 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$6("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$6(e2) {
  $507fabe10e71c6fb$var$currentModality$6 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$6("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$6(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$6(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = true;
    $507fabe10e71c6fb$var$currentModality$6 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$6(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$6 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$6) {
    $507fabe10e71c6fb$var$currentModality$6 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$6("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$6 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$6() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$6 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$6() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$6)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$6 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$6, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$6, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$6, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$6, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$6, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$6, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$6 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$6();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$6);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db27$1() {
  return $507fabe10e71c6fb$var$currentModality$6 !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$6() {
  return $507fabe10e71c6fb$var$currentModality$6;
}
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e2) {
  return !(isTextInput && modality === "keyboard" && e2 instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e2.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents$6();
  reactExports.useEffect(() => {
    let handler = (modality, e2) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e2))
        return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27$1());
    };
    $507fabe10e71c6fb$var$changeHandlers$6.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers$6.delete(handler);
    };
  }, deps);
}
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = reactExports.useRef({
    isFocusWithin: false
  });
  let onBlur = reactExports.useCallback((e2) => {
    if (state.current.isFocusWithin && !e2.currentTarget.contains(e2.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e2);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc$3(onBlur);
  let onFocus = reactExports.useCallback((e2) => {
    if (!state.current.isFocusWithin) {
      if (onFocusWithin)
        onFocusWithin(e2);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e2);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
let $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
let $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e2) {
  if (e2.pointerType === "touch")
    $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined")
    return;
  if (typeof PointerEvent !== "undefined")
    document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else
    document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0)
      return;
    if (typeof PointerEvent !== "undefined")
      document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else
      document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = reactExports.useState(false);
  let state = reactExports.useRef({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  reactExports.useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { hoverProps: hoverProps1, triggerHoverEnd: triggerHoverEnd1 } = reactExports.useMemo(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target))
        return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      if (onHoverStart)
        onHoverStart({
          type: "hoverstart",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd = (event, pointerType) => {
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered)
        return;
      state.isHovered = false;
      let target = event.currentTarget;
      if (onHoverEnd)
        onHoverEnd({
          type: "hoverend",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(false);
      setHovered(false);
    };
    let hoverProps = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps.onPointerEnter = (e2) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e2.pointerType === "mouse")
          return;
        triggerHoverStart(e2, e2.pointerType);
      };
      hoverProps.onPointerLeave = (e2) => {
        if (!isDisabled && e2.currentTarget.contains(e2.target))
          triggerHoverEnd(e2, e2.pointerType);
      };
    } else {
      hoverProps.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps.onMouseEnter = (e2) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents)
          triggerHoverStart(e2, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps.onMouseLeave = (e2) => {
        if (!isDisabled && e2.currentTarget.contains(e2.target))
          triggerHoverEnd(e2, "mouse");
      };
    }
    return {
      hoverProps,
      triggerHoverEnd
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state
  ]);
  reactExports.useEffect(() => {
    if (isDisabled)
      triggerHoverEnd1({
        currentTarget: state.target
      }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps: hoverProps1,
    isHovered
  };
}
const $8a26561d2877236e$var$DEFAULT_THRESHOLD$1 = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9$1(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD$1, accessibilityDescription } = props;
  const timeRef = reactExports.useRef(null);
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$4();
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21$4({
    isDisabled,
    onPressStart(e1) {
      if (e1.pointerType === "mouse" || e1.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart({
            ...e1,
            type: "longpressstart"
          });
        timeRef.current = setTimeout(() => {
          e1.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress({
              ...e1,
              type: "longpress"
            });
          timeRef.current = null;
        }, threshold);
        if (e1.pointerType === "touch") {
          let onContextMenu = (e2) => {
            e2.preventDefault();
          };
          addGlobalListener(e1.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e1.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e2) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e2.pointerType === "mouse" || e2.pointerType === "touch"))
        onLongPressEnd({
          ...e2,
          type: "longpressend"
        });
    }
  });
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1$3(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$5(pressProps, descriptionProps)
  };
}
const $5c3e21d68f1c4674$var$styles = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: 1,
  margin: "0 -1px -1px 0",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: 1,
  whiteSpace: "nowrap"
};
function $5c3e21d68f1c4674$export$a966af930f325cab(props = {}) {
  let { style: style2, isFocusable } = props;
  let [isFocused, setFocused] = reactExports.useState(false);
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !isFocusable,
    onFocusWithinChange: (val) => setFocused(val)
  });
  let combinedStyles = reactExports.useMemo(() => {
    if (isFocused)
      return style2;
    else if (style2)
      return {
        ...$5c3e21d68f1c4674$var$styles,
        ...style2
      };
    else
      return $5c3e21d68f1c4674$var$styles;
  }, [
    isFocused
  ]);
  return {
    visuallyHiddenProps: {
      ...focusWithinProps,
      style: combinedStyles
    }
  };
}
function $5c3e21d68f1c4674$export$439d29a4e110a164(props) {
  let { children, elementType: Element = "div", isFocusable, style: style2, ...otherProps } = props;
  let { visuallyHiddenProps } = $5c3e21d68f1c4674$export$a966af930f325cab(props);
  return /* @__PURE__ */ React.createElement(Element, $3ef42575df84b30b$export$9d1611c77c2fe928$5(otherProps, visuallyHiddenProps), children);
}
function $parcel$interopDefault$3(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
const $edcf132a9284368a$var$AXIS = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
};
const $edcf132a9284368a$var$FLIPPED_DIRECTION = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
const $edcf132a9284368a$var$CROSS_AXIS = {
  top: "left",
  left: "top"
};
const $edcf132a9284368a$var$AXIS_SIZE = {
  top: "height",
  left: "width"
};
const $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {};
let $edcf132a9284368a$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $edcf132a9284368a$var$getContainerDimensions(containerNode) {
  let width2 = 0, height2 = 0, top = 0, left = 0;
  let scroll = {};
  if (containerNode.tagName === "BODY") {
    let documentElement = document.documentElement;
    var ref;
    width2 = (ref = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && ref !== void 0 ? ref : documentElement.clientWidth;
    var ref1;
    height2 = (ref1 = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && ref1 !== void 0 ? ref1 : documentElement.clientHeight;
    scroll.top = documentElement.scrollTop || containerNode.scrollTop;
    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;
  } else {
    ({ width: width2, height: height2, top, left } = $edcf132a9284368a$var$getOffset(containerNode));
    scroll.top = containerNode.scrollTop;
    scroll.left = containerNode.scrollLeft;
  }
  return {
    width: width2,
    height: height2,
    scroll,
    top,
    left
  };
}
function $edcf132a9284368a$var$getScroll(node2) {
  return {
    top: node2.scrollTop,
    left: node2.scrollLeft,
    width: node2.scrollWidth,
    height: node2.scrollHeight
  };
}
function $edcf132a9284368a$var$getDelta(axis, offset, size, containerDimensions, padding2) {
  let containerScroll = containerDimensions.scroll[axis];
  let containerHeight = containerDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];
  let startEdgeOffset = offset - padding2 - containerScroll;
  let endEdgeOffset = offset + padding2 - containerScroll + size;
  if (startEdgeOffset < 0)
    return -startEdgeOffset;
  else if (endEdgeOffset > containerHeight)
    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);
  else
    return 0;
}
function $edcf132a9284368a$var$getMargins(node2) {
  let style2 = window.getComputedStyle(node2);
  return {
    top: parseInt(style2.marginTop, 10) || 0,
    bottom: parseInt(style2.marginBottom, 10) || 0,
    left: parseInt(style2.marginLeft, 10) || 0,
    right: parseInt(style2.marginRight, 10) || 0
  };
}
function $edcf132a9284368a$var$parsePlacement(input) {
  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input])
    return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
  let [placement, crossPlacement] = input.split(" ");
  let axis = $edcf132a9284368a$var$AXIS[placement] || "right";
  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];
  if (!$edcf132a9284368a$var$AXIS[crossPlacement])
    crossPlacement = "center";
  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];
  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];
  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  };
  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
}
function $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {
  let { placement, crossPlacement, axis, crossAxis, size, crossSize } = placementInfo;
  let position2 = {};
  position2[crossAxis] = childOffset[crossAxis];
  if (crossPlacement === "center")
    position2[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;
  else if (crossPlacement !== crossAxis)
    position2[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];
  position2[crossAxis] += crossOffset;
  let minViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2 - overlaySize[crossSize];
  let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2;
  position2[crossAxis] = Math.min(Math.max(minViablePosition, position2[crossAxis]), maxViablePosition);
  if (placement === axis) {
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];
    position2[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else
    position2[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);
  return position2;
}
function $edcf132a9284368a$var$getMaxHeight(position2, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding2) {
  return position2.top != null ? Math.max(
    0,
    boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (containerOffsetWithBoundary.top + position2.top) - (margins.top + margins.bottom + padding2)
    // save additional space for margin and padding
  ) : Math.max(
    0,
    childOffset.top + containerOffsetWithBoundary.top - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding2)
    // save additional space for margin and padding
  );
}
function $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding2, placementInfo) {
  let { placement, axis, size } = placementInfo;
  if (placement === axis)
    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding2);
  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding2);
}
function $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding2, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight) {
  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);
  let { size, crossAxis, crossSize, placement, crossPlacement } = placementInfo;
  let position2 = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  let normalizedOffset = offset;
  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding2 + offset, placementInfo);
  if (flip && scrollSize[size] > space) {
    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);
    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding2 + offset, flippedPlacementInfo);
    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position2 = flippedPosition;
      normalizedOffset = offset;
    }
  }
  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position2[crossAxis], overlaySize[crossSize], boundaryDimensions, padding2);
  position2[crossAxis] += delta;
  let maxHeight2 = $edcf132a9284368a$var$getMaxHeight(position2, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding2);
  if (userSetMaxHeight && userSetMaxHeight < maxHeight2)
    maxHeight2 = userSetMaxHeight;
  overlaySize.height = Math.min(overlaySize.height, maxHeight2);
  position2 = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  delta = $edcf132a9284368a$var$getDelta(crossAxis, position2[crossAxis], overlaySize[crossSize], boundaryDimensions, padding2);
  position2[crossAxis] += delta;
  let arrowPosition = {};
  arrowPosition[crossAxis] = childOffset[crossAxis] - position2[crossAxis] + childOffset[crossSize] / 2;
  return {
    position: position2,
    maxHeight: maxHeight2,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
function $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {
  let { placement, targetNode, overlayNode, scrollNode, padding: padding2, shouldFlip, boundaryElement, offset, crossOffset, maxHeight: maxHeight2 } = opts;
  let container = overlayNode instanceof HTMLElement && overlayNode.offsetParent || document.body;
  let isBodyContainer = container.tagName === "BODY";
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== "static";
  let childOffset = isBodyContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);
  if (!isBodyContainer) {
    let { marginTop, marginLeft } = window.getComputedStyle(targetNode);
    childOffset.top += parseInt(marginTop, 10) || 0;
    childOffset.left += parseInt(marginLeft, 10) || 0;
  }
  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);
  let margins = $edcf132a9284368a$var$getMargins(overlayNode);
  overlaySize.width += margins.left + margins.right;
  overlaySize.height += margins.top + margins.bottom;
  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);
  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);
  let containerOffsetWithBoundary = boundaryElement.tagName === "BODY" ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);
  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding2, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight2);
}
function $edcf132a9284368a$var$getOffset(node2) {
  let { top, left, width: width2, height: height2 } = node2.getBoundingClientRect();
  let { scrollTop, scrollLeft, clientTop, clientLeft } = document.documentElement;
  return {
    top: top + scrollTop - clientTop,
    left: left + scrollLeft - clientLeft,
    width: width2,
    height: height2
  };
}
function $edcf132a9284368a$var$getPosition(node2, parent) {
  let style2 = window.getComputedStyle(node2);
  let offset;
  if (style2.position === "fixed") {
    let { top, left, width: width2, height: height2 } = node2.getBoundingClientRect();
    offset = {
      top,
      left,
      width: width2,
      height: height2
    };
  } else {
    offset = $edcf132a9284368a$var$getOffset(node2);
    let parentOffset = $edcf132a9284368a$var$getOffset(parent);
    let parentStyle = window.getComputedStyle(parent);
    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;
    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;
    offset.top -= parentOffset.top;
    offset.left -= parentOffset.left;
  }
  offset.top -= parseInt(style2.marginTop, 10) || 0;
  offset.left -= parseInt(style2.marginLeft, 10) || 0;
  return offset;
}
const $dd149f63282afbbf$export$f6211563215e3b37 = /* @__PURE__ */ new WeakMap();
function $dd149f63282afbbf$export$18fc8428861184da(opts) {
  let { triggerRef, isOpen, onClose } = opts;
  reactExports.useEffect(() => {
    if (!isOpen)
      return;
    let onScroll = (e2) => {
      let target = e2.target;
      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current))
        return;
      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);
      if (onCloseHandler)
        onCloseHandler();
    };
    window.addEventListener("scroll", onScroll, true);
    return () => {
      window.removeEventListener("scroll", onScroll, true);
    };
  }, [
    isOpen,
    onClose,
    triggerRef
  ]);
}
let $2a41e45df1593e64$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$2();
  let { targetRef, overlayRef, scrollRef = overlayRef, placement = "bottom", containerPadding = 12, shouldFlip = true, boundaryElement = typeof document !== "undefined" ? document.body : null, offset = 0, crossOffset = 0, shouldUpdatePosition = true, isOpen = true, onClose, maxHeight: maxHeight2 } = props;
  let [position2, setPosition] = reactExports.useState({
    position: {},
    arrowOffsetLeft: void 0,
    arrowOffsetTop: void 0,
    maxHeight: void 0,
    placement: void 0
  });
  let deps = [
    shouldUpdatePosition,
    placement,
    overlayRef.current,
    targetRef.current,
    scrollRef.current,
    containerPadding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset,
    isOpen,
    direction,
    maxHeight2
  ];
  let updatePosition = reactExports.useCallback(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement)
      return;
    setPosition($edcf132a9284368a$export$b3ceb0cbf1056d98({
      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset,
      maxHeight: maxHeight2
    }));
  }, deps);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(updatePosition, deps);
  $2a41e45df1593e64$var$useResize(updatePosition);
  let isResizing = reactExports.useRef(false);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(() => {
    let timeout;
    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("resize", onResize);
    return () => {
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("resize", onResize);
    };
  }, [
    updatePosition
  ]);
  let close = reactExports.useCallback(() => {
    if (!isResizing.current)
      onClose();
  }, [
    onClose,
    isResizing
  ]);
  $dd149f63282afbbf$export$18fc8428861184da({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose ? close : void 0
  });
  return {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...position2.position,
        maxHeight: position2.maxHeight
      }
    },
    placement: position2.placement,
    arrowProps: {
      style: {
        left: position2.arrowOffsetLeft,
        top: position2.arrowOffsetTop
      }
    },
    updatePosition
  };
}
function $2a41e45df1593e64$var$useResize(onResize) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(() => {
    window.addEventListener("resize", onResize, false);
    return () => {
      window.removeEventListener("resize", onResize, false);
    };
  }, [
    onResize
  ]);
}
function $2a41e45df1593e64$var$translateRTL(position2, direction) {
  if (direction === "rtl")
    return position2.replace("start", "right").replace("end", "left");
  return position2.replace("start", "left").replace("end", "right");
}
const $a11501f3d1d39e6c$var$visibleOverlays = [];
function $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {
  let { onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside } = props;
  reactExports.useEffect(() => {
    if (isOpen)
      $a11501f3d1d39e6c$var$visibleOverlays.push(ref);
    return () => {
      let index2 = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);
      if (index2 >= 0)
        $a11501f3d1d39e6c$var$visibleOverlays.splice(index2, 1);
    };
  }, [
    isOpen,
    ref
  ]);
  let onHide = () => {
    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose)
      onClose();
  };
  let onInteractOutsideStart = (e2) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e2.stopPropagation();
        e2.preventDefault();
      }
    }
  };
  let onInteractOutside = (e2) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e2.stopPropagation();
        e2.preventDefault();
      }
      onHide();
    }
  };
  let onKeyDown = (e2) => {
    if (e2.key === "Escape" && !isKeyboardDismissDisabled) {
      e2.stopPropagation();
      e2.preventDefault();
      onHide();
    }
  };
  $e0b6e0b68ec7f50f$export$872b660ac5a1ff98({
    ref,
    onInteractOutside: isDismissable ? onInteractOutside : null,
    onInteractOutsideStart
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec$1({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: (e2) => {
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e2.relatedTarget))
        onClose();
    }
  });
  let onPointerDownUnderlay = (e2) => {
    if (e2.target === e2.currentTarget)
      e2.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown,
      ...focusWithinProps
    },
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}
function $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {
  let { type } = props;
  let { isOpen } = state;
  reactExports.useEffect(() => {
    if (ref && ref.current)
      $dd149f63282afbbf$export$f6211563215e3b37.set(ref.current, state.close);
  });
  let ariaHasPopup = void 0;
  if (type === "menu")
    ariaHasPopup = true;
  else if (type === "listbox")
    ariaHasPopup = "listbox";
  let overlayId = $bdb11010cef70236$export$f680877a34711e37$4();
  return {
    triggerProps: {
      "aria-haspopup": ariaHasPopup,
      "aria-expanded": isOpen,
      "aria-controls": isOpen ? overlayId : null,
      onPress: state.toggle
    },
    overlayProps: {
      id: overlayId
    }
  };
}
const $f57aed4a881a3485$var$Context = /* @__PURE__ */ React.createContext(null);
function $f57aed4a881a3485$export$178405afcd8c5eb(props) {
  let { children } = props;
  let parent = reactExports.useContext($f57aed4a881a3485$var$Context);
  let [modalCount, setModalCount] = reactExports.useState(0);
  let context = reactExports.useMemo(
    () => ({
      parent,
      modalCount,
      addModal() {
        setModalCount(
          (count) => count + 1
        );
        if (parent)
          parent.addModal();
      },
      removeModal() {
        setModalCount(
          (count) => count - 1
        );
        if (parent)
          parent.removeModal();
      }
    }),
    [
      parent,
      modalCount
    ]
  );
  return /* @__PURE__ */ React.createElement($f57aed4a881a3485$var$Context.Provider, {
    value: context
  }, children);
}
function $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {
  let context = reactExports.useContext($f57aed4a881a3485$var$Context);
  return {
    modalProviderProps: {
      "aria-hidden": context && context.modalCount > 0 ? true : null
    }
  };
}
function $f57aed4a881a3485$var$OverlayContainerDOM(props) {
  let { modalProviderProps } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();
  return /* @__PURE__ */ React.createElement("div", {
    "data-overlay-container": true,
    ...props,
    ...modalProviderProps
  });
}
function $f57aed4a881a3485$export$bf688221f59024e5(props) {
  return /* @__PURE__ */ React.createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, /* @__PURE__ */ React.createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));
}
function $f57aed4a881a3485$export$b47c3594eab58386(props) {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a273$2();
  let { portalContainer = isSSR ? null : document.body, ...rest } = props;
  React.useEffect(() => {
    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest("[data-overlay-container]"))
      throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.");
  }, [
    portalContainer
  ]);
  if (!portalContainer)
    return null;
  let contents = /* @__PURE__ */ React.createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);
  return /* @__PURE__ */ ReactDOM.createPortal(contents, portalContainer);
}
function $f57aed4a881a3485$export$33ffd74ebf07f060(options) {
  let context = reactExports.useContext($f57aed4a881a3485$var$Context);
  if (!context)
    throw new Error("Modal is not contained within a provider");
  reactExports.useEffect(() => {
    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent)
      return;
    context.parent.addModal();
    return () => {
      if (context && context.parent)
        context.parent.removeModal();
    };
  }, [
    context,
    context.parent,
    options === null || options === void 0 ? void 0 : options.isDisabled
  ]);
  return {
    modalProps: {
      "data-ismodal": !(options === null || options === void 0 ? void 0 : options.isDisabled)
    }
  };
}
var $61fe14465afefc5e$exports = {};
var $773d5888b972f1cf$exports = {};
$773d5888b972f1cf$exports = {
  "dismiss": `تجاهل`
};
var $d11f19852b941573$exports = {};
$d11f19852b941573$exports = {
  "dismiss": `Отхвърляне`
};
var $b983974c2ee1efb3$exports = {};
$b983974c2ee1efb3$exports = {
  "dismiss": `Odstranit`
};
var $5809cc9d4e92de73$exports = {};
$5809cc9d4e92de73$exports = {
  "dismiss": `Luk`
};
var $c68c2e4fc74398d1$exports = {};
$c68c2e4fc74398d1$exports = {
  "dismiss": `Schließen`
};
var $0898b4c153db2b77$exports = {};
$0898b4c153db2b77$exports = {
  "dismiss": `Απόρριψη`
};
var $6d74810286a15183$exports = {};
$6d74810286a15183$exports = {
  "dismiss": `Dismiss`
};
var $309d73dc65f78055$exports = {};
$309d73dc65f78055$exports = {
  "dismiss": `Descartar`
};
var $44ad94f7205cf593$exports = {};
$44ad94f7205cf593$exports = {
  "dismiss": `Lõpeta`
};
var $7c28f5687f0779a9$exports = {};
$7c28f5687f0779a9$exports = {
  "dismiss": `Hylkää`
};
var $e6d75df4b68bd73a$exports = {};
$e6d75df4b68bd73a$exports = {
  "dismiss": `Rejeter`
};
var $87505c9dab186d0f$exports = {};
$87505c9dab186d0f$exports = {
  "dismiss": `התעלם`
};
var $553439c3ffb3e492$exports = {};
$553439c3ffb3e492$exports = {
  "dismiss": `Odbaci`
};
var $74cf411061b983a2$exports = {};
$74cf411061b983a2$exports = {
  "dismiss": `Elutasítás`
};
var $e933f298574dc435$exports = {};
$e933f298574dc435$exports = {
  "dismiss": `Ignora`
};
var $ac91fc9fe02f71f6$exports = {};
$ac91fc9fe02f71f6$exports = {
  "dismiss": `閉じる`
};
var $52b96f86422025af$exports = {};
$52b96f86422025af$exports = {
  "dismiss": `무시`
};
var $c0d724c3e51dafa6$exports = {};
$c0d724c3e51dafa6$exports = {
  "dismiss": `Atmesti`
};
var $c92899672a3fe72e$exports = {};
$c92899672a3fe72e$exports = {
  "dismiss": `Nerādīt`
};
var $9f576b39d8e7a9d6$exports = {};
$9f576b39d8e7a9d6$exports = {
  "dismiss": `Lukk`
};
var $9d025808aeec81a7$exports = {};
$9d025808aeec81a7$exports = {
  "dismiss": `Negeren`
};
var $fce709921e2c0fa6$exports = {};
$fce709921e2c0fa6$exports = {
  "dismiss": `Zignoruj`
};
var $2599cf0c4ab37f59$exports = {};
$2599cf0c4ab37f59$exports = {
  "dismiss": `Descartar`
};
var $3c220ae7ef8a35fd$exports = {};
$3c220ae7ef8a35fd$exports = {
  "dismiss": `Dispensar`
};
var $93562b5094072f54$exports = {};
$93562b5094072f54$exports = {
  "dismiss": `Revocare`
};
var $cd9e2abd0d06c7b4$exports = {};
$cd9e2abd0d06c7b4$exports = {
  "dismiss": `Пропустить`
};
var $45375701f409adf1$exports = {};
$45375701f409adf1$exports = {
  "dismiss": `Zrušiť`
};
var $27fab53a576de9dd$exports = {};
$27fab53a576de9dd$exports = {
  "dismiss": `Opusti`
};
var $4438748d9952e7c7$exports = {};
$4438748d9952e7c7$exports = {
  "dismiss": `Odbaci`
};
var $0936d7347ef4da4c$exports = {};
$0936d7347ef4da4c$exports = {
  "dismiss": `Avvisa`
};
var $29700c92185d38f8$exports = {};
$29700c92185d38f8$exports = {
  "dismiss": `Kapat`
};
var $662ccaf2be4c25b3$exports = {};
$662ccaf2be4c25b3$exports = {
  "dismiss": `Скасувати`
};
var $d80a27deda7cdb3c$exports = {};
$d80a27deda7cdb3c$exports = {
  "dismiss": `取消`
};
var $2b2734393847c884$exports = {};
$2b2734393847c884$exports = {
  "dismiss": `關閉`
};
$61fe14465afefc5e$exports = {
  "ar-AE": $773d5888b972f1cf$exports,
  "bg-BG": $d11f19852b941573$exports,
  "cs-CZ": $b983974c2ee1efb3$exports,
  "da-DK": $5809cc9d4e92de73$exports,
  "de-DE": $c68c2e4fc74398d1$exports,
  "el-GR": $0898b4c153db2b77$exports,
  "en-US": $6d74810286a15183$exports,
  "es-ES": $309d73dc65f78055$exports,
  "et-EE": $44ad94f7205cf593$exports,
  "fi-FI": $7c28f5687f0779a9$exports,
  "fr-FR": $e6d75df4b68bd73a$exports,
  "he-IL": $87505c9dab186d0f$exports,
  "hr-HR": $553439c3ffb3e492$exports,
  "hu-HU": $74cf411061b983a2$exports,
  "it-IT": $e933f298574dc435$exports,
  "ja-JP": $ac91fc9fe02f71f6$exports,
  "ko-KR": $52b96f86422025af$exports,
  "lt-LT": $c0d724c3e51dafa6$exports,
  "lv-LV": $c92899672a3fe72e$exports,
  "nb-NO": $9f576b39d8e7a9d6$exports,
  "nl-NL": $9d025808aeec81a7$exports,
  "pl-PL": $fce709921e2c0fa6$exports,
  "pt-BR": $2599cf0c4ab37f59$exports,
  "pt-PT": $3c220ae7ef8a35fd$exports,
  "ro-RO": $93562b5094072f54$exports,
  "ru-RU": $cd9e2abd0d06c7b4$exports,
  "sk-SK": $45375701f409adf1$exports,
  "sl-SI": $27fab53a576de9dd$exports,
  "sr-SP": $4438748d9952e7c7$exports,
  "sv-SE": $0936d7347ef4da4c$exports,
  "tr-TR": $29700c92185d38f8$exports,
  "uk-UA": $662ccaf2be4c25b3$exports,
  "zh-CN": $d80a27deda7cdb3c$exports,
  "zh-TW": $2b2734393847c884$exports
};
function $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {
  let { onDismiss, ...otherProps } = props;
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1$1(/* @__PURE__ */ $parcel$interopDefault$3($61fe14465afefc5e$exports));
  let labels = $313b98861ee5dd6c$export$d6875122194c7b44$1(otherProps, stringFormatter.format("dismiss"));
  let onClick = () => {
    if (onDismiss)
      onDismiss();
  };
  return /* @__PURE__ */ React.createElement($5c3e21d68f1c4674$export$439d29a4e110a164, null, /* @__PURE__ */ React.createElement("button", {
    ...labels,
    tabIndex: -1,
    onClick
  }));
}
const $337b884510726a0d$var$OverlayContext = /* @__PURE__ */ React.createContext(null);
function $337b884510726a0d$export$14c98a7594375490() {
  let setContain = reactExports.useContext($337b884510726a0d$var$OverlayContext);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$7(() => {
    setContain === null || setContain === void 0 ? void 0 : setContain(true);
  }, [
    setContain
  ]);
}
const getTokenValue = (e2, r2, n2 = 1) => {
  if ("undefined" == typeof document || !e2)
    return "";
  let s2 = getComputedStyle(document.documentElement);
  const c2 = `--${o$d.prefix}-${e2}-${r2}`, u2 = s2.getPropertyValue(c2);
  if (u2 && u2.includes("var") && getTokenValue(e2, u2), u2 && 1 !== n2) {
    if (u2.includes("rgb"))
      return rgbToRgba(u2, n2);
    if (u2.includes("#"))
      return hexToRGBA(u2, n2);
  }
  return u2;
};
const getDocumentCSSTokens = () => {
  const e2 = [...Object.keys(o$d.theme.colors), ...Object.keys(r$h.colors)], t2 = Object.keys(r$h.shadows);
  return { colors: e2.reduce((e3, t3) => {
    const l2 = getTokenValue("colors", t3);
    return l2 && (e3[t3] = { prefix: o$d.prefix, scale: "colors", token: t3, value: l2 }), e3;
  }, {}), shadows: t2.reduce((e3, t3) => {
    const l2 = getTokenValue("shadows", t3);
    return l2 && (e3[t3] = { prefix: o$d.prefix, scale: "shadows", token: t3, value: l2 }), e3;
  }, {}) };
};
const getDocumentTheme = (e2) => {
  var t2;
  const l2 = (null == e2 || null == (t2 = e2.getAttribute("style")) ? void 0 : t2.split(";").map((e3) => e3.trim()).filter((e3) => e3.includes("color-scheme"))) || [], o2 = l2.length > 0 ? l2[0].replace("color-scheme: ", "").replace(";", "") : "";
  return (null == e2 ? void 0 : e2.getAttribute("data-theme")) || o2;
};
const getThemeName = (e2) => "string" == typeof e2 && null != e2 && e2.includes("-theme") ? null == e2 ? void 0 : e2.replace("-theme", "") : e2;
const changeTheme = (t2) => {
  var l2, o2;
  if (!document)
    return;
  const r2 = document.documentElement, n2 = (null == r2 || null == (l2 = r2.getAttribute("class")) ? void 0 : l2.split(" ").filter((e2) => !e2.includes("theme") && !e2.includes("light") && !e2.includes("dark"))) || [], s2 = (null == r2 || null == (o2 = r2.getAttribute("style")) ? void 0 : o2.split(";").filter((e2) => !e2.includes("color-scheme") && e2.length).map((e2) => `${e2};`)) || [], c2 = getThemeName(t2);
  null == r2 || r2.setAttribute("class", a$9(n2, `${c2}-theme`)), null == r2 || r2.setAttribute("style", a$9(s2, `color-scheme: ${c2};`));
};
const NextUIProvider = n$a(({ theme: e2, disableBaseline: l2, children: x2 }) => {
  const { isBrowser: j2 } = r$f(), [B2, N2] = reactExports.useState(defaultContext.type), g2 = (e3) => {
    N2((t2) => t2 !== e3 ? e3 : t2);
  }, w2 = (e3) => {
    const t2 = getDocumentTheme(e3);
    t2 && g2(t2);
  }, E2 = reactExports.useMemo(() => {
    const e3 = j2 ? getDocumentCSSTokens() : {}, t2 = t$d(copyObject(defaultContext.theme), e3), r2 = getThemeName(B2);
    return { theme: t2, type: r2, isDark: "dark" === r2 };
  }, [B2, j2]);
  return reactExports.useEffect(() => {
    var e3, t2, r2;
    w2(null == (e3 = document) ? void 0 : e3.documentElement);
    const o2 = new MutationObserver((e4) => {
      var t3;
      if (e4 && e4.length > 0 && "BODY" === (null == (t3 = e4[0]) ? void 0 : t3.target.nodeName)) {
        var r3, o3, m2;
        const e5 = null == (r3 = document) || null == (o3 = r3.body) || null == (m2 = o3.dataset) ? void 0 : m2.theme;
        e5 && g2(e5);
      } else {
        var s2;
        w2(null == (s2 = document) ? void 0 : s2.documentElement);
      }
    });
    return o2.observe(null == (t2 = document) ? void 0 : t2.documentElement, { attributes: true, attributeFilter: ["data-theme", "style"] }), o2.observe(null == (r2 = document) ? void 0 : r2.body, { attributes: true, attributeFilter: ["data-theme", "style"] }), () => o2.disconnect();
  }, []), reactExports.useEffect(() => {
    j2 && e2 && null != e2 && e2.className && (changeTheme(e2.className), g2(getThemeName(e2.className)));
  }, [j2, e2]), jsxRuntimeExports.jsx($704cf1d3b684cc5c$export$9f8ac96af4b1b2ae, { children: jsxRuntimeExports.jsx($f57aed4a881a3485$export$bf688221f59024e5, { children: jsxRuntimeExports.jsxs(f$3.Provider, { value: E2, children: [!l2 && jsxRuntimeExports.jsx(CssBaseline, {}), x2] }) }) });
}, { disableBaseline: false });
const sharedFocus = css$1({ WebkitTapHighlightColor: "transparent", "&:focus:not(&:focus-visible)": { boxShadow: "none" }, "&:focus": { outline: "none", boxShadow: "0 0 0 2px $colors$background, 0 0 0 4px $colors$primary" }, "@safari": { WebkitTapHighlightColor: "transparent", outline: "none" } });
const cssFocusVisible = css$1({ outline: "none", variants: { isFocusVisible: { true: { boxShadow: "0 0 0 2px $colors$background, 0 0 0 4px $colors$primary" }, false: {} } } });
css$1({ transform: "translateZ(0)", backfaceVisibility: "hidden" });
const sharedVisuallyHidden = css$1({ border: "0px", clip: "rect(0px, 0px, 0px, 0px)", height: "1px", width: "1px", margin: "-1px", padding: "0px", overflow: "hidden", whiteSpace: "nowrap", position: "absolute" });
const cssHideIn = css$1({ variants: { hideIn: { xs: { "@xsMax": { display: "none" } }, sm: { "@smMax": { display: "none" } }, md: { "@mdMax": { display: "none" } }, lg: { "@lgMax": { display: "none" } }, xl: { "@xlMax": { display: "none" } } } } });
const cssShowIn = css$1({ variants: { showIn: { xs: { "@xs": { display: "none" } }, sm: { "@sm": { display: "none" } }, md: { "@md": { display: "none" } }, lg: { "@lg": { display: "none" } }, xl: { "@xl": { display: "none" } } } } });
const cssHideShowIn = css$1(cssHideIn, cssShowIn);
function $6a99195332edec8b$export$80f3e147d781571c$6(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$6() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$6(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$6(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$6(element);
}
function $645f2e67b85a24c9$var$isStyleVisible$2(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible$2(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a$2(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible$2(element) && $645f2e67b85a24c9$var$isAttributeVisible$2(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a$2(element.parentElement, element));
}
const $9bf71ea28793e738$var$FocusContext = /* @__PURE__ */ React.createContext(null);
let $9bf71ea28793e738$var$activeScope = null;
let $9bf71ea28793e738$var$scopes = /* @__PURE__ */ new Map();
function $9bf71ea28793e738$export$20e40289641fbbb6(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = reactExports.useRef();
  let endRef = reactExports.useRef();
  let scopeRef = reactExports.useRef([]);
  let ctx = reactExports.useContext($9bf71ea28793e738$var$FocusContext);
  let parentScope = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    let node2 = startRef.current.nextSibling;
    let nodes = [];
    while (node2 && node2 !== endRef.current) {
      nodes.push(node2);
      node2 = node2.nextSibling;
    }
    scopeRef.current = nodes;
  }, [
    children,
    parentScope
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    $9bf71ea28793e738$var$scopes.set(scopeRef, parentScope);
    return () => {
      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$var$scopes.has(parentScope)))
        $9bf71ea28793e738$var$activeScope = parentScope;
      $9bf71ea28793e738$var$scopes.delete(scopeRef);
    };
  }, [
    scopeRef,
    parentScope
  ]);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  let focusManager = $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);
  return /* @__PURE__ */ React.createElement($9bf71ea28793e738$var$FocusContext.Provider, {
    value: {
      scopeRef,
      focusManager
    }
  }, /* @__PURE__ */ React.createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, /* @__PURE__ */ React.createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from: from2, tabbable, wrap, accept } = opts;
      let node2 = from2 || document.activeElement;
      let sentinel = scope[0].previousElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope$6(node2, scope) ? node2 : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from: from2, tabbable, wrap, accept } = opts;
      let node2 = from2 || document.activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope$6(node2, scope) ? node2 : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
const $9bf71ea28793e738$var$focusableElements$2 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
const $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR$2 = $9bf71ea28793e738$var$focusableElements$2.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements$2.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR$2 = $9bf71ea28793e738$var$focusableElements$2.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = reactExports.useRef();
  let raf = reactExports.useRef(null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    let scope1 = scopeRef.current;
    if (!contain) {
      if (raf.current) {
        cancelAnimationFrame(raf.current);
        raf.current = null;
      }
      return;
    }
    let onKeyDown = (e2) => {
      if (e2.key !== "Tab" || e2.altKey || e2.ctrlKey || e2.metaKey || scopeRef !== $9bf71ea28793e738$var$activeScope)
        return;
      let focusedElement = document.activeElement;
      let scope = scopeRef.current;
      if (!$9bf71ea28793e738$var$isElementInScope$6(focusedElement, scope))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable: true
      }, scope);
      walker.currentNode = focusedElement;
      let nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e2.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;
        nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e2.preventDefault();
      if (nextElement)
        $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e2) => {
      if (!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = e2.target;
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(e2.target, scopeRef)) {
        if (focusedNode.current)
          focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope)
          $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope)
        focusedNode.current = e2.target;
    };
    let onBlur = (e2) => {
      raf.current = requestAnimationFrame(() => {
        if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          focusedNode.current = e2.target;
          focusedNode.current.focus();
        }
      });
    };
    document.addEventListener("keydown", onKeyDown, false);
    document.addEventListener("focusin", onFocus, false);
    scope1.forEach(
      (element) => element.addEventListener("focusin", onFocus, false)
    );
    scope1.forEach(
      (element) => element.addEventListener("focusout", onBlur, false)
    );
    return () => {
      document.removeEventListener("keydown", onKeyDown, false);
      document.removeEventListener("focusin", onFocus, false);
      scope1.forEach(
        (element) => element.removeEventListener("focusin", onFocus, false)
      );
      scope1.forEach(
        (element) => element.removeEventListener("focusout", onBlur, false)
      );
    };
  }, [
    scopeRef,
    contain
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (raf.current)
        cancelAnimationFrame(raf.current);
    };
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  for (let scope of $9bf71ea28793e738$var$scopes.keys()) {
    if ($9bf71ea28793e738$var$isElementInScope$6(element, scope.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isElementInScope$6(element, scope) {
  return scope.some(
    (node2) => node2.contains(element)
  );
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope) {
  for (let s2 of $9bf71ea28793e738$var$scopes.keys()) {
    if ((s2 === scope || $9bf71ea28793e738$var$isAncestorScope(scope, s2)) && $9bf71ea28793e738$var$isElementInScope$6(element, s2.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  let parent = $9bf71ea28793e738$var$scopes.get(scope);
  if (!parent)
    return false;
  if (parent === ancestor)
    return true;
  return $9bf71ea28793e738$var$isAncestorScope(ancestor, parent);
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll)
    try {
      $6a99195332edec8b$export$80f3e147d781571c$6(element);
    } catch (err) {
    }
  else if (element != null)
    try {
      element.focus();
    } catch (err1) {
    }
}
function $9bf71ea28793e738$var$focusFirstInScope(scope) {
  let sentinel = scope[0].previousElementSibling;
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2($9bf71ea28793e738$var$getScopeRoot(scope), {
    tabbable: true
  }, scope);
  walker.currentNode = sentinel;
  $9bf71ea28793e738$var$focusElement(walker.nextNode());
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = React.useRef(autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      if (!$9bf71ea28793e738$var$isElementInScope$6(document.activeElement, $9bf71ea28793e738$var$activeScope.current))
        $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, []);
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = reactExports.useRef(typeof document !== "undefined" ? document.activeElement : null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$6(() => {
    let nodeToRestore = nodeToRestoreRef.current;
    if (!restoreFocus)
      return;
    let onKeyDown = (e2) => {
      if (e2.key !== "Tab" || e2.altKey || e2.ctrlKey || e2.metaKey)
        return;
      let focusedElement = document.activeElement;
      if (!$9bf71ea28793e738$var$isElementInScope$6(focusedElement, scopeRef.current))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$2(document.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body)
        nodeToRestore = null;
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope$6(nextElement, scopeRef.current)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e2.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInScope$6(nextElement, scopeRef.current));
        e2.preventDefault();
        e2.stopPropagation();
        if (nextElement)
          $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore))
          focusedElement.blur();
        else
          $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain)
      document.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain)
        document.removeEventListener("keydown", onKeyDown, true);
      if (restoreFocus && nodeToRestore && $9bf71ea28793e738$var$isElementInScope$6(document.activeElement, scopeRef.current))
        requestAnimationFrame(() => {
          if (document.body.contains(nodeToRestore) && document.activeElement === document.body)
            $9bf71ea28793e738$var$focusElement(nodeToRestore);
        });
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa$2(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR$2 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR$2;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node2) {
      var ref;
      if (opts === null || opts === void 0 ? void 0 : (ref = opts.from) === null || ref === void 0 ? void 0 : ref.contains(node2))
        return NodeFilter.FILTER_REJECT;
      if (node2.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a$2(node2) && (!scope || $9bf71ea28793e738$var$isElementInScope$6(node2, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node2)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = reactExports.useRef({
    isFocused: false,
    isFocusVisible: autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27$1()
  });
  let [isFocused1, setFocused] = reactExports.useState(false);
  let [isFocusVisibleState, setFocusVisible] = reactExports.useState(
    () => state.current.isFocused && state.current.isFocusVisible
  );
  let updateState = reactExports.useCallback(
    () => setFocusVisible(state.current.isFocused && state.current.isFocusVisible),
    []
  );
  let onFocusChange = reactExports.useCallback((isFocused) => {
    state.current.isFocused = isFocused;
    setFocused(isFocused);
    updateState();
  }, [
    updateState
  ]);
  $507fabe10e71c6fb$export$ec71b4b83ac08ec3((isFocusVisible2) => {
    state.current.isFocusVisible = isFocusVisible2;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$3({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused: isFocused1,
    isFocusVisible: state.current.isFocused && isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}
function createDOMRef(e2) {
  return { UNSAFE_getDOMNode: () => e2.current };
}
function createFocusableRef(e2, t2 = e2) {
  return { ...createDOMRef(e2), focus() {
    t2.current && t2.current.focus();
  } };
}
function useDOMRef(t2) {
  const n2 = reactExports.useRef(null);
  return reactExports.useImperativeHandle(t2, () => n2.current), n2;
}
function useFocusableRef(t2, n2) {
  const o2 = reactExports.useRef(null);
  return reactExports.useImperativeHandle(t2, () => createFocusableRef(o2, n2)), o2;
}
function useSyncRef(e2, r2) {
  reactExports.useLayoutEffect(() => {
    if (e2 && e2.ref && r2 && r2.current)
      return e2.ref.current = r2.current, () => {
        var t2;
        null != (t2 = e2.ref) && t2.current && (e2.ref.current = null);
      };
  }, [e2, r2]);
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$5 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$5 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f842629$4(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$5.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$5.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e$4(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928$4(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e$4(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629$4(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
const $65484d02dcb7eb3e$var$DOMPropNames$3 = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames$3 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$propRe$3 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f$3(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames$3.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames$3.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe$3.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$5(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$5())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$5(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$5(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$5 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$5() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$5 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$5 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$5 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$5;
}
function $7215afc6de606d6b$var$getScrollableElements$5(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$5(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$5 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$5 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$5() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$5.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$5.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$5.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$5.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$5.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$5)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$5.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$5();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$5);
}
function $bbed8b41f857bcc0$export$24490316f764c430$5(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$5.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$5.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6$3() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e$3(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$5(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $c87311424ea30a05$var$testUserAgent$5(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$5(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$5() {
  return $c87311424ea30a05$var$testPlatform$5(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99$3() {
  return $c87311424ea30a05$var$testPlatform$5(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224$3() {
  return $c87311424ea30a05$var$testPlatform$5(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10$5() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1$3() {
  return $c87311424ea30a05$export$186c6964ca17d99$3() || $c87311424ea30a05$export$7bef049ce92e4224$3();
}
function $c87311424ea30a05$export$a11b0059900ceec8$5() {
  return $c87311424ea30a05$var$testUserAgent$5(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de$5(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$5() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63$3(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
let $14c0b72509d70225$var$state$3 = "default";
let $14c0b72509d70225$var$savedUserSelect$3 = "";
let $14c0b72509d70225$var$modifiedElementMap$3 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487$3(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$3()) {
    if ($14c0b72509d70225$var$state$3 === "default") {
      $14c0b72509d70225$var$savedUserSelect$3 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state$3 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap$3.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295$3(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$3()) {
    if ($14c0b72509d70225$var$state$3 !== "disabled")
      return;
    $14c0b72509d70225$var$state$3 = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430$5(() => {
        if ($14c0b72509d70225$var$state$3 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect$3 || "";
          $14c0b72509d70225$var$savedUserSelect$3 = "";
          $14c0b72509d70225$var$state$3 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap$3.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap$3.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap$3.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$5 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$5.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext$3(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5$5);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928$4(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$3(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21$3(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext$3(props);
  let propsRef = reactExports.useRef(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$3();
  let pressProps = reactExports.useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$3(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$3(e2.nativeEvent, e2.currentTarget) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$3(e2.target, e2.key))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e2.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink$3(e2.currentTarget))
          e2.stopPropagation();
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$3(e2.nativeEvent, e2.currentTarget) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent$3(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de$5(e2.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3$5(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent$3(e2, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$3(e2.target, e2.key))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink$3(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63$3(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault$3(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3$5(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487$3(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault$3(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget$3(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget$3(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget$3(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295$3(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel(e2);
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    } else {
      pressProps2.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault$3(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de$5(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$5(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget$3(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$3(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent$3(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$5(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487$3(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$3(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$3(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$3(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$3(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$3(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295$3(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$4(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink$3(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent$3(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey$3(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink$3(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent$3(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById$3(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i2 = 0; i2 < changedTouches.length; i2++) {
    const touch = changedTouches[i2];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent$3(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect$3(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping$3(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right)
    return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget$3(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect$3(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping$3(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault$3(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$3(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey$3(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes$3 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey$3(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes$3.has(target.type);
}
let $8a9cb279dc87e130$export$905e7fc544a71f36$2 = class $8a9cb279dc87e130$export$905e7fc544a71f363 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc$2(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$5(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return reactExports.useCallback((e2) => {
    if (e2.target instanceof HTMLButtonElement || e2.target instanceof HTMLInputElement || e2.target instanceof HTMLTextAreaElement || e2.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e2.target;
      let onBlurHandler = (e3) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f36$2("blur", e3));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$2(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget) {
      if (onBlurProp)
        onBlurProp(e2);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc$2(onBlur);
  const onFocus = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget && document.activeElement === e2.target) {
      if (onFocusProp)
        onFocusProp(e2);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e2);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
let $507fabe10e71c6fb$var$currentModality$5 = null;
let $507fabe10e71c6fb$var$changeHandlers$5 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$5 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$5 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$5(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$5)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$5(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$5() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$5(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = true;
  if ($507fabe10e71c6fb$var$isValidKey$5(e2)) {
    $507fabe10e71c6fb$var$currentModality$5 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$5("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$5(e2) {
  $507fabe10e71c6fb$var$currentModality$5 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$5("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$5(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$5(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = true;
    $507fabe10e71c6fb$var$currentModality$5 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$5(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$5 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$5) {
    $507fabe10e71c6fb$var$currentModality$5 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$5("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$5 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$5() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$5 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$5() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$5)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$5 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$5, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$5, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$5, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$5, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$5, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$5, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$5 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$5();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$5);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$5() {
  return $507fabe10e71c6fb$var$currentModality$5;
}
function $93925083ecbb358c$export$48d1ea6320830260$2(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e2) => {
    let event = {
      ...e2,
      preventDefault() {
        e2.preventDefault();
      },
      isDefaultPrevented() {
        return e2.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e2.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd$2(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260$2(props.onKeyDown),
      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260$2(props.onKeyUp)
    }
  };
}
function $6a99195332edec8b$export$80f3e147d781571c$5(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$5() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$5(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$5(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$5(element);
}
function $9bf71ea28793e738$var$isElementInScope$5(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
let $9bf71ea28793e738$var$Tree$5 = class $9bf71ea28793e738$var$Tree {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode$5({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope$5(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode$5({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
let $9bf71ea28793e738$var$TreeNode$5 = class $9bf71ea28793e738$var$TreeNode {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
new $9bf71ea28793e738$var$Tree$5();
let $e6afbd83fe6ebbd2$var$FocusableContext$2 = /* @__PURE__ */ React.createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext$2(ref) {
  let context = reactExports.useContext($e6afbd83fe6ebbd2$var$FocusableContext$2) || {};
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$3(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c$2(props, domRef) {
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$2(props);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd$2(props);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928$4(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext$2(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = reactExports.useRef(props.autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current && domRef.current)
      $6a99195332edec8b$export$80f3e147d781571c$5(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928$4({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}
function $701a24aa0da5b062$export$ea18c227d4417cc3(props, ref) {
  let {
    elementType = "button",
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    preventFocusOnPress,
    allowFocusWhenDisabled,
    // @ts-ignore
    onClick: deprecatedOnClick,
    href,
    target,
    rel,
    type = "button"
  } = props;
  let additionalProps;
  if (elementType === "button")
    additionalProps = {
      type,
      disabled: isDisabled
    };
  else
    additionalProps = {
      role: "button",
      tabIndex: isDisabled ? void 0 : 0,
      href: elementType === "a" && isDisabled ? void 0 : href,
      target: elementType === "a" ? target : void 0,
      type: elementType === "input" ? type : void 0,
      disabled: elementType === "input" ? isDisabled : void 0,
      "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
      rel: elementType === "a" ? rel : void 0
    };
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21$3({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    preventFocusOnPress,
    ref
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c$2(props, ref);
  if (allowFocusWhenDisabled)
    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;
  let buttonProps = $3ef42575df84b30b$export$9d1611c77c2fe928$4(focusableProps, pressProps, $65484d02dcb7eb3e$export$457c3d6518dd4c6f$3(props, {
    labelable: true
  }));
  return {
    isPressed,
    buttonProps: $3ef42575df84b30b$export$9d1611c77c2fe928$4(additionalProps, buttonProps, {
      "aria-haspopup": props["aria-haspopup"],
      "aria-expanded": props["aria-expanded"],
      "aria-controls": props["aria-controls"],
      "aria-pressed": props["aria-pressed"],
      onClick: (e2) => {
        if (deprecatedOnClick) {
          deprecatedOnClick(e2);
          console.warn("onClick is deprecated, please use onPress");
        }
      }
    })
  };
}
function forwardRef(f2) {
  return reactExports.forwardRef(f2);
}
const filterPropsWithGroup = (e2, o2) => {
  var r2, t2, n2, l2, d2, a2, i2, s2, g2, u2, b2;
  return o2.isButtonGroup ? { ...e2, auto: true, shadow: false, bordered: null != (r2 = o2.bordered) ? r2 : e2.bordered, borderWeight: null != (t2 = o2.borderWeight) ? t2 : e2.borderWeight, ghost: null != (n2 = o2.ghost) ? n2 : e2.ghost, ripple: null != (l2 = o2.ripple) ? l2 : e2.ripple, flat: null != (d2 = o2.flat) ? d2 : e2.flat, animated: null != (a2 = o2.animated) ? a2 : e2.animated, rounded: null != (i2 = o2.rounded) ? i2 : e2.rounded, light: null != (s2 = o2.light) ? s2 : e2.light, size: null != (g2 = o2.size) ? g2 : e2.size, color: null != (u2 = o2.color) ? u2 : e2.color, disabled: null != (b2 = o2.disabled) ? b2 : e2.disabled } : e2;
};
const getCssColors = (e2) => {
  if (!e2.disabled)
    return e2.auto && "gradient" === e2.color && (e2.bordered || e2.ghost) ? { px: "$$buttonBorderWeight", py: "$$buttonBorderWeight" } : {};
  const o2 = { bg: "$accents1", color: "$accents7", transform: "none", boxShadow: "none", pe: "none" };
  return e2.bordered || e2.flat || e2.ghost || e2.light ? "gradient" === e2.color && (e2.bordered || e2.ghost) ? { color: "$accents4", backgroundImage: "linear-gradient($background, $background), linear-gradient($accents2, $accents2)", transform: "none", boxShadow: "none", pe: "none", pl: "$$buttonBorderWeight", pr: "$$buttonBorderWeight" } : e2.bordered || e2.ghost || e2.light ? { ...o2, bg: "transparent", borderColor: "$accents4" } : e2.flat ? { ...o2, bg: "$accents1" } : void 0 : o2;
};
const o$8 = { isButtonGroup: false, disabled: false };
const ButtonGroupContext = React.createContext(o$8);
const useButtonGroupContext = () => React.useContext(ButtonGroupContext);
const StyledButtonIcon = styled$3("span", { dflex: "center", position: "absolute", left: "$$buttonPadding", right: "auto", top: "50%", transform: "translateY(-50%)", color: "inherit", zIndex: "$1", "& svg": { background: "transparent" }, variants: { isAuto: { true: { position: "relative", transform: "none", top: "0%" } }, isRight: { true: { right: "$$buttonPadding", left: "auto" } }, isSingle: { true: { position: "static", transform: "none" } }, isGradientButtonBorder: { true: {} } }, compoundVariants: [{ isAuto: true, isRight: true, isSingle: false, css: { order: 2, ml: "calc($$buttonPadding / 2)", right: "0%", left: "0%" } }, { isAuto: true, isRight: false, isSingle: false, css: { order: 0, mr: "calc($$buttonPadding / 2)", right: "0%", left: "0%" } }, { isSingle: true, isRight: false, css: { ml: 0 } }, { isSingle: true, isRight: true, css: { mr: 0 } }, { isSingle: true, isRight: false, isGradientButtonBorder: true, css: { mr: "calc($$buttonPadding / 2)" } }] });
const e$f = ({ children: t2, className: i2, css: n2, ...e2 }) => jsxRuntimeExports.jsx(StyledButtonIcon, { className: a$9("nextui-button-icon", { "nextui-button-icon-right": e2.isRight, "nextui-button-icon-single": e2.isSingle }, i2), css: n2, ...e2, children: t2 });
e$f.toString = () => ".nextui-button-icon";
const r$a = React.memo(e$f);
const g$3 = n$a(r$a, { className: "" });
const StyledButton = styled$3("button", { $$buttonBorderRadius: "$radii$md", $$buttonPressedScale: 0.97, dflex: "center", appearance: "none", boxSizing: "border-box", fontWeight: "$medium", us: "none", lineHeight: "$sm", ta: "center", whiteSpace: "nowrap", transition: "$button", position: "relative", overflow: "hidden", border: "none", cursor: "pointer", pe: "auto", p: 0, br: "$$buttonBorderRadius", "@motion": { transition: "none" }, ".nextui-button-text": { dflex: "center", zIndex: "$2", "p, pre, div": { margin: 0 } }, [`& ${StyledDrip}`]: { zIndex: "$1", ".nextui-drip-filler": { opacity: 0.25, fill: "$accents2" } }, variants: { bordered: { true: { bg: "transparent", borderStyle: "solid", color: "$text" } }, ghost: { true: {} }, color: { default: { bg: "$primary", color: "$primarySolidContrast" }, primary: { bg: "$primary", color: "$primarySolidContrast" }, secondary: { bg: "$secondary", color: "$secondarySolidContrast" }, success: { bg: "$success", color: "$successSolidContrast" }, warning: { bg: "$warning", color: "$warningSolidContrast" }, error: { bg: "$error", color: "$errorSolidContrast" }, gradient: { bg: "$gradient", color: "$primarySolidContrast" } }, size: { xs: { $$buttonPadding: "$space$3", $$buttonBorderRadius: "$radii$xs", $$buttonHeight: "$space$10", px: "$3", height: "$$buttonHeight", lh: "$space$10", width: "auto", minWidth: "$20", fontSize: "$xs" }, sm: { $$buttonPadding: "$space$5", $$buttonBorderRadius: "$radii$sm", $$buttonHeight: "$space$12", px: "$5", height: "$$buttonHeight", lh: "$space$14", width: "auto", minWidth: "$36", fontSize: "$sm" }, md: { $$buttonPadding: "$space$7", $$buttonBorderRadius: "$radii$md", $$buttonHeight: "$space$14", px: "$7", height: "$$buttonHeight", lh: "$space$14", width: "auto", minWidth: "$48", fontSize: "$sm" }, lg: { $$buttonPadding: "$space$9", $$buttonBorderRadius: "$radii$base", $$buttonHeight: "$space$16", px: "$9", height: "$$buttonHeight", lh: "$space$15", width: "auto", minWidth: "$60", fontSize: "$md" }, xl: { $$buttonPadding: "$space$10", $$buttonBorderRadius: "$radii$xl", $$buttonHeight: "$space$18", px: "$10", height: "$$buttonHeight", lh: "$space$17", width: "auto", minWidth: "$72", fontSize: "$lg" } }, borderWeight: { light: { bw: "$light", $$buttonBorderWeight: "$borderWeights$light" }, normal: { bw: "$normal", $$buttonBorderWeight: "$borderWeights$normal" }, bold: { bw: "$bold", $$buttonBorderWeight: "$borderWeights$bold" }, extrabold: { bw: "$extrabold", $$buttonBorderWeight: "$borderWeights$extrabold" }, black: { bw: "$black", $$buttonBorderWeight: "$borderWeights$black" } }, flat: { true: { color: "$text" } }, light: { true: { bg: "transparent", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$accents2" } } } }, shadow: { true: { bs: "$sm" } }, animated: { false: { transition: "none" } }, auto: { true: { width: "auto", minWidth: "min-content" } }, rounded: { true: { $$buttonBorderRadius: "$radii$pill" } }, isPressed: { true: {} }, isHovered: { true: {} }, isChildLess: { true: { p: 0, width: "$$buttonHeight", height: "$$buttonHeight" } }, isFocusVisible: { true: {}, false: {} } }, compoundVariants: [{ isPressed: true, animated: true, css: { transform: "scale($$buttonPressedScale)" } }, { auto: true, isChildLess: false, size: "xs", css: { px: "$5", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "sm", css: { px: "$8", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "md", css: { px: "$9", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "lg", css: { px: "$10", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "xl", css: { px: "$11", minWidth: "min-content" } }, { shadow: true, isFocusVisible: false, color: "default", css: { normalShadow: "$primaryShadow" } }, { shadow: true, isFocusVisible: false, color: "primary", css: { normalShadow: "$primaryShadow" } }, { shadow: true, isFocusVisible: false, color: "secondary", css: { normalShadow: "$secondaryShadow" } }, { shadow: true, isFocusVisible: false, color: "warning", css: { normalShadow: "$warningShadow" } }, { shadow: true, isFocusVisible: false, color: "success", css: { normalShadow: "$successShadow" } }, { shadow: true, isFocusVisible: false, color: "error", css: { normalShadow: "$errorShadow" } }, { shadow: true, isFocusVisible: false, color: "gradient", css: { normalShadow: "$primaryShadow" } }, { light: true, color: "default", css: { bg: "transparent", color: "$text", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$primaryLightActive" } } } }, { light: true, color: "primary", css: { bg: "transparent", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$primaryLightActive" } } } }, { light: true, color: "secondary", css: { bg: "transparent", color: "$secondary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$secondaryLightActive" } } } }, { light: true, color: "warning", css: { bg: "transparent", color: "$warning", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$warningLightActive" } } } }, { light: true, color: "success", css: { bg: "transparent", color: "$success", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$successLightActive" } } } }, { light: true, color: "error", css: { bg: "transparent", color: "$error", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$errorLightActive" } } } }, { bordered: true, color: "default", css: { bg: "transparent", borderColor: "$primary", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$primary" } } } }, { bordered: true, color: "primary", css: { bg: "transparent", borderColor: "$primary", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$primary" } } } }, { bordered: true, color: "secondary", css: { bg: "transparent", borderColor: "$secondary", color: "$secondary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$secondary" } } } }, { bordered: true, color: "success", css: { bg: "transparent", borderColor: "$success", color: "$success", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$success" } } } }, { bordered: true, color: "warning", css: { bg: "transparent", borderColor: "$warning", color: "$warning", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$warning" } } } }, { bordered: true, color: "error", css: { bg: "transparent", borderColor: "$error", color: "$error", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$error" } } } }, { bordered: true, color: "gradient", css: { bg: "transparent", color: "$text", padding: "$$buttonBorderWeight", bgClip: "content-box, border-box", borderColor: "$primary", backgroundImage: "linear-gradient($background, $background), $gradient", border: "none", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$secondary" } } } }, { ghost: true, isHovered: true, color: "default", css: { bg: "$primary", color: "$primarySolidContrast" } }, { ghost: true, isHovered: true, color: "primary", css: { bg: "$primary", color: "$primarySolidContrast" } }, { ghost: true, isHovered: true, color: "secondary", css: { bg: "$secondary", color: "$secondarySolidContrast" } }, { ghost: true, isHovered: true, color: "success", css: { bg: "$success", color: "$successSolidContrast" } }, { ghost: true, isHovered: true, color: "warning", css: { bg: "$warning", color: "$warningSolidContrast" } }, { ghost: true, isHovered: true, color: "error", css: { bg: "$error", color: "$errorSolidContrast" } }, { ghost: true, color: "gradient", isHovered: true, css: { bg: "$gradient", color: "$white" } }, { flat: true, color: "default", css: { bg: "$primaryLight", color: "$primaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$primary" } } } }, { flat: true, color: "primary", css: { bg: "$primaryLight", color: "$primaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$primary" } } } }, { flat: true, color: "secondary", css: { bg: "$secondaryLight", color: "$secondaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$secondary" } } } }, { flat: true, color: "success", css: { bg: "$successLight", color: "$successLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$success" } } } }, { flat: true, color: "warning", css: { bg: "$warningLight", color: "$warningLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$warning" } } } }, { flat: true, color: "error", css: { bg: "$errorLight", color: "$errorLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$error" } } } }, { flat: true, isHovered: true, color: "default", css: { bg: "$primaryLightHover" } }, { flat: true, isHovered: true, color: "primary", css: { bg: "$primaryLightHover" } }, { flat: true, isHovered: true, color: "secondary", css: { bg: "$secondaryLightHover" } }, { flat: true, isHovered: true, color: "success", css: { bg: "$successLightHover" } }, { flat: true, isHovered: true, color: "warning", css: { bg: "$warningLightHover" } }, { flat: true, isHovered: true, color: "error", css: { bg: "$errorLightHover" } }, { flat: true, isPressed: true, color: "default", css: { bg: "$primaryLightActive" } }, { flat: true, isPressed: true, color: "primary", css: { bg: "$primaryLightActive" } }, { flat: true, isPressed: true, color: "secondary", css: { bg: "$secondaryLightActive" } }, { flat: true, isPressed: true, color: "success", css: { bg: "$successLightActive" } }, { flat: true, isPressed: true, color: "warning", css: { bg: "$warningLightActive" } }, { flat: true, isPressed: true, color: "error", css: { bg: "$errorLightActive" } }, { auto: true, color: "gradient", bordered: true, css: { ".nextui-button-text": { px: "$$buttonPadding" }, ".nextui-button-icon": { ml: "$$buttonPadding" }, ".nextui-button-icon-right": { mr: "$$buttonPadding" }, ".nextui-button-text-left": { pl: 0 }, ".nextui-button-text-right": { pr: 0 } } }, { rounded: true, size: "xs", css: { br: "$pill" } }, { rounded: true, size: "sm", css: { br: "$pill" } }, { rounded: true, size: "md", css: { br: "$pill" } }, { rounded: true, size: "lg", css: { br: "$pill" } }, { rounded: true, size: "xl", css: { br: "$pill" } }], defaultVariants: { color: "default", borderWeight: "normal", animated: true, size: "md" } }, cssFocusVisible);
const r$9 = StyledButton;
const C$1 = forwardRef((d2, p2) => {
  const { as: C2, css: v2, iconLeftCss: N2, iconRightCss: F2, onClick: B2, onPress: j2, onPressStart: S2, onPressEnd: k2, onPressChange: R2, onPressUp: U2, ...T2 } = d2, A2 = useButtonGroupContext(), D2 = filterPropsWithGroup(T2, A2), E2 = getCssColors(D2), { flat: G2, children: H2, disabled: L2, animated: V2, light: W2, ripple: I2, bordered: $2, auto: q2, borderWeight: z2, icon: J2, iconRight: K2, ghost: M2, autoFocus: O2, className: Q2, ...X2 } = D2, Y2 = (t2) => {
    V2 && I2 && Z2.current && nt(t2);
  }, Z2 = useDOMRef(p2), { buttonProps: _2, isPressed: tt } = $701a24aa0da5b062$export$ea18c227d4417cc3({ ...T2, isDisabled: L2, elementType: C2, onPress: (t2) => {
    "keyboard" === t2.pointerType || "virtual" === t2.pointerType ? Y2(t2) : "undefined" != typeof window && window.event && Y2(window.event), B2 && (B2(t2), console.warn("onClick is deprecated, please use onPress")), null == j2 || j2(t2);
  }, onPressStart: S2, onPressEnd: k2, onPressChange: R2, onPressUp: U2 }, Z2), { hoverProps: et, isHovered: ot } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: L2 }), { isFocused: rt, isFocusVisible: st, focusProps: it } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: O2 }), { onClick: nt, ...at } = r$e(false, Z2);
  const lt = J2 || K2, ut = 0 === React.Children.count(H2), dt = Boolean(K2), ct = reactExports.useMemo(() => tt ? "pressed" : ot ? "hovered" : L2 ? "disabled" : "ready", [L2, ot, tt]), mt = reactExports.useMemo(() => dt ? F2 : N2, [dt, F2, N2]);
  return jsxRuntimeExports.jsxs(r$9, { ref: Z2, animated: V2, as: C2, auto: q2, borderWeight: z2, bordered: $2 || M2, className: a$9("nextui-button", `nextui-button--${ct}`, Q2), css: { ...v2, ...E2 }, "data-state": ct, flat: G2, ghost: M2, isChildLess: ut, isFocusVisible: st && !L2, isHovered: ot || M2 && rt, isPressed: tt, light: W2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(_2, it, et, X2), children: [0 === React.Children.count(H2) ? jsxRuntimeExports.jsx(g$3, { isSingle: true, css: mt, isAuto: q2, isGradientButtonBorder: "gradient" === d2.color && ($2 || M2), isRight: dt, children: lt }) : lt ? jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [jsxRuntimeExports.jsx(g$3, { css: mt, isAuto: q2, isGradientButtonBorder: "gradient" === d2.color && ($2 || M2), isRight: dt, isSingle: false, children: lt }), jsxRuntimeExports.jsx("div", { className: a$9("nextui-button-text", { "nextui-button-text-right": dt, "nextui-button-text-left": !dt }), children: H2 })] }) : jsxRuntimeExports.jsx("span", { className: "nextui-button-text", children: H2 }), jsxRuntimeExports.jsx(s$3, { className: "nextui-button-drip", color: "white", ...at })] });
});
C$1.toString = () => ".nextui-button";
const t$c = n$a(C$1, { ghost: false, bordered: false, ripple: true, animated: true, disabled: false, autoFocus: false, auto: false, className: "", type: "button" });
const StyledButtonGroup = styled$3("div", { display: "inline-flex", margin: "$3", backgroundColor: "transparent", height: "min-content", [`& ${r$9}`]: { ".nextui-button-text": { top: 0 } }, variants: { vertical: { true: { fd: "column", [`& ${r$9}`]: { "&:not(:first-child)": { btlr: 0, btrr: 0 }, "&:not(:last-child)": { bblr: 0, bbrr: 0 } } }, false: { fd: "row", [`& ${r$9}`]: { "&:not(:first-child)": { btlr: 0, bblr: 0 }, "&:not(:last-child)": { btrr: 0, bbrr: 0 } } } }, size: { xs: { br: "$xs" }, sm: { br: "$sm" }, md: { br: "$md" }, lg: { br: "$base" }, xl: { br: "$xl" } }, rounded: { true: { br: "$pill" } }, bordered: { true: { bg: "transparent" } }, gradient: { true: { pl: 0 } } }, defaultVariants: { vertical: false }, compoundVariants: [{ bordered: true, vertical: true, css: { [`& ${r$9}`]: { "&:not(:last-child)": { borderBottom: "none", paddingBottom: "0" } } } }, { bordered: true, vertical: false, css: { [`& ${r$9}`]: { "&:not(:first-child)": { borderLeft: "none" } } } }, { bordered: true, vertical: false, gradient: true, css: { [`& ${r$9}`]: { "&:not(:last-child)&:not(:first-child)": { pl: 0 }, "&:last-child": { pl: 0 } } } }] });
const i$4 = StyledButtonGroup;
const a$7 = (o2) => {
  const { disabled: t2, size: a2, color: l2, bordered: n2, ghost: s2, light: u2, flat: m2, shadow: p2, auto: c2, animated: g2, rounded: h2, ripple: b2, borderWeight: f2, children: x2, ...z2 } = o2, w2 = reactExports.useMemo(() => ({ disabled: t2, size: a2, color: l2, bordered: n2, light: u2, ghost: s2, flat: m2, shadow: p2, auto: c2, borderWeight: f2, animated: g2, rounded: h2, ripple: b2, isButtonGroup: true }), [t2, g2, a2, b2, l2, n2, u2, s2, m2, f2]);
  return jsxRuntimeExports.jsx(ButtonGroupContext.Provider, { value: w2, children: jsxRuntimeExports.jsx(i$4, { bordered: n2 || s2, gradient: "gradient" === o2.color, size: a2, ...z2, children: x2 }) });
};
a$7.toString = () => ".nextui-button-group";
const l$a = React.memo(a$7);
const o$7 = n$a(l$a, { borderWeight: "normal", size: "md", color: "default" });
t$c.Group = o$7;
const getMargin = (t2) => `calc(${15.25 * t2}pt + 1px * ${t2 - 1})`;
const StyledDivider = styled$3("div", { width: "100%", maxWidth: "100%", position: "relative", variants: { color: { default: { bg: "$border" }, primary: { bg: "$primary" }, secondary: { bg: "$secondary" }, success: { bg: "$success" }, warning: { bg: "$warning" }, error: { bg: "$error" } } }, defaultVariants: { color: "default" } });
const StyledDividerText = styled$3("span", { position: "absolute", left: "50%", top: "50%", minHeight: "100%", display: "inline-flex", jc: "center", ai: "center", transform: "translate(-50%, -50%)", padding: "0 $lg", fontSize: "$base", fontWeight: "bold", textTransform: "capitalize", backgroundColor: "$background", zIndex: "$1", variants: { color: { default: { color: "$text" }, primary: { color: "$primary" }, secondary: { color: "$secondary" }, success: { color: "$success" }, warning: { color: "$warning" }, error: { color: "$error" } } } });
const a$6 = ({ height: t2, x: e2, y: a2, align: l2, children: m2, textColor: c2, css: f2, ...d2 }) => {
  const h2 = reactExports.useMemo(() => {
    if (l2 && "center" !== l2)
      return "left" === l2 || "start" === l2 ? { transform: "translateY(-50%)", left: "7%" } : { transform: "translateY(-50%)", left: "auto", right: "7%" };
  }, [l2]), u2 = a2 ? getMargin(a2 / 2) : 0, x2 = e2 ? getMargin(e2 / 2) : 0;
  return jsxRuntimeExports.jsx(StyledDivider, { css: { margin: `${u2} ${x2}`, height: `calc(${t2} * 1px)`, ...f2 }, role: "separator", ...d2, children: m2 && jsxRuntimeExports.jsx(StyledDividerText, { className: "nextui-divider-text", color: c2, css: { ...h2 }, children: m2 }) });
};
a$6.toString = () => ".nextui-divider";
const l$9 = React.memo(a$6);
const e$e = n$a(l$9, { x: 0, y: 0, height: 1, align: "center" });
function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {
  let { isReadOnly } = props;
  let [isSelected, setSelected] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.isSelected, props.defaultSelected || false, props.onChange);
  function updateSelected(value) {
    if (!isReadOnly)
      setSelected(value);
  }
  function toggleState() {
    if (!isReadOnly)
      setSelected(!isSelected);
  }
  return {
    isSelected,
    setSelected: updateSelected,
    toggle: toggleState
  };
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$4 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$4 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f842629$3(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$4.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$4.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e$3(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928$3(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e$3(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629$3(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
const $65484d02dcb7eb3e$var$DOMPropNames$2 = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames$2 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$propRe$2 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f$2(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames$2.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames$2.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe$2.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$4(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$4())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$4(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$4(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$4 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$4() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$4 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$4 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$4 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$4;
}
function $7215afc6de606d6b$var$getScrollableElements$4(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$4(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$4 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$4 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$4() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$4.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$4.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$4.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$4.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$4.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$4)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$4.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$4();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$4);
}
function $bbed8b41f857bcc0$export$24490316f764c430$4(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$4.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$4.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6$2() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e$2(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$4(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $c87311424ea30a05$var$testUserAgent$4(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$4(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$4() {
  return $c87311424ea30a05$var$testPlatform$4(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99$2() {
  return $c87311424ea30a05$var$testPlatform$4(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224$2() {
  return $c87311424ea30a05$var$testPlatform$4(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10$4() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1$2() {
  return $c87311424ea30a05$export$186c6964ca17d99$2() || $c87311424ea30a05$export$7bef049ce92e4224$2();
}
function $c87311424ea30a05$export$a11b0059900ceec8$4() {
  return $c87311424ea30a05$var$testUserAgent$4(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de$4(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$4() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63$2(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
let $14c0b72509d70225$var$state$2 = "default";
let $14c0b72509d70225$var$savedUserSelect$2 = "";
let $14c0b72509d70225$var$modifiedElementMap$2 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487$2(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$2()) {
    if ($14c0b72509d70225$var$state$2 === "default") {
      $14c0b72509d70225$var$savedUserSelect$2 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state$2 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap$2.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295$2(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$2()) {
    if ($14c0b72509d70225$var$state$2 !== "disabled")
      return;
    $14c0b72509d70225$var$state$2 = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430$4(() => {
        if ($14c0b72509d70225$var$state$2 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect$2 || "";
          $14c0b72509d70225$var$savedUserSelect$2 = "";
          $14c0b72509d70225$var$state$2 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap$2.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap$2.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap$2.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$4 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$4.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext$2(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5$4);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928$3(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$2(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21$2(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext$2(props);
  let propsRef = reactExports.useRef(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$2();
  let pressProps = reactExports.useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$2(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$2(e2.nativeEvent, e2.currentTarget) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$2(e2.target, e2.key))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e2.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink$2(e2.currentTarget))
          e2.stopPropagation();
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$2(e2.nativeEvent, e2.currentTarget) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent$2(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de$4(e2.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3$4(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent$2(e2, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$2(e2.target, e2.key))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink$2(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63$2(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault$2(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3$4(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487$2(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault$2(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget$2(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget$2(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget$2(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295$2(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel(e2);
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    } else {
      pressProps2.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault$2(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de$4(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$4(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget$2(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$2(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent$2(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$4(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487$2(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$2(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$2(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$2(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$2(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$2(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295$2(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$3(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink$2(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent$2(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey$2(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink$2(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent$2(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById$2(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i2 = 0; i2 < changedTouches.length; i2++) {
    const touch = changedTouches[i2];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent$2(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect$2(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping$2(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right)
    return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget$2(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect$2(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping$2(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault$2(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$2(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey$2(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes$2 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey$2(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes$2.has(target.type);
}
let $8a9cb279dc87e130$export$905e7fc544a71f36$1 = class $8a9cb279dc87e130$export$905e7fc544a71f364 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc$1(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$4(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return reactExports.useCallback((e2) => {
    if (e2.target instanceof HTMLButtonElement || e2.target instanceof HTMLInputElement || e2.target instanceof HTMLTextAreaElement || e2.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e2.target;
      let onBlurHandler = (e3) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f36$1("blur", e3));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$1(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget) {
      if (onBlurProp)
        onBlurProp(e2);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc$1(onBlur);
  const onFocus = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget && document.activeElement === e2.target) {
      if (onFocusProp)
        onFocusProp(e2);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e2);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
let $507fabe10e71c6fb$var$currentModality$4 = null;
let $507fabe10e71c6fb$var$changeHandlers$4 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$4 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$4 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$4(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$4)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$4(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$4() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$4(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = true;
  if ($507fabe10e71c6fb$var$isValidKey$4(e2)) {
    $507fabe10e71c6fb$var$currentModality$4 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$4("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$4(e2) {
  $507fabe10e71c6fb$var$currentModality$4 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$4("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$4(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$4(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = true;
    $507fabe10e71c6fb$var$currentModality$4 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$4(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$4 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$4) {
    $507fabe10e71c6fb$var$currentModality$4 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$4("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$4 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$4() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$4 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$4() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$4)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$4 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$4, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$4, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$4, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$4, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$4, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$4, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$4 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$4();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$4);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$4() {
  return $507fabe10e71c6fb$var$currentModality$4;
}
function $93925083ecbb358c$export$48d1ea6320830260$1(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e2) => {
    let event = {
      ...e2,
      preventDefault() {
        e2.preventDefault();
      },
      isDefaultPrevented() {
        return e2.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e2.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd$1(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260$1(props.onKeyDown),
      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260$1(props.onKeyUp)
    }
  };
}
function $6a99195332edec8b$export$80f3e147d781571c$4(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$4() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$4(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$4(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$4(element);
}
function $9bf71ea28793e738$var$isElementInScope$4(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
let $9bf71ea28793e738$var$Tree$4 = class $9bf71ea28793e738$var$Tree2 {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode$4({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope$4(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree2();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode$4({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
let $9bf71ea28793e738$var$TreeNode$4 = class $9bf71ea28793e738$var$TreeNode2 {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
new $9bf71ea28793e738$var$Tree$4();
let $e6afbd83fe6ebbd2$var$FocusableContext$1 = /* @__PURE__ */ React.createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext$1(ref) {
  let context = reactExports.useContext($e6afbd83fe6ebbd2$var$FocusableContext$1) || {};
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$2(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c$1(props, domRef) {
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6$1(props);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd$1(props);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928$3(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext$1(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = reactExports.useRef(props.autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current && domRef.current)
      $6a99195332edec8b$export$80f3e147d781571c$4(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928$3({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isRequired = false, isReadOnly = false, value, name, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid" } = props;
  let onChange = (e2) => {
    e2.stopPropagation();
    state.setSelected(e2.target.checked);
  };
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21$2({
    isDisabled
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c$1(props, ref);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928$3(pressProps, focusableProps);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f$2(props, {
    labelable: true
  });
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe928$3(domProps, {
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onChange,
      disabled: isDisabled,
      ...value == null ? {} : {
        value
      },
      name,
      type: "checkbox",
      ...interactions
    }),
    isSelected: state.isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id: id2, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id2 = $bdb11010cef70236$export$f680877a34711e37$3(id2);
  let labelId = $bdb11010cef70236$export$f680877a34711e37$3();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id2 : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel)
    console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = $313b98861ee5dd6c$export$d6875122194c7b44({
    id: id2,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, validationState } = props;
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(props);
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8$1([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  let errorMessageId = $bdb11010cef70236$export$b4cc09c592e8fdb8$1([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  fieldProps = $3ef42575df84b30b$export$9d1611c77c2fe928$5(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}
function $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {
  let { inputProps } = $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, inputRef);
  let { isSelected } = state;
  let { isIndeterminate } = props;
  reactExports.useEffect(() => {
    if (inputRef.current)
      inputRef.current.indeterminate = isIndeterminate;
  });
  return {
    inputProps: {
      ...inputProps,
      checked: isSelected,
      "aria-checked": isIndeterminate ? "mixed" : isSelected
    }
  };
}
const $1ae600c947479353$export$31440636951aa68c = /* @__PURE__ */ new WeakMap();
const $1ae600c947479353$export$a3077e9c93f7360f = /* @__PURE__ */ new WeakMap();
const $1ae600c947479353$export$d5679492e2864181 = /* @__PURE__ */ new WeakMap();
function $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {
  let { isDisabled, name } = props;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = $2baaea4c71418dea$export$294aa081a6c6f55d({
    ...props,
    // Checkbox group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  $1ae600c947479353$export$a3077e9c93f7360f.set(state, descriptionProps.id);
  $1ae600c947479353$export$d5679492e2864181.set(state, errorMessageProps.id);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f$4(props, {
    labelable: true
  });
  $1ae600c947479353$export$31440636951aa68c.set(state, name);
  return {
    groupProps: $3ef42575df84b30b$export$9d1611c77c2fe928$5(domProps, {
      role: "group",
      "aria-disabled": isDisabled || void 0,
      ...fieldProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}
function $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {
  const toggleState = $3017fa7ffdddec74$export$8042c6c013fd5226({
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isSelected: state.isSelected(props.value),
    onChange(isSelected) {
      if (isSelected)
        state.addValue(props.value);
      else
        state.removeValue(props.value);
      if (props.onChange)
        props.onChange(isSelected);
    }
  });
  let { inputProps } = $406796ff087fe49b$export$e375f10ce42261c5({
    ...props,
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isDisabled: props.isDisabled || state.isDisabled,
    name: props.name || $1ae600c947479353$export$31440636951aa68c.get(state)
  }, toggleState, inputRef);
  return {
    inputProps: {
      ...inputProps,
      "aria-describedby": [
        state.validationState === "invalid" ? $1ae600c947479353$export$d5679492e2864181.get(state) : null,
        $1ae600c947479353$export$a3077e9c93f7360f.get(state)
      ].filter(Boolean).join(" ") || void 0
    }
  };
}
function createContext(t2 = {}) {
  const { strict: e2 = true, errorMessage: o2 = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider", name: n2 } = t2, c2 = reactExports.createContext(void 0);
  return c2.displayName = n2, [c2.Provider, function t3() {
    const n3 = reactExports.useContext(c2);
    if (!n3 && e2) {
      const r2 = new Error(o2);
      throw r2.name = "ContextError", null == Error.captureStackTrace || Error.captureStackTrace(r2, t3), r2;
    }
    return n3;
  }, c2];
}
const [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({ name: "CheckboxGroupContext", strict: false });
const useCheckbox = (a2) => {
  var s2, u2, d2;
  const c2 = useCheckboxGroupContext(), { size: m2 = null != (s2 = null == c2 ? void 0 : c2.size) ? s2 : "md", color: p2 = null != (u2 = null == c2 ? void 0 : c2.color) ? u2 : "default", labelColor: b2 = null != (d2 = null == c2 ? void 0 : c2.labelColor) ? d2 : "default", lineThrough: h2, isRounded: f2 = false, disableAnimation: v2 = false, isIndeterminate: C2 = false, containerCss: x2, ...g2 } = a2;
  if (c2 && __DEV__) {
    const e2 = "The Checkbox.Group is being used, `%s` will be ignored. Use the `%s` of the Checkbox.Group instead.";
    "isSelected" in g2 && console.warn(e2, "isSelected", "value"), "defaultSelected" in g2 && console.warn(e2, "defaultSelected", "defaultValue");
  }
  const k2 = reactExports.useRef(null), S2 = reactExports.useMemo(() => {
    var e2, o2;
    return { ...g2, isIndeterminate: C2, value: null != (e2 = g2.value) ? e2 : "", isRequired: null != (o2 = g2.isRequired) && o2 };
  }, [C2, g2]), { inputProps: R2 } = c2 ? $fba3e38d5ca8983f$export$353b32fc6898d37d({ ...S2, validationState: g2.validationState }, c2.groupState, k2) : $406796ff087fe49b$export$e375f10ce42261c5(S2, $3017fa7ffdddec74$export$8042c6c013fd5226(S2), k2);
  return { size: m2, color: p2, labelColor: b2, isRounded: f2, lineThrough: h2, disableAnimation: v2, isIndeterminate: C2, inputRef: k2, inputProps: R2, containerCss: x2 };
};
const StyledCheckboxLabel = styled$3("label", { $$checkboxBorderColor: "$colors$border", $$checkboxBorderRadius: "$radii$squared", d: "inline-flex", jc: "flex-start", ai: "center", position: "relative", w: "auto", cursor: "pointer", zIndex: "$1", opacity: 1, transition: "opacity 0.25s ease", "@motion": { transition: "none" }, variants: { size: { xs: { $$checkboxSize: "$space$7" }, sm: { $$checkboxSize: "$space$8" }, md: { $$checkboxSize: "$space$9" }, lg: { $$checkboxSize: "$space$10" }, xl: { $$checkboxSize: "$space$11" } }, isDisabled: { true: { opacity: 0.75, cursor: "not-allowed" } }, disableAnimation: { true: { transition: "none" } } }, defaultVariants: { size: "md" } });
const StyledIconCheckFirstLine = styled$3("div", { content: "", background: "transparent", position: "absolute", width: "8px", height: "1px", br: "5px", zIndex: "$1", bottom: "0px", "&:after": { content: "", position: "absolute", left: "0px", width: "0%", height: "2px", background: "$white", br: "5px 0px 0px 5px" }, "@motion": { "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { display: "none" } }, isChecked: { true: { "&:after": { width: "100%", transition: "width 0.25s ease 0.1s" } } }, disableAnimation: { true: { "&:after": { transition: "none" } } } }, compoundVariants: [{ isChecked: true, disableAnimation: true, css: { "&:after": { transition: "none" } } }] });
const StyledIconCheckSecondLine = styled$3("div", { content: "", position: "absolute", h: "13px", br: "5px", bottom: "0", right: "0", zIndex: "$1", background: "transparent", width: "2px", "&:after": { content: "", position: "absolute", width: "2px", height: "0%", background: "$white", left: "0px", bottom: "0px", br: "5px 5px 0px 0px" }, "@motion": { "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { display: "none" } }, isChecked: { true: { "&:after": { height: "100%", transition: "height 0.2s ease 0.3s" } } }, disableAnimation: { true: { "&:after": { transition: "none" } } } }, compoundVariants: [{ isChecked: true, disableAnimation: true, css: { "&:after": { transition: "none" } } }] });
const StyledIconCheck = styled$3("i", { size: "$$checkboxSize", dflex: "center", br: "inherit", opacity: 0, zIndex: "$2", transition: "transform 0.35s ease", "&:after": { content: "", opacity: 0, position: "relative", width: "10px", height: "2px", br: "1px", background: "$white", display: "block" }, "@motion": { transition: "none", "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { opacity: 1, transform: "rotate(0deg)", width: "auto", height: "auto", margin: "0px", "&:after": { opacity: 1 } }, false: { width: "8px", height: "14px", display: "block", position: "relative", marginTop: "-4px" } }, size: { xs: { marginTop: "-2px", transform: "rotate(45deg) scale(0.5)" }, sm: { marginTop: "-2px", transform: "rotate(45deg) scale(0.5)" }, md: { transform: "rotate(45deg) scale(0.8)" }, lg: { transform: "rotate(45deg)" }, xl: { transform: "rotate(45deg)" } }, isChecked: { true: { opacity: 1 } }, disableAnimation: { true: { transition: "none", "&:after": { transition: "none" } } } }, compoundVariants: [{ isIndeterminate: true, size: "xs", css: { scale: "0.5" } }, { isIndeterminate: true, size: "sm", css: { scale: "0.5" } }, { isIndeterminate: true, size: "md", css: { scale: "0.8" } }, { isIndeterminate: true, size: "lg", css: { transform: "none" } }, { isIndeterminate: true, size: "lg", css: { transform: "none" } }] });
const StyledCheckboxMask = styled$3("div", { $$checkboxMaskTransition: "transform 0.25s ease 0s, opacity 0.25s ease 0s, background 0.25s ease 0s, border-color 0.25s ease 0s", size: "100%", position: "absolute", pe: "none", boxSizing: "border-box", dflex: "center", zIndex: "-$1", br: "inherit", color: "$$checkboxBorderColor", "&:before": { content: "", position: "absolute", top: "0px", left: "0px", size: "100%", br: "inherit", transition: "$$checkboxMaskTransition", zIndex: "-$1", border: "$borderWeights$normal solid currentColor", boxSizing: "border-box" }, "&:after": { content: "", position: "absolute", top: "0px", left: "0px", size: "100%", bg: "$$checkboxColor", scale: 0.5, br: "inherit", opacity: 0, transition: "$$checkboxMaskTransition", zIndex: "-$1" }, "@motion": { "&:before": { transition: "none" }, "&:after": { transition: "none" } }, variants: { isChecked: { true: { "&:before": { opacity: 0, scale: 1.2 }, "&:after": { opacity: 1, scale: 1 } } }, isIndeterminate: { true: { "&:before": { opacity: 0, scale: 1.2 }, "&:after": { opacity: 1, scale: 1 } } }, disableAnimation: { true: { "&:before": { transition: "none" }, "&:after": { transition: "none" } } } } });
const StyledCheckboxText = styled$3("span", { position: "relative", dflex: "center", color: "$text", opacity: 1, pl: "calc($$checkboxSize * 0.57)", ln: "$$checkboxSize", fontSize: "$$checkboxSize", us: "none", transition: "opacity 0.25s ease 0s", "@motion": { transition: "none", "&:before": { transition: "none" } }, variants: { color: { default: { color: "$text" }, primary: { color: "$primary" }, secondary: { color: "$secondary" }, success: { color: "$success" }, warning: { color: "$warning" }, error: { color: "$error" } }, lineThrough: { true: { "&:before": { content: "", position: "absolute", width: "0px", height: "2px", background: "$text", transition: "width 0.25s ease 0s" } } }, isChecked: { true: { "&:before": { opacity: 0.8 } } }, isDisabled: { true: { color: "$accents5" } }, disableAnimation: { true: { transition: "none", "&:before": { transition: "none" } } } }, compoundVariants: [{ lineThrough: true, isChecked: true, css: { opacity: 0.6, "&:before": { w: "calc(100% - 10px)" } } }] });
const StyledCheckboxContainer = styled$3("div", { br: "$$checkboxBorderRadius", position: "relative", sizeMin: "$$checkboxSize", transition: "box-shadow 0.25s ease", zIndex: "$1", ".nextui-checkbox-input": { position: "absolute", width: "100%", height: "100%", top: "0px", left: "0px", margin: "0px", padding: "0px", opacity: 0, zIndex: "$1", cursor: "pointer", "&:disabled": { cursor: "not-allowed" } }, "@motion": { transition: "none" }, variants: { color: { default: { $$checkboxColor: "$colors$primary", $$checkboxColorHover: "$colors$primarySolidHover" }, primary: { $$checkboxColor: "$colors$primary", $$checkboxColorHover: "$colors$primarySolidHover" }, secondary: { $$checkboxColor: "$colors$secondary", $$checkboxColorHover: "$colors$secondarySolidHover" }, success: { $$checkboxColor: "$colors$success", $$checkboxColorHover: "$colors$successSolidHover" }, warning: { $$checkboxColor: "$colors$warning", $$checkboxColorHover: "$colors$warningSolidHover" }, error: { $$checkboxColor: "$colors$error", $$checkboxColorHover: "$colors$errorSolidHover" }, gradient: { $$checkboxColor: "$colors$gradient", $$checkboxColorHover: "$colors$gradient" } }, isRounded: { true: { $$checkboxBorderRadius: "$radii$pill" } }, isDisabled: { true: { opacity: 0.4, cursor: "not-allowed" } }, disableAnimation: { true: { transition: "none" } }, isHovered: { true: { [`& ${StyledCheckboxMask}:before`]: { bg: "$$checkboxBorderColor", border: "2px solid transparent" }, [`& ${StyledCheckboxMask}:after`]: { bg: "$$checkboxColorHover" } } } }, defaultVariants: { color: "default" } }, cssFocusVisible);
const StyledCheckboxGroup = styled$3("div", { display: "flex", flexDirection: "column", "& .nextui-checkbox-group-label": { d: "block", fontWeight: "$normal", fontSize: "calc($$checkboxSize * 0.8)", color: "$accents7", mb: "$3" }, variants: { size: { xs: { $$checkboxSize: "$space$7" }, sm: { $$checkboxSize: "$space$8" }, md: { $$checkboxSize: "$space$9" }, lg: { $$checkboxSize: "$space$10" }, xl: { $$checkboxSize: "$space$11" } }, isDisabled: { true: { "& .nextui-checkbox-group-label": { color: "$accents5" } } } } });
const StyledCheckboxGroupContainer = styled$3("div", { display: "flex", flexDirection: "column", variants: { isRow: { true: { flexDirection: "row", mt: 0, [`& ${StyledCheckboxLabel}`]: { mr: "$$checkboxSize" } }, false: { mr: 0, flexDirection: "column", [`& ${StyledCheckboxLabel}:not(:first-child)`]: { mt: "$$checkboxSize" } } } }, defaultVariants: { isRow: false } });
const C = React.forwardRef((e2, l2) => {
  const { className: C2, as: I2, css: v2, children: D2, label: j2, ...F2 } = e2, { size: P2, color: R2, labelColor: g2, isRounded: y2, lineThrough: z2, disableAnimation: H2, isIndeterminate: T2, inputRef: V2, inputProps: w2, containerCss: S2 } = useCheckbox({ ...F2, children: null != D2 ? D2 : j2 }), U2 = useFocusableRef(l2, V2), { hoverProps: $2, isHovered: q2 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: w2.disabled }), { pressProps: B2 } = $f6c31cce2adf654f$export$45712eceda6fad21$4({ isDisabled: w2.disabled }), { focusProps: E2, isFocusVisible: G2 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: w2.autoFocus }), J2 = reactExports.useMemo(() => q2 ? "hovered" : T2 && w2.checked ? "mixed" : w2.checked ? "checked" : "unchecked", [q2, T2, w2.checked]);
  return jsxRuntimeExports.jsxs(StyledCheckboxLabel, { ref: U2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5($2, B2, $65484d02dcb7eb3e$export$457c3d6518dd4c6f$4(F2, { labelable: true })), as: I2, className: a$9("nextui-checkbox-label", `nextui-checkbox--${J2}`, C2), css: v2, disableAnimation: H2, isDisabled: w2.disabled, size: P2, children: [jsxRuntimeExports.jsxs(StyledCheckboxContainer, { className: "nextui-checkbox-container", color: R2, css: S2, disableAnimation: H2, isDisabled: w2.disabled, isFocusVisible: G2, isHovered: q2, isRounded: y2, ...E2, children: [jsxRuntimeExports.jsx($5c3e21d68f1c4674$export$439d29a4e110a164, { children: jsxRuntimeExports.jsx("input", { ref: V2, className: "nextui-checkbox-input", ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(w2, E2) }) }), jsxRuntimeExports.jsx(StyledCheckboxMask, { className: "nextui-checkbox-mask", disableAnimation: H2, isChecked: w2.checked, isIndeterminate: T2, children: jsxRuntimeExports.jsxs(StyledIconCheck, { className: "nextui-icon-check", disableAnimation: H2, isChecked: w2.checked, isIndeterminate: T2, size: P2, children: [jsxRuntimeExports.jsx(StyledIconCheckFirstLine, { className: "nextui-icon-check-line1", disableAnimation: H2, isChecked: w2.checked, isIndeterminate: T2 }), jsxRuntimeExports.jsx(StyledIconCheckSecondLine, { className: "nextui-icon-check-line2", disableAnimation: H2, isChecked: w2.checked, isIndeterminate: T2 })] }) })] }), (D2 || j2) && jsxRuntimeExports.jsx(StyledCheckboxText, { className: "nextui-checkbox-text", color: g2, disableAnimation: H2, isChecked: w2.checked, isDisabled: w2.disabled, lineThrough: z2, children: D2 || j2 })] });
});
C.toString = () => ".nextui-checkbox";
const e$d = C;
function $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {
  let [selectedValues, setValue] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.value, props.defaultValue || [], props.onChange);
  const state = {
    value: selectedValues,
    setValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      setValue(value);
    },
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isSelected(value) {
      return selectedValues.includes(value);
    },
    addValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (!selectedValues.includes(value))
        setValue(selectedValues.concat(value));
    },
    removeValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter(
          (existingValue) => existingValue !== value
        ));
    },
    toggleValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter(
          (existingValue) => existingValue !== value
        ));
      else
        setValue(selectedValues.concat(value));
    },
    validationState: props.validationState
  };
  return state;
}
const useCheckboxGroup = (e2 = {}) => {
  const { size: t2 = "md", color: a2 = "default", labelColor: l2 = "default", orientation: s2 = "vertical", css: c2, ...p2 } = e2, i2 = $587d3ad58be6d31f$export$daff6da51032a415(p2), { labelProps: u2, groupProps: b2 } = $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(p2, i2);
  return { css: c2, size: t2, orientation: s2, color: a2, labelColor: l2, groupState: i2, labelProps: u2, groupProps: b2 };
};
const n$8 = React.forwardRef((e2, s2) => {
  const { children: n2, className: p2, as: u2, label: x2, ...b2 } = e2, { css: h2, ...f2 } = useCheckboxGroup({ ...b2, label: x2 }), d2 = useDOMRef(s2);
  return jsxRuntimeExports.jsxs(StyledCheckboxGroup, { ref: d2, ...f2.groupProps, as: u2, className: a$9("nextui-checkbox-group", p2), css: h2, isDisabled: f2.groupState.isDisabled, size: f2.size, children: [x2 && jsxRuntimeExports.jsx("label", { className: "nextui-checkbox-group-label", ...f2.labelProps, children: x2 }), jsxRuntimeExports.jsx(StyledCheckboxGroupContainer, { className: "nextui-checkbox-group-items", isRow: "horizontal" === f2.orientation, role: "presentation", children: jsxRuntimeExports.jsx(CheckboxGroupProvider, { value: f2, children: n2 }) })] });
});
n$8.toString = () => ".nextui-checkbox-group";
const o$6 = n$8;
e$d.Group = o$6;
const StyledSpacer = styled$3("span", { size: "1px", variants: { inline: { true: { display: "inline-block" }, false: { display: "block" } } }, defaultVariants: { inline: false } });
const m$8 = ({ x: t2, y: r2, css: m2, ...e2 }) => {
  const n2 = getMargin(t2), a2 = getMargin(r2);
  return jsxRuntimeExports.jsx(StyledSpacer, { "aria-hidden": "true", css: { marginLeft: `${n2} !important`, marginTop: `${a2} !important`, ...m2 }, ...e2 });
};
m$8.toString = () => ".nextui-spacer";
const e$b = React.memo(m$8);
const e$c = n$a(e$b, { x: 1, y: 1 });
const c$h = ({ children: c2, onExited: i2, onEntered: s2, className: a2, childrenRef: m2, enterTime: o2 = 60, leaveTime: u2 = 60, clearTime: T2 = 60, visible: d2 = false, name: p2 = "transition", ...f2 }) => {
  const [$2, v2] = reactExports.useState(""), [N2, E2] = reactExports.useState(d2);
  return reactExports.useLayoutEffect(() => {
    const e2 = d2 ? "enter" : "leave";
    d2 && !N2 && E2(true), v2(`${p2}-${e2}`);
    const t2 = d2 ? o2 : u2, l2 = setTimeout(() => {
      v2(`${p2}-${e2} ${p2}-${e2}-active`), "leave" === e2 ? null == i2 || i2() : null == s2 || s2(), clearTimeout(l2);
    }, t2), r2 = setTimeout(() => {
      d2 || (v2(""), E2(false)), clearTimeout(r2);
    }, t2 + T2);
    return () => {
      clearTimeout(l2), clearTimeout(r2);
    };
  }, [d2, N2]), reactExports.useEffect(() => {
    if (null == m2 || !m2.current)
      return;
    const e2 = $2.split(" "), t2 = m2.current.className.split(" ").filter((e3) => !e3.includes(p2));
    m2.current.className = a$9(t2, e2);
  }, [m2, $2]), React.isValidElement(c2) && N2 ? React.cloneElement(c2, { ...f2, className: a$9(c2.props.className, a2, !(null != m2 && m2.current) && $2) }) : null;
};
const m$7 = React.memo(c$h);
const StyledTooltipTrigger = styled$3("div", { width: "max-content", display: "inherit" });
const StyledTooltipArrow = styled$3("span", { display: "none", content: "", size: "$5", zIndex: "-2", background: "$$tooltipColor", br: "0px 0px 2px 0px", position: "absolute" });
const StyledTooltip = styled$3("div", { position: "relative", fs: "$sm", padding: 0, variants: { hideArrow: { false: { [`& ${StyledTooltipArrow}`]: { display: "block" } } } } });
const StyledTooltipContent = styled$3("div", { position: "absolute", width: "auto", padding: "$3 $sm", opacity: 0, zIndex: "$10", br: "$lg", "@motion": { transition: "none" }, variants: { color: { default: { $$tooltipColor: "$colors$background", bg: "$$tooltipColor" }, primary: { $$tooltipColor: "$colors$primary", bg: "$$tooltipColor" }, secondary: { $$tooltipColor: "$colors$secondary", bg: "$$tooltipColor" }, success: { $$tooltipColor: "$colors$success", bg: "$$tooltipColor" }, warning: { $$tooltipColor: "$colors$warning", bg: "$$tooltipColor" }, error: { $$tooltipColor: "$colors$error", bg: "$$tooltipColor" }, invert: { $$tooltipColor: "$colors$foreground", bg: "$$tooltipColor" } }, contentColor: { default: { $$tooltipTextColor: "$colors$text", color: "$$tooltipTextColor" }, primary: { $$tooltipTextColor: "$colors$primary", color: "$$tooltipTextColor" }, secondary: { $$tooltipTextColor: "$colors$secondary", color: "$$tooltipTextColor" }, success: { $$tooltipTextColor: "$colors$success", color: "$$tooltipTextColor" }, warning: { $$tooltipTextColor: "$colors$warning", color: "$$tooltipTextColor" }, error: { $$tooltipTextColor: "$colors$error", color: "$$tooltipTextColor" }, invert: { $$tooltipTextColor: "$colors$invert", color: "$$tooltipTextColor" } }, rounded: { true: { br: "$pill" } }, shadow: { true: { bs: "$md" } }, animated: { true: { transition: "opacity 0.25s ease 0s, top 0.25s ease 0s" }, false: { transition: "none" } } }, compoundVariants: [{ color: "primary", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "secondary", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "success", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "error", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "invert", contentColor: "default", css: { $$tooltipTextColor: "$colors$background" } }], defaultVariants: { color: "default", contentColor: "default" } });
const t$b = { top: -1e3, left: -1e3, right: -1e3, bottom: -1e3, width: 0, height: 0 };
const getRect = (o2) => {
  if (!o2 || !o2.current)
    return t$b;
  const e2 = o2.current.getBoundingClientRect();
  return { ...e2, width: e2.width || e2.right - e2.left, height: e2.height || e2.bottom - e2.top, top: e2.top + document.documentElement.scrollTop, bottom: e2.bottom + document.documentElement.scrollTop, left: e2.left + document.documentElement.scrollLeft, right: e2.right + document.documentElement.scrollLeft };
};
const defaultTooltipPlacement = { top: "-1000px", left: "-1000px", transform: "none" };
const getPlacement = (t2, o2, e2) => {
  const r2 = { top: { top: o2.top - e2 + "px", left: `${o2.left + o2.width / 2}px`, transform: "translate(-50%, -100%)" }, topStart: { top: o2.top - e2 + "px", left: `${o2.left}px`, transform: "translate(0, -100%)" }, topEnd: { top: o2.top - e2 + "px", left: `${o2.left + o2.width}px`, transform: "translate(-100%, -100%)" }, bottom: { top: `${o2.bottom + e2}px`, left: `${o2.left + o2.width / 2}px`, transform: "translate(-50%, 0)" }, bottomStart: { top: `${o2.bottom + e2}px`, left: `${o2.left}px`, transform: "translate(0, 0)" }, bottomEnd: { top: `${o2.bottom + e2}px`, left: `${o2.left + o2.width}px`, transform: "translate(-100%, 0)" }, left: { top: `${o2.top + o2.height / 2}px`, left: o2.left - e2 + "px", transform: "translate(-100%, -50%)" }, leftStart: { top: `${o2.top}px`, left: o2.left - e2 + "px", transform: "translate(-100%, 0)" }, leftEnd: { top: `${o2.top + o2.height}px`, left: o2.left - e2 + "px", transform: "translate(-100%, -100%)" }, right: { top: `${o2.top + o2.height / 2}px`, left: `${o2.right + e2}px`, transform: "translate(0, -50%)" }, rightStart: { top: `${o2.top}px`, left: `${o2.right + e2}px`, transform: "translate(0, 0)" }, rightEnd: { top: `${o2.top + o2.height}px`, left: `${o2.right + e2}px`, transform: "translate(0, -100%)" } };
  return r2[t2] || r2.top;
};
const getIconPlacement = (t2, o2) => {
  const e2 = { top: { top: "auto", right: "auto", left: "50%", bottom: "0px", transform: "translate(-50%, 100%) rotate(45deg)" }, topStart: { top: "auto", right: "auto", left: "8%", bottom: "0px", transform: "translate(8%, 100%) rotate(45deg)" }, topEnd: { top: "auto", right: "8%", left: "auto", bottom: "0px", transform: "translate(8%, 100%) rotate(45deg)" }, bottom: { top: "0px", right: "auto", left: "50%", bottom: "auto", transform: "translate(-50%, -100%) rotate(225deg)" }, bottomStart: { top: "0px", right: "auto", left: "8%", bottom: "auto", transform: "translate(8%, -100%) rotate(225deg)" }, bottomEnd: { top: "0px", right: "8%", left: "auto", bottom: "auto", transform: "translate(8%, -100%) rotate(225deg)" }, left: { top: "50%", right: `-${o2 - 1}px`, left: "auto", bottom: "auto", transform: "translate(100%, -50%) rotate(-45deg)" }, leftStart: { top: "calc(15% + 1px)", right: `-${o2 - 1}px`, left: "auto", bottom: "auto", transform: "translate(100%, 0) rotate(-45deg)" }, leftEnd: { top: "auto", right: `-${o2 - 1}px`, left: "auto", bottom: "calc(15% + 1px)", transform: "translate(100%, 0) rotate(-45deg)" }, right: { top: "50%", right: "auto", left: `-${o2 - 1}px`, bottom: "auto", transform: "translate(-100%, -50%) rotate(135deg)" }, rightStart: { top: "calc(15% + 1px)", right: "auto", left: `-${o2 - 1}px`, bottom: "auto", transform: "translate(-100%, 0) rotate(135deg)" }, rightEnd: { top: "auto", right: "auto", left: `-${o2 - 1}px`, bottom: "calc(15% + 1px)", transform: "translate(-100%, 0) rotate(135deg)" } };
  return e2[t2] || e2.top;
};
const N$1 = "nextui-tooltip", b$6 = ({ children: t2, parent: c2, visible: b2, offset: j2, placement: y2, rounded: k2, animated: A2, className: P2, hideArrow: T2, css: z2, ...C2 }) => {
  const E2 = o$b("tooltip"), I2 = reactExports.useRef(null), [S2, q2] = reactExports.useState(defaultTooltipPlacement);
  if (!c2)
    return null;
  const B2 = () => {
    const t3 = getPlacement(y2, getRect(c2), j2);
    q2(t3);
  }, { transform: D2, top: F2, left: G2, right: H2, bottom: J2 } = reactExports.useMemo(() => getIconPlacement(y2, 5), [y2]);
  e$j(B2), e$g(() => B2()), reactExports.useEffect(() => {
    B2();
  }, [b2]);
  const K2 = reactExports.useMemo(() => b2 ? "open" : "closed", [b2]);
  return E2 ? reactDomExports.createPortal(jsxRuntimeExports.jsx(m$7, { enterTime: 20, leaveTime: 20, name: `${N$1}-wrapper`, visible: b2, children: jsxRuntimeExports.jsx(StyledTooltipContent, { ref: I2, animated: A2, className: a$9(`${N$1}-content`, `${N$1}--${K2}`, P2), css: { left: S2.left, top: `calc(${S2.top} + 6px)`, transform: S2.transform, [`&.${N$1}-wrapper-enter-active`]: { opacity: 1, top: S2.top }, ...z2 }, "data-state": K2, onClick: (t3) => {
    t3.stopPropagation(), t3.nativeEvent.stopImmediatePropagation();
  }, ...C2, children: jsxRuntimeExports.jsxs(StyledTooltip, { className: a$9(N$1, { [`${N$1}--with-arrow`]: !T2 }), "data-state": K2, hideArrow: T2, role: "tooltip", children: [jsxRuntimeExports.jsx(StyledTooltipArrow, { className: `${N$1}-arrow`, css: { left: G2, top: F2, right: H2, bottom: J2, transform: D2 } }), t2] }) }) }), E2) : null;
};
b$6.toString = () => ".nextui-tooltip-content";
const l$8 = n$a(b$6, { placement: "top", offset: 12, className: "" });
const m$6 = ({ children: e2, initialVisible: r2, content: m2, offset: u2, placement: d2, portalClassName: p2, enterDelay: f2, leaveDelay: h2, trigger: w2, rounded: b2, animated: C2, shadow: g2, className: v2, color: x2, contentColor: k2, onVisibleChange: y2, hideArrow: D2, css: N2, triggerCss: j2, onClick: M2, keepMounted: V2, visible: A2, isDisabled: T2, ...B2 }) => {
  const E2 = reactExports.useRef(), F2 = reactExports.useRef(null), [I2, K2] = reactExports.useState(r2), L2 = { animated: C2, visible: I2, css: N2, shadow: g2, offset: u2, placement: d2, rounded: b2, color: x2, contentColor: k2, hideArrow: D2, parent: F2, className: p2 }, S2 = (e3) => {
    const o2 = () => {
      clearTimeout(E2.current), E2.current = void 0;
    }, t2 = (e4) => {
      K2(e4), y2(e4), o2();
    };
    o2(), E2.current = e3 ? window.setTimeout(() => t2(true), f2) : window.setTimeout(() => t2(false), h2);
  }, U2 = (e3) => {
    "hover" === w2 && S2(e3);
  };
  return a$a(F2, () => "click" === w2 && !V2 && S2(false)), reactExports.useEffect(() => {
    void 0 !== A2 && S2(A2);
  }, [A2]), jsxRuntimeExports.jsxs(StyledTooltipTrigger, { ref: F2, className: `nextui-tooltip-button ${v2}`, css: j2, role: "button", tabIndex: -1, onBlur: () => U2(false), onClickCapture: () => {
    "click" === w2 && S2(!I2), null == M2 || M2();
  }, onFocus: () => U2(true), onKeyUp: () => U2(true), onMouseEnter: () => U2(true), onMouseLeave: () => U2(false), ...B2, children: [e2, m2 && !T2 ? jsxRuntimeExports.jsx(l$8, { ...L2, children: m2 }) : null] });
};
m$6.toString = () => ".nextui-tooltip";
const o$5 = n$a(m$6, { initialVisible: false, hideArrow: false, animated: true, shadow: true, rounded: false, keepMounted: false, isDisabled: false, trigger: "hover", enterDelay: 0, leaveDelay: 0, className: "", portalClassName: "", onVisibleChange: () => {
} });
const a$5 = keyframes$1({ "0%": { opacity: "0.2" }, "20%": { opacity: 1 }, "100%": { opacity: "0.2" } }), e$a = keyframes$1({ "0%": { transform: "rotate(0deg)" }, "100%": { transform: "rotate(360deg)" } }), n$7 = keyframes$1({ "0%": { transform: "translate(0px, 0px)" }, "50%": { transform: "translate(0, calc(-$$loadingSize * 1.4))" }, "100%": { transform: "translate(0px, 0px)" } }), t$a = keyframes$1({ "0%": { opacity: 1 }, "100%": { opacity: 0.15 } });
const StyledLoadingContainer = styled$3("div", { d: "inline-flex", fd: "column", ai: "center", position: "relative", variants: { color: { currentColor: { $$loadingColor: "currentColor" }, white: { $$loadingColor: "$colors$white" }, default: { $$loadingColor: "$colors$primary" }, primary: { $$loadingColor: "$colors$primary" }, secondary: { $$loadingColor: "$colors$secondary" }, success: { $$loadingColor: "$colors$success" }, warning: { $$loadingColor: "$colors$warning" }, error: { $$loadingColor: "$colors$error" } }, textColor: { white: { $$loadingTextColor: "$colors$white" }, default: { $$loadingTextColor: "$colors$text" }, primary: { $$loadingTextColor: "$colors$primary" }, secondary: { $$loadingTextColor: "$colors$secondary" }, success: { $$loadingTextColor: "$colors$success" }, warning: { $$loadingTextColor: "$colors$warning" }, error: { $$loadingTextColor: "$colors$error" } } }, defaultVariants: { color: "default", textColor: "default" } });
const StyledSpinnerContainer = styled$3("div", { size: "100%", position: "relative", left: "50%", top: "50%" });
const StyledSpinner = styled$3("div", { d: "flex", fd: "column", jc: "center", ai: "center", position: "relative", variants: { size: { xs: { size: "$6" }, sm: { size: "$8" }, md: { size: "$9" }, lg: { size: "$11" }, xl: { size: "$12" } } } });
const StyledSpinnerSpan = styled$3("span", { bg: "$$loadingColor", position: "absolute", top: "-3.9%", width: "24%", height: "8%", left: "-10%", br: "$lg", animation: `${t$a} 1.2s linear 0s infinite normal none running`, "&:nth-child(1)": { animationDelay: "-1.2s", transform: "rotate(0deg) translate(146%)" }, "&:nth-child(2)": { animationDelay: "-1.1s", transform: "rotate(30deg) translate(146%)" }, "&:nth-child(3)": { animationDelay: "-1s", transform: "rotate(60deg) translate(146%)" }, "&:nth-child(4)": { animationDelay: "-0.9s", transform: "rotate(90deg) translate(146%)" }, "&:nth-child(5)": { animationDelay: "-0.8s", transform: "rotate(120deg) translate(146%)" }, "&:nth-child(6)": { animationDelay: "-0.7s", transform: "rotate(150deg) translate(146%)" }, "&:nth-child(7)": { animationDelay: "-0.6s", transform: "rotate(180deg) translate(146%)" }, "&:nth-child(8)": { animationDelay: "-0.5s", transform: "rotate(210deg) translate(146%)" }, "&:nth-child(9)": { animationDelay: "-0.4s", transform: "rotate(240deg) translate(146%)" }, "&:nth-child(10)": { animationDelay: "-0.3s", transform: "rotate(270deg) translate(146%)" }, "&:nth-child(11)": { animationDelay: "-0.2s", transform: "rotate(300deg) translate(146%)" }, "&:nth-child(12)": { animationDelay: "-0.1s", transform: "rotate(330deg) translate(146%)" } });
const StyledLoading = styled$3("span", { position: "absolute", top: 0, left: 0, right: 0, bottom: 0, size: "100%", dflex: "center", bgColor: "transparent", us: "none", variants: { size: { xs: { $$loadingSize: "$space$8", $$loadingBorder: "$space$1" }, sm: { $$loadingSize: "$space$10", $$loadingBorder: "$space$1" }, md: { $$loadingSize: "$space$12", $$loadingBorder: "calc($space$1 * 1.5)" }, lg: { $$loadingSize: "$space$15", $$loadingBorder: "$space$2" }, xl: { $$loadingSize: "$space$18", $$loadingBorder: "$space$3" } }, type: { default: { d: "flex", br: "$rounded", position: "relative", size: "$$loadingSize", i: { top: "0px", size: "100%", position: "absolute", br: "inherit" }, "._1": { border: "$$loadingBorder solid $$loadingColor", borderTop: "$$loadingBorder solid transparent", borderLeft: "$$loadingBorder solid transparent", borderRight: "$$loadingBorder solid transparent", animation: `${e$a} 0.8s ease infinite` }, "._2": { border: "$$loadingBorder dotted $$loadingColor", borderTop: "$$loadingBorder solid transparent", borderLeft: "$$loadingBorder solid transparent", borderRight: "$$loadingBorder solid transparent", animation: `${e$a} 0.8s linear infinite`, opacity: 0.5 }, "._3": { display: "none" } }, points: { d: "flex", position: "relative", transform: "translate(0, calc($$loadingSize * 0.6))", i: { size: "$$loadingSize", margin: "0 3px", bg: "$$loadingColor" }, "._1": { br: "$rounded", animation: `${n$7} 0.75s ease infinite` }, "._2": { br: "$rounded", animation: `${n$7} 0.75s ease infinite 0.25s` }, "._3": { br: "$rounded", animation: `${n$7} 0.75s ease infinite 0.5s` } }, "points-opacity": { d: "flex", position: "relative", i: { display: "inline-block", size: "$$loadingSize", br: "$rounded", bg: "$$loadingColor", margin: "0 1px", animation: `${a$5} 1.4s infinite both` }, "._2": { animationDelay: "0.2s" }, "._3": { animationDelay: "0.4s" } }, spinner: {}, gradient: { display: "flex", position: "relative", size: "$$loadingSize", "._1": { position: "absolute", size: "100%", border: "0px", animation: `${e$a} 1s linear infinite`, top: "0px", br: "$rounded", bg: "linear-gradient(0deg, $background 33%,$$loadingColor 100%)" }, "._2": { top: "2px", position: "absolute", size: "calc(100% - 4px)", border: "0px", bg: "$background", br: "$rounded" }, "._3": { display: "none" } } } }, compoundVariants: [{ size: "xs", type: "points-opacity", css: { $$loadingSize: "$space$1" } }, { size: "sm", type: "points-opacity", css: { $$loadingSize: "$space$2" } }, { size: "md", type: "points-opacity", css: { $$loadingSize: "$space$3" } }, { size: "lg", type: "points-opacity", css: { $$loadingSize: "$space$4" } }, { size: "xl", type: "points-opacity", css: { $$loadingSize: "$space$5" } }, { size: "xs", type: "points", css: { $$loadingSize: "$space$1" } }, { size: "sm", type: "points", css: { $$loadingSize: "$space$2" } }, { size: "md", type: "points", css: { $$loadingSize: "$space$3" } }, { size: "lg", type: "points", css: { $$loadingSize: "$space$4" } }, { size: "xl", type: "points", css: { $$loadingSize: "$space$5" } }], defaultVariants: { type: "default" } });
const StyledLoadingLabel = styled$3("label", { mt: "$1", color: "$$loadingTextColor", fontSize: "$$loadingSize", "*": { margin: 0 }, variants: { size: { xs: { fontSize: "$space$5", marginTop: "$2" }, sm: { fontSize: "$space$6", marginTop: "$3" }, md: { fontSize: "$base", marginTop: "$4" }, lg: { fontSize: "$space$10", marginTop: "$4" }, xl: { fontSize: "$space$11", marginTop: "$5" } } } });
const l$7 = ({ children: r2, size: l2, color: c2, textColor: m2, className: p2, ...x2 }) => {
  const d2 = Array.isArray(r2) ? (null == r2 ? void 0 : r2.length) > 1 && void 0 !== r2[0] : void 0 !== r2, u2 = r2 && d2 ? "" : "Loading";
  return jsxRuntimeExports.jsxs(StyledSpinner, { className: a$9("nextui-spinner", p2), color: c2, size: l2, ...x2, children: [jsxRuntimeExports.jsx(StyledSpinnerContainer, { "aria-label": u2, className: "nextui-spinner-container", children: [...new Array(12)].map((r3, e2) => jsxRuntimeExports.jsx(StyledSpinnerSpan, {}, `nextui-spinner-${e2}`)) }), r2 && jsxRuntimeExports.jsx(StyledLoadingLabel, { color: m2, size: l2, children: r2 })] });
};
l$7.toString = () => ".nextui-spinner";
const n$6 = l$7;
const c$g = ({ children: e2, size: r2, gradientBackground: c2, loadingCss: d2, type: u2, ...g2 }) => {
  const p2 = e2 ? "" : "Loading", f2 = reactExports.useMemo(() => {
    if ("gradient" === u2)
      return { "._2": { bg: c2 } };
  }, [u2]);
  return jsxRuntimeExports.jsx(StyledLoadingContainer, { ...g2, children: "spinner" === u2 ? jsxRuntimeExports.jsx(n$6, { size: r2, children: e2 }) : jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [jsxRuntimeExports.jsxs(StyledLoading, { "aria-label": p2, className: `nextui-loading nextui-loading-${u2}`, css: { ...d2, ...f2 }, size: r2, type: u2, children: [jsxRuntimeExports.jsx("i", { className: "_1" }), jsxRuntimeExports.jsx("i", { className: "_2" }), jsxRuntimeExports.jsx("i", { className: "_3" })] }), e2 && jsxRuntimeExports.jsx(StyledLoadingLabel, { className: "nextui-loading-label", size: r2, children: e2 })] }) });
};
c$g.toString = () => ".nextui-loading";
const d$9 = React.memo(c$g);
const e$9 = n$a(d$9, { size: "md", type: "default" });
const StyledText = styled$3("p", { variants: { weight: { hairline: { fontWeight: "$hairline" }, thin: { fontWeight: "$thin" }, light: { fontWeight: "$light" }, normal: { fontWeight: "$normal" }, medium: { fontWeight: "$medium" }, semibold: { fontWeight: "$semibold" }, bold: { fontWeight: "$bold" }, extrabold: { fontWeight: "$extrabold" }, black: { fontWeight: "$black" } } } }, cssHideShowIn);
const TextChild = React.forwardRef((t2, i2) => {
  const { children: m2, tag: d2, color: f2 = "default", transform: x2, size: a2, css: c2, ...n2 } = t2, p2 = useDOMRef(i2), u2 = reactExports.useMemo(() => isNormalColor(f2) ? "default" === f2 ? "$text" : `$${f2}` : f2, [f2]);
  return jsxRuntimeExports.jsx(StyledText, { ref: p2, as: d2, css: { color: u2, fontSize: a2, tt: x2, ...c2 }, ...n2, children: m2 });
});
TextChild.toString = () => ".nextui-text-child";
const i$3 = React.memo(TextChild);
const n$5 = (t2, e2, r2, o2) => {
  if (!t2.length)
    return e2;
  const l2 = t2.slice(1, t2.length);
  return jsxRuntimeExports.jsx(i$3, { size: r2, tag: t2[0], transform: o2, children: n$5(l2, e2, r2) });
};
const Text = React.forwardRef((t2, o2) => {
  const { h1: l2 = false, h2: m2 = false, h3: h2 = false, h4: a2 = false, h5: f2 = false, h6: c2 = false, b: x2 = false, small: p2 = false, i: d2 = false, span: u2 = false, del: b2 = false, em: g2 = false, blockquote: T2 = false, transform: j2 = "none", size: k2, children: y2, ...z2 } = t2, q2 = useDOMRef(o2), N2 = { h1: l2, h2: m2, h3: h2, h4: a2, h5: f2, h6: c2, blockquote: T2 }, O2 = { span: u2, small: p2, b: x2, em: g2, i: d2, del: b2 }, w2 = Object.keys(N2).filter((t3) => N2[t3]), I2 = Object.keys(O2).filter((t3) => O2[t3]), R2 = reactExports.useMemo(() => w2[0] ? w2[0] : I2[0] ? I2[0] : "p", [w2, I2]), S2 = I2.filter((t3) => t3 !== R2), U2 = reactExports.useMemo(() => S2.length ? n$5(S2, y2, k2, j2) : y2, [S2, y2, k2, j2]);
  return jsxRuntimeExports.jsx(i$3, { ref: q2, size: k2, tag: R2, transform: j2, ...z2, children: U2 });
});
Text.toString = () => ".nextui-text";
const t$9 = React.memo(Text);
const StyledSwitchContainer = styled$3("label", { WebkitTapHighlightColor: "transparent", d: "inline-block", verticalAlign: "center", whiteSpace: "nowrap", us: "none", transition: "$default", padding: "$1 0", position: "relative", cursor: "pointer", "@motion": { transition: "none" }, variants: { color: { default: { $$switchColor: "$colors$primary", $$switchColorShadow: "$colors$primaryShadow", $$switchColorHover: "$colors$primarySolidHover" }, primary: { $$switchColor: "$colors$primary", $$switchColorShadow: "$colors$primaryShadow", $$switchColorHover: "$colors$primarySolidHover" }, secondary: { $$switchColor: "$colors$secondary", $$switchColorShadow: "$colors$secondaryShadow", $$switchColorHover: "$colors$secondarySolidHover" }, success: { $$switchColor: "$colors$success", $$switchColorShadow: "$colors$successShadow", $$switchColorHover: "$colors$successSolidHover" }, warning: { $$switchColor: "$colors$warning", $$switchColorShadow: "$colors$warningShadow", $$switchColorHover: "$colors$warningSolidHover" }, error: { $$switchColor: "$colors$error", $$switchColorShadow: "$colors$errorShadow", $$switchColorHover: "$colors$errorSolidHover" } }, size: { xs: { $$switchWidth: "$space$12", $$switchHeight: "$space$9", width: " $$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, sm: { $$switchWidth: "$space$14", $$switchHeight: "$space$10", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, md: { $$switchWidth: "$space$15", $$switchHeight: "$space$11", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, lg: { $$switchWidth: "$space$17", $$switchHeight: "$space$12", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, xl: { $$switchWidth: "$space$18", $$switchHeight: "$space$13", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" } }, borderWeight: { light: { $$switchBorderW: "$borderWeights$light" }, normal: { $$switchBorderW: "$borderWeights$normal" }, bold: { $$switchBorderW: "$borderWeights$bold" }, extrabold: { $$switchBorderW: "$borderWeights$extrabold" }, black: { $$switchBorderW: "$borderWeights$black" } }, disabled: { true: { cursor: "not-allowed" } }, animated: { false: { transition: "none" } } }, defaultVariants: { color: "default", size: "md", borderWeight: "normal" } });
const StyledSwitchCircle = styled$3("span", { position: "absolute", display: "flex", size: "calc($$switchHeight * 0.7)", jc: "center", ai: "center", top: "calc(50% - $$switchHeight * 0.35)", left: "0", transition: "transform 0.25s ease, width 0.2s ease", bg: "$background", br: "$pill", "& svg": { bg: "transparent", size: "calc($$switchHeight * 0.44)" }, "@motion": { transition: "none" } });
const StyledSwitch = styled$3("div", { opacity: 1, width: "$$switchWidth", height: "$$switchHeight", transition: "$default", position: "relative", overflow: "hidden", padding: 0, br: "$pill", bg: "$accents2", "@motion": { transition: "none" }, variants: { checked: { true: { bg: "$$switchColor", "&:hover:not(&:active)": { bg: "$$switchColorHover" } } }, bordered: { true: { bg: "transparent", border: "$$switchBorderW solid $border", "&:hover": { borderColor: "$$switchColor" }, [`& ${StyledSwitchCircle}`]: { bg: "$accents2" } } }, squared: { true: { br: "2px", [`& ${StyledSwitchCircle}`]: { br: "2px" } } }, shadow: { true: {} }, disabled: { true: { borderColor: "$accents2", bg: "$accents2", [`& ${StyledSwitchCircle}`]: { bg: "$accents4" } } }, animated: { true: { "&:active": { [`& ${StyledSwitchCircle}`]: { width: "calc($$switchHeight * 0.7 + ($$switchWidth / 10))" } } }, false: { transition: "none", [`& ${StyledSwitchCircle}`]: { transition: "none" } } } }, compoundVariants: [{ checked: true, disabled: true, css: { bg: "$accents3", [`& ${StyledSwitchCircle}`]: { bg: "$accents0" }, "&:hover:not(&:active)": { bg: "$accents4" } } }, { shadow: true, checked: true, css: { normalShadowVar: "$$switchColorShadow" } }, { checked: true, bordered: true, css: { bg: "$$switchColor", border: "$$switchBorderW solid transparent", "&:hover:not(&:active)": { borderColor: "transparent" }, [`& ${StyledSwitchCircle}`]: { bg: "$background" } } }] }, sharedFocus);
const StyledSwitchInput = styled$3("input", { [`& + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 15))" }, [`&:checked + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 15 - $$switchHeight * 0.7))" }, variants: { animated: { true: { [`& + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 7.5))" }, [`&:checked + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 7.5 - $$switchWidth / 10 - $$switchHeight * 0.7))" } } }, bordered: { true: { [`& + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 15 - $$switchBorderW / 2))" }, [`&:checked + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 15 - $$switchBorderW * 1.5 - $$switchHeight * 0.7))" } } } }, compoundVariants: [{ animated: true, bordered: true, css: { [`& + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 7.5 - $$switchBorderW / 2))" }, [`&:checked + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 7.5 - $$switchWidth / 10 - $$switchBorderW * 1.5 - $$switchHeight * 0.7))" } } }] }, sharedVisuallyHidden);
const k$2 = "nextui-switch", x$1 = ({ initialChecked: e2, checked: r2, disabled: x2, onChange: v2, squared: w2, bordered: g2, shadow: $2, icon: D2, iconOn: j2, iconOff: C2, animated: O2, preventDefault: q2, name: y2, ...E2 }) => {
  const [N2, S2] = reactExports.useState(e2);
  D2 && __DEV__ && (j2 || C2) && warn('Remove props "icon" if iconOn or iconOff exists.', "Switch");
  const B2 = reactExports.useCallback((e3) => {
    if (x2)
      return;
    const t2 = { target: { checked: !N2 }, stopPropagation: e3.stopPropagation, preventDefault: e3.preventDefault, nativeEvent: e3 };
    S2(!N2), v2 && v2(t2);
  }, [x2, N2, v2]), { bindings: I2 } = o$9((e3) => {
    B2(e3);
  }, [KeyCode.Enter, KeyCode.Space], { disableGlobalEvent: true, preventDefault: q2 }), P2 = reactExports.useMemo(() => {
    const e3 = D2 || j2 || C2, t2 = Boolean(j2), a2 = Boolean(C2);
    return e3 ? t2 && N2 ? j2 : a2 && !N2 ? C2 : e3 : null;
  }, [N2, D2, j2, C2]);
  reactExports.useEffect(() => {
    void 0 !== r2 && S2(r2);
  }, [r2]);
  const G2 = reactExports.useMemo(() => N2 ? "checked" : "unchecked", [N2]);
  return jsxRuntimeExports.jsxs(StyledSwitchContainer, { animated: O2, "data-state": G2, disabled: x2, ...E2, children: [jsxRuntimeExports.jsx(StyledSwitchInput, { animated: O2, bordered: g2, checked: N2, className: a$9(`${k$2}-input`), "data-state": G2, disabled: x2, tabIndex: -1, type: "checkbox", onChange: B2, name: y2 }), jsxRuntimeExports.jsx(StyledSwitch, { animated: O2, "aria-checked": N2, "aria-disabled": x2, bordered: g2, checked: N2, className: a$9(k$2, `${k$2}--${G2}`, { [`${k$2}-checked`]: N2, [`${k$2}-disabled`]: x2 }), "data-state": G2, disabled: x2, role: "switch", shadow: $2, squared: w2, tabIndex: x2 ? -1 : 0, ...I2, children: jsxRuntimeExports.jsx(StyledSwitchCircle, { className: `${k$2}-circle`, children: P2 }) })] });
};
x$1.toString = () => ".nextui-switch";
const v$2 = React.memo(x$1);
const t$8 = n$a(v$2, { disabled: false, bordered: false, shadow: false, squared: false, animated: true, preventDefault: true, initialChecked: false });
const a$4 = ({ size: e2, fill: i2, plain: a2, width: l2, height: s2, className: o2, ...h2 }) => jsxRuntimeExports.jsx("svg", a2 ? { className: o2, fill: "none", height: e2 || s2, stroke: i2, strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, viewBox: "0 0 24 24", width: e2 || l2, ...h2, children: jsxRuntimeExports.jsx("path", { d: "M18 6L6 18M6 6l12 12" }) } : { className: o2, height: e2 || s2, viewBox: "0 0 24 24", width: e2 || l2, ...h2, children: jsxRuntimeExports.jsx("path", { d: "M12 2a10 10 0 1010 10A10.016 10.016 0 0012 2zm3.36 12.3a.754.754 0 010 1.06.748.748 0 01-1.06 0l-2.3-2.3-2.3 2.3a.748.748 0 01-1.06 0 .754.754 0 010-1.06l2.3-2.3-2.3-2.3A.75.75 0 019.7 8.64l2.3 2.3 2.3-2.3a.75.75 0 011.06 1.06l-2.3 2.3z", fill: i2 }) }), l$6 = reactExports.memo(a$4);
const c$f = n$a(l$6, { width: 24, height: 24, plain: false, className: "" });
const o$4 = keyframes$1({ "0%": { transform: "scale(1)" }, "60%": { transform: "scale($$paginationScaleTransform)" }, "100%": { transform: "scale(1)" } });
const StyledPaginationEllipsis = styled$3("svg", { color: "currentColor", stroke: "currentColor", variants: { isEllipsis: { true: { transform: "0deg" } }, isBefore: { true: {} } }, compoundVariants: [{ isEllipsis: true, isBefore: true, css: { transform: "rotate(180deg)" } }] });
const StyledPaginationIcon = styled$3("svg", { transform: "rotate(180deg)", variants: { isPrev: { true: { transform: "rotate(0deg)" } } } });
const StyledPaginationItemContent = styled$3("span", { position: "relative", display: "inline-flex", alignItems: "center", top: 0, left: 0, zIndex: "$2" });
const StyledPaginationItem = styled$3("button", { border: "none", position: "relative", display: "inline-flex", margin: "0 $$paginationItemMargin", ai: "center", jc: "center", padding: 0, boxSizing: "border-box", tt: "capitalize", us: "none", whiteSpace: "nowrap", ta: "center", verticalAlign: "middle", bs: "none", outline: "none", height: "$$paginationSize", minWidth: "$$paginationSize", fs: "inherit", cursor: "pointer", br: "$$paginationItemRadius", color: "$text", bg: "$accents0", "@motion": { transition: "none" }, "&:hover": { bg: "$accents1" }, [`& ${StyledPaginationIcon}`]: { size: "$$paginationFontSize" }, [`& ${StyledPaginationEllipsis}`]: { size: "$$paginationFontSize" }, variants: { active: { true: { fontWeight: "$bold", cursor: "default", boxShadow: "$sm", [`& ${StyledPaginationItemContent}`]: { color: "$white" } } }, disabled: { true: { color: "$accents5", cursor: "not-allowed" } }, bordered: { true: { bg: "transparent", border: "$$paginationItemBorderWeight solid $accents2" } }, onlyDots: { true: {} }, preserveContent: { true: {} }, animated: { true: { transition: "transform 0.25s ease 0s, background 0.25s ease 0s, box-shadow 0.25s ease 0s" }, false: { transition: "none" } } }, compoundVariants: [{ onlyDots: true, preserveContent: false, css: { [`& ${StyledPaginationItemContent}`]: { display: "none" } } }, { animated: true, disabled: false, active: false, css: { "&:active": { transform: "scale($$paginationScaleTransform)", fs: "calc($$paginationFontSize * 0.9)" } } }] }, sharedFocus);
const StyledPaginationHighlight = styled$3("div", { position: "absolute", contain: "strict", top: "0px", zIndex: "$1", bg: "$$paginationColor", br: "$$paginationItemRadius", height: "$$paginationSize", minWidth: "$$paginationSize", animationName: `${o$4}`, animationDirection: "normal", "&.nextui-pagination-highlight--moving": { transform: "scale($$paginationScaleTransform)" }, "@motion": { transition: "none", "&.nextui-pagination-highlight--moving": { transform: "scale(1)" } }, variants: { animated: { true: { animationDuration: "350ms", animationTimingFunction: "ease", transition: "left 350ms ease 0s, transform 300ms ease 0s" }, false: { animationDuration: "none", animationTimingFunction: "none", transition: "none", "&.nextui-pagination-highlight--moving": { transform: "scale(1)" } } }, noMargin: { true: { br: "$squared" } }, rounded: { true: {} }, shadow: { true: { normalShadowVar: "$$paginationShadowColor" } } }, compoundVariants: [{ rounded: true, noMargin: true, css: { br: "$pill" } }] });
const StyledPagination = styled$3("nav", { m: 0, p: 0, d: "inline-flex", position: "relative", fontVariant: "tabular-nums", fontFeatureSettings: "tnum", variants: { color: { default: { $$paginationColor: "$colors$primary", $$paginationShadowColor: "$colors$primaryShadow" }, primary: { $$paginationColor: "$colors$primary", $$paginationShadowColor: "$colors$primaryShadow" }, secondary: { $$paginationColor: "$colors$secondary", $$paginationShadowColor: "$colors$secondaryShadow" }, success: { $$paginationColor: "$colors$success", $$paginationShadowColor: "$colors$successShadow" }, warning: { $$paginationColor: "$colors$warning", $$paginationShadowColor: "$colors$warningShadow" }, error: { $$paginationColor: "$colors$error", $$paginationShadowColor: "$colors$errorShadow" }, gradient: { $$paginationColor: "$colors$gradient", $$paginationShadowColor: "$colors$primaryShadow" } }, size: { xs: { $$paginationWidth: "$space$10", $$paginationFontSize: "$space$5", fs: "$$paginationFontSize" }, sm: { $$paginationWidth: "$space$12", $$paginationFontSize: "$space$6", fs: "$$paginationFontSize" }, md: { $$paginationWidth: "$space$13", $$paginationFontSize: "$space$7", fs: "$$paginationFontSize" }, lg: { $$paginationWidth: "$space$14", $$paginationFontSize: "$space$8", fs: "$$paginationFontSize" }, xl: { $$paginationWidth: "$space$15", $$paginationFontSize: "$space$9", fs: "$$paginationFontSize" } }, borderWeight: { light: { $$paginationItemBorderWeight: "$borderWeights$light" }, normal: { $$paginationItemBorderWeight: "$borderWeights$normal" }, bold: { $$paginationItemBorderWeight: "$borderWeights$bold" }, extrabold: { $$paginationItemBorderWeight: "$borderWeights$extrabold" }, black: { $$paginationItemBorderWeight: "$borderWeights$black" } }, bordered: { true: {} }, onlyDots: { true: { $$paginationSize: "calc($$paginationWidth / 2)", $$paginationItemRadius: "$radii$pill", $$paginationScaleTransform: 1.05 }, false: { $$paginationSize: "$$paginationWidth", $$paginationScaleTransform: 1.1 } }, rounded: { true: { $$paginationItemRadius: "$radii$pill" }, false: { $$paginationItemRadius: "$radii$squared" } }, noMargin: { true: { $$paginationItemRadius: "0px", $$paginationItemMargin: "0", [`& ${StyledPaginationItem}:first-of-type`]: { btlr: "$squared", bblr: "$squared" }, [`& ${StyledPaginationItem}:last-of-type`]: { btrr: "$squared", bbrr: "$squared" } }, false: { $$paginationItemMargin: "$space$1" } } }, compoundVariants: [{ bordered: true, noMargin: true, css: { [`& ${StyledPaginationItem}:not(:last-child)`]: { borderRight: 0 } } }, { noMargin: true, rounded: true, css: { $$paginationItemRadius: "0px" } }, { rounded: false, noMargin: true, css: { $$paginationItemRadius: "0px" } }], defaultVariants: { color: "default", size: "md", borderWeight: "normal", onlyDots: false, noMargin: false, rounded: false } });
const l$5 = (e2) => {
  if (e2)
    switch (e2) {
      case DOTS:
        return "dots element";
      case "<":
        return "previous page button";
      case ">":
        return "next page button";
      case "first":
        return "first page button";
      case "last":
        return "last page button";
      default:
        return `${e2} item`;
    }
}, c$e = "nextui-pagination-item", d$8 = ({ active: e2, value: r2, children: a2, disabled: d2, animated: m2, bordered: u2, onClick: p2, onlyDots: b2, preserveContent: f2, ...v2 }) => {
  const g2 = reactExports.useMemo(() => e2 ? `${l$5(r2)} active` : l$5(r2), [r2, e2]);
  return jsxRuntimeExports.jsx(StyledPaginationItem, { active: e2, animated: m2, "aria-label": g2, bordered: u2, className: a$9(c$e, { [`${c$e}-active`]: e2, [`${c$e}-animated`]: m2, [`${c$e}-disabled`]: d2, [`${c$e}-bordered`]: u2, [`${c$e}-only-dots`]: b2, [`${c$e}-preserve-content`]: f2 }), disabled: d2, onlyDots: b2, preserveContent: f2, tabIndex: d2 ? -1 : 0, onClick: (e3) => {
    d2 || p2 && p2(e3);
  }, ...v2, children: jsxRuntimeExports.jsx(StyledPaginationItemContent, { className: `${c$e}-content`, children: a2 }) });
};
d$8.toString = () => ".nextui-pagination-item";
const r$8 = n$a(d$8, { preserveContent: false });
const s$2 = ({ value: e2, isBefore: s2, onlyDots: l2, animated: c2, bordered: a2, onClick: d2 }) => {
  const [p2, m2] = reactExports.useState(false);
  return jsxRuntimeExports.jsx(r$8, { animated: c2, bordered: a2, onlyDots: l2, value: e2, onClick: (e3) => d2 && d2(e3), onMouseEnter: () => m2(true), onMouseLeave: () => m2(false), children: jsxRuntimeExports.jsxs(StyledPaginationEllipsis, p2 ? { className: "nextui-pagination-ellipsis", fill: "none", focusable: "false", isBefore: s2, isEllipsis: true, role: "presentation", shapeRendering: "geometricPrecision", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", viewBox: "0 0 24 24", children: [jsxRuntimeExports.jsx("path", { d: "M13 17l5-5-5-5" }), jsxRuntimeExports.jsx("path", { d: "M6 17l5-5-5-5" })] } : { fill: "none", isBefore: s2, isEllipsis: false, shapeRendering: "geometricPrecision", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", viewBox: "0 0 24 24", children: [jsxRuntimeExports.jsx("circle", { cx: "12", cy: "12", fill: "currentColor", r: "1" }), jsxRuntimeExports.jsx("circle", { cx: "19", cy: "12", fill: "currentColor", r: "1" }), jsxRuntimeExports.jsx("circle", { cx: "5", cy: "12", fill: "currentColor", r: "1" })] }) });
};
const i$2 = ({ isPrev: o2, disabled: i2, onlyDots: r2, animated: a2, bordered: s2, onClick: l2, ...d2 }) => jsxRuntimeExports.jsx(r$8, { preserveContent: true, animated: a2, bordered: s2, disabled: i2, onlyDots: r2, value: o2 ? "<" : ">", onClick: (o3) => l2 && l2(o3), children: jsxRuntimeExports.jsx(StyledPaginationIcon, { className: "nextui-pagination-icon", fill: "none", focusable: "false", isPrev: o2, role: "presentation", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...d2, children: jsxRuntimeExports.jsx("path", { d: "M15.5 19l-7-7 7-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.5 }) }) });
i$2.toString = () => ".nextui-pagination-icon";
const r$7 = React.memo(i$2);
const d$7 = r$7;
const c$d = "nextui-pagination-highlight", m$5 = ({ active: i2, shadow: m2, noMargin: u2, rounded: g2, css: l2, ...p2 }) => {
  const [d2, x2] = reactExports.useState(i2), [f2, h2] = reactExports.useState("");
  reactExports.useEffect(() => {
    if (i2 !== d2) {
      x2(i2), h2(`${c$d}--moving`);
      const t2 = setTimeout(() => {
        h2(""), clearTimeout(t2);
      }, 350);
    }
  }, [i2]);
  const $2 = reactExports.useMemo(() => u2 ? `var(--nextui--paginationSize) * ${d2}` : `var(--nextui--paginationSize) * ${d2} + ${4 * d2 + 2}px`, [d2, u2]);
  return jsxRuntimeExports.jsx(StyledPaginationHighlight, { "aria-hidden": true, className: a$9(c$d, f2, { [`${c$d}--rounded`]: g2, [`${c$d}--active`]: i2, [`${c$d}--no-margin`]: u2, [`${c$d}--shadow`]: m2 }, p2.className), css: { left: "var(--nextui--paginationLeft)", ...l2 }, noMargin: u2, rounded: g2, shadow: m2, style: $3ef42575df84b30b$export$9d1611c77c2fe928$5({ "--nextui--paginationLeft": `calc(${$2})` }, (null == p2 ? void 0 : p2.style) || {}), ...p2 });
};
m$5.toString = () => ".nextui-pagination-highlight";
const l$4 = m$5;
const u$4 = "nextui-pagination", c$c = ({ page: o2, initialPage: t2, onlyDots: c2, total: f2, loop: b2, siblings: x2, boundaries: h2, shadow: $2, animated: y2, bordered: v2, dotsJump: D2, controls: P2, noMargin: C2, onChange: j2, rounded: k2, ...w2 }) => {
  const { range: M2, active: N2, setPage: O2, previous: J2, next: B2, first: I2, last: S2 } = n$b({ page: o2, initialPage: t2, siblings: c2 ? 10 : x2, boundaries: c2 ? 10 : h2, total: f2, onChange: j2 }), U2 = reactExports.useCallback((o3, i2) => {
    if (o3 === DOTS) {
      const n2 = i2 < M2.indexOf(N2);
      return jsxRuntimeExports.jsx(s$2, { animated: y2, bordered: v2, isBefore: n2, onlyDots: c2, value: o3, onClick: () => O2(n2 ? N2 - D2 >= 1 ? N2 - D2 : 1 : N2 + D2 <= f2 ? N2 + D2 : f2) }, `${u$4}-item-${o3}-${i2}`);
    }
    return jsxRuntimeExports.jsx(r$8, { active: o3 === N2, animated: y2, bordered: v2, onlyDots: c2, value: o3, onClick: () => o3 !== N2 && O2(o3), children: o3 }, `${u$4}-item-${o3}-${i2}`);
  }, [f2, c2, N2, v2, y2, O2]);
  return jsxRuntimeExports.jsxs(StyledPagination, { bordered: v2, className: a$9(u$4, { [`${u$4}--no-margin`]: C2, [`${u$4}--bordered`]: v2, [`${u$4}--shadow`]: $2, [`${u$4}--rounded`]: k2 }), noMargin: C2, onlyDots: c2, rounded: k2, ...w2, children: [P2 && jsxRuntimeExports.jsx(d$7, { isPrev: true, animated: y2, bordered: v2, disabled: !b2 && 1 === N2, onlyDots: c2, onClick: () => b2 && 1 === N2 ? S2() : J2() }), jsxRuntimeExports.jsx(l$4, { active: P2 ? M2.indexOf(N2) + 1 : M2.indexOf(N2), animated: y2, noMargin: C2, rounded: k2, shadow: $2 }), M2.map(U2), P2 && jsxRuntimeExports.jsx(d$7, { animated: y2, bordered: v2, disabled: !b2 && N2 === f2, onlyDots: c2, onClick: () => b2 && N2 === f2 ? I2() : B2() })] });
};
c$c.defaultProps = { shadow: false, controls: true, bordered: false, initialPage: 1, siblings: 1, boundaries: 1, dotsJump: 5, total: 1, loop: false, animated: true, onlyDots: false, noMargin: false, rounded: false }, c$c.toString = () => ".nextui-pagination";
const t$7 = React.memo(c$c);
const StyledInputMainContainer = styled$3("div", { $$inputColor: "$colors$accents0", $$inputTextColor: "$colors$text", $$inputPlaceholderColor: "$colors$accents6", $$inputShadow: "$shadows$sm", $$inputBorderColor: "$colors$border", $$inputHoverBorderColor: "$colors$foreground", $$inputLabelColor: "$$inputHoverBorderColor", display: "inline-flex", flexDirection: "column", justifyContent: "center", position: "relative", boxSizing: "border-box", WebkitBoxAlign: "center", variants: { color: { default: {}, primary: { $$inputHoverBorderColor: "$colors$primary", $$inputLabelColor: "$colors$primary" }, secondary: { $$inputHoverBorderColor: "$colors$secondary", $$inputLabelColor: "$colors$secondary" }, success: { $$inputHoverBorderColor: "$colors$success", $$inputLabelColor: "$colors$success" }, warning: { $$inputHoverBorderColor: "$colors$warning", $$inputLabelColor: "$colors$warning" }, error: { $$inputHoverBorderColor: "$colors$error", $$inputLabelColor: "$colors$error" } }, status: { default: {}, primary: { $$inputColor: "$colors$primaryLight", $$inputPlaceholderColor: "$colors$primaryLightContrast", $$inputTextColor: "$colors$primaryLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$primary" }, secondary: { $$inputColor: "$colors$secondaryLight", $$inputPlaceholderColor: "$colors$secondaryLightContrast", $$inputTextColor: "$colors$secondaryLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$secondary" }, success: { $$inputColor: "$colors$successLight", $$inputPlaceholderColor: "$colors$successLightContrast", $$inputTextColor: "$colors$successLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$success" }, warning: { $$inputColor: "$colors$warningLight", $$inputPlaceholderColor: "$colors$warningLightContrast", $$inputTextColor: "$colors$warningLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$warning" }, error: { $$inputColor: "$colors$errorLight", $$inputPlaceholderColor: "$colors$errorLightContrast", $$inputTextColor: "$colors$errorLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$error" } }, helperColor: { default: { $$inputHelperColor: "$colors$text" }, primary: { $$inputHelperColor: "$colors$primary" }, secondary: { $$inputHelperColor: "$colors$secondary" }, success: { $$inputHelperColor: "$colors$success" }, warning: { $$inputHelperColor: "$colors$warning" }, error: { $$inputHelperColor: "$colors$error" } }, borderWeight: { light: { $$inputBorderWeight: "$borderWeights$light" }, normal: { $$inputBorderWeight: "$borderWeights$normal" }, bold: { $$inputBorderWeight: "$borderWeights$bold" }, extrabold: { $$inputBorderWeight: "$borderWeights$extrabold" }, black: { $$inputBorderWeight: "$borderWeights$black" } }, size: { xs: { $$inputBorderRadius: "$space$3", $$inputFontSize: "$fontSizes$xs", $$inputHeightRatio: "1.2", br: "$$inputBorderRadius" }, sm: { $$inputBorderRadius: "$space$4", $$inputFontSize: "$fontSizes$xs", $$inputHeightRatio: "1.6", br: "$$inputBorderRadius" }, md: { $$inputBorderRadius: "$space$6", $$inputFontSize: "$fontSizes$sm", $$inputHeightRatio: "2", br: "$$inputBorderRadius" }, lg: { $$inputBorderRadius: "$space$7", $$inputFontSize: "$fontSizes$md", $$inputHeightRatio: "2.2", br: "$$inputBorderRadius" }, xl: { $$inputBorderRadius: "$space$8", $$inputFontSize: "$fontSizes$lg", $$inputHeightRatio: "2.6", br: "$$inputBorderRadius" } }, rounded: { true: { $$inputBorderRadius: "$radii$pill" } }, disabled: { true: { $$inputColor: "$colors$accents1", $$inputTextColor: "$colors$accents7", $$inputPlaceholderColor: "$colors$accents7", $$inputShadow: "$shadows$sm" } } } });
const t$6 = { WebkitTextFillColor: "$$inputTextColor", WebkitBackgroundClip: "text !important", caretColor: "$$inputTextColor" };
const StyledInputContainer = styled$3("div", { width: "100%", br: "$$inputBorderRadius", input: { "&:-webkit-autofill": { ...t$6, "&:hover": t$6, "&:focus": t$6, "&:active": t$6 } }, "@motion": { transition: "none" }, variants: { isTextarea: { false: { display: "inline-flex", alignItems: "center", height: "calc($$inputHeightRatio * $9)" } }, focused: { true: {} }, isReadOnly: { false: {} }, underlined: { true: {} }, animated: { true: { transition: "$default" }, false: { transition: "none" } } }, compoundVariants: [{ isReadOnly: false, underlined: true, css: { transform: "none" } }, { focused: true, animated: true, isReadOnly: false, underlined: false, css: { transform: "translateY(-$space$1)" } }] });
const StyledInput = styled$3("input", { padding: 0, fontSize: "$$inputFontSize", bg: "transparent", border: "none", color: "$$inputTextColor", br: 0, outline: "none", size: "100%", minWidth: 0, WebkitAppearance: "none", "::placeholder": { color: "$$inputPlaceholderColor", transition: "opacity 0.25s ease 0s", MozTransition: "opacity 0.25s ease 0s", MsTransition: "opacity 0.25s ease 0s", WebkitTransition: "opacity 0.25s ease 0s" }, "@motion": { transition: "none", "&::placeholder": { transition: "none" } }, "&:disabled": { pe: "none", color: "$accents4", cursor: "not-allowed" }, variants: { isTextarea: { true: { boxShadow: "none", display: "block", size: "100%", resize: "none", border: "none", outline: "none" } }, focused: { true: { "&::placeholder": { opacity: 0, transition: "opacity 0.25s ease 0s" } } }, bordered: { true: { padding: "0 $3" } }, rounded: { true: { padding: "0 $3" } }, animated: { false: { transition: "none", "::placeholder": { transition: "none" } } }, hasLeftContent: { true: { ml: 0 } }, hasRightContent: { true: { mr: 0 } } } });
const StyledInputWrapper = styled$3("div", { flex: 1, position: "relative", br: "$$inputBorderRadius", bg: "$$inputColor", display: "inline-flex", verticalAlign: "middle", alignItems: "center", userSelect: "none", "@motion": { transition: "none", "&:before": { transition: "none" }, "&:after": { transition: "none" } }, variants: { focused: { true: {} }, isReadOnly: { true: {} }, bordered: { true: { bg: "transparent", border: "none", boxShadow: "0 0 0 $$inputBorderWeight $$inputBorderColor", transition: "box-shadow 0.25s ease" } }, shadow: { true: { transition: "$default" } }, disabled: { true: { cursor: "not-allowed" } }, underlined: { true: { bg: "transparent", [`& ${StyledInput}`]: { margin: "$2 $3" }, "&:before": { content: "", position: "absolute", zIndex: "$2", width: 0, bottom: 0, height: "$1", left: "50%", transform: "translate(-50%)", background: "$$inputHoverBorderColor", transition: "width 0.25s ease" }, "&:after": { content: "", position: "absolute", zIndex: "$1", bottom: 0, width: "100%", height: "$$inputBorderWeight", bg: "$$inputBorderColor" } }, false: { [`& ${StyledInput}`]: { margin: "$2 $5" } } }, animated: { false: { transition: "none", "&:before": { transition: "none" }, "&:after": { transition: "none" } } }, isTextarea: { true: { boxSizing: "border-box", width: "100%", maxWidth: "100%", height: "auto" }, false: { height: "100%" } } }, compoundVariants: [{ bordered: true, underlined: true, css: { boxShadow: "0 0 0 0px $$inputBorderColor" } }, { focused: true, underlined: true, css: { "&:before": { width: "100%" } } }, { focused: true, shadow: true, isReadOnly: false, underlined: false, css: { boxShadow: "$$inputShadow" } }, { focused: true, bordered: true, isReadOnly: false, underlined: false, css: { boxShadow: "0 0 0 $$inputBorderWeight $$inputHoverBorderColor" } }, { bordered: true, isReadOnly: false, underlined: false, css: { "&:hover": { boxShadow: "0 0 0 $$inputBorderWeight $$inputHoverBorderColor" } } }, { isTextarea: true, underlined: false, css: { [`& ${StyledInput}`]: { margin: "$xs $sm" } } }] });
const StyledHelperTextContainer = styled$3("div", { position: "absolute", opacity: 0, bottom: "calc($$inputHeightRatio * -$space$5)", "@motion": { transition: "none" }, variants: { animated: { true: { transition: "opacity 0.25s ease" }, false: { transition: "none" } }, withValue: { true: { opacity: 1 } } } });
const StyledHelperText = styled$3("p", { margin: "$1 0 0 $5", fontSize: "$space$5", color: "$$inputHelperColor" });
const StyledInputPlaceholder = styled$3("span", {}, sharedVisuallyHidden);
const StyledInputBlockLabel = styled$3("label", { d: "block", fontWeight: "$normal", color: "$$inputLabelColor", p: "0 0 0 $2", mb: "$3", fs: "$$inputFontSize", lh: "$md", WebkitTouchCallout: "none", WebkitUserSelect: "none", KhtmlUserSelect: "none", MozUserSelect: "none", MsUserSelect: "none", us: "none", "> *:first-child": { marginTop: 0 }, "> *:last-child": { mb: 0 }, "@motion": { transition: "none" }, variants: { rounded: { true: { padding: "0 0 0 $3" } }, asPlaceholder: { true: { position: "absolute", padding: 0, zIndex: "$1", left: "$space$6", top: "20%", mb: 0, cursor: "text", color: "$$inputPlaceholderColor", transition: "left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s" } }, animated: { false: { transition: "none" } }, focused: { true: { color: "$$inputHoverBorderColor" } }, underlined: { true: {} }, withValue: { true: {} }, isTextarea: { true: {} }, bordered: { true: {} }, hasContentLeft: { true: {} } }, compoundVariants: [{ underlined: true, asPlaceholder: true, css: { left: "$space$2" } }, { asPlaceholder: true, focused: true, underlined: false, isTextarea: false, css: { top: "-72%", left: "$2", cursor: "inherit" } }, { asPlaceholder: true, focused: true, underlined: true, isTextarea: false, css: { top: "-72%", left: "0px", cursor: "inherit" } }, { asPlaceholder: true, withValue: true, underlined: false, isTextarea: false, css: { color: "$$inputTextColor", top: "-72%", left: "$2", cursor: "inherit" } }, { asPlaceholder: true, withValue: true, underlined: true, isTextarea: false, css: { color: "$$inputTextColor", top: "-72%", left: "0px", cursor: "inherit" } }, { asPlaceholder: true, isTextarea: true, css: { top: "$5" } }, { asPlaceholder: true, hasContentLeft: true, css: { left: "calc($space$6 + $$inputHeightRatio * $space$7)" } }, { asPlaceholder: true, isTextarea: true, focused: true, css: { top: "calc(-$space$10 - $space$3)", left: "$2" } }, { asPlaceholder: true, isTextarea: true, withValue: true, css: { top: "-$11" } }, { asPlaceholder: true, focused: true, isTextarea: true, bordered: true, css: { top: "-$12" } }], defaultVariants: { asPlaceholder: false } });
const StyledInputLabel = styled$3("span", { position: "relative", display: "inline-flex", width: "initial", height: "100%", fontWeight: "$medium", ai: "center", pe: "none", margin: 0, padding: "0 $sm", color: "$$inputPlaceholderColor", fontSize: "$$inputFontSize", lineHeight: "$xs", variants: { isRight: { true: { btrr: "$$inputBorderRadius", bbrr: "$$inputBorderRadius" }, false: { btlr: "$$inputBorderRadius", bblr: "$$inputBorderRadius" } }, isDark: { true: {} }, isDefaultStatus: { true: {} }, underlined: { true: { bg: "transparent" } }, bordered: { true: { "&:after": { display: "none" }, "&:before": { display: "none" } } } }, compoundVariants: [{ isRight: true, underlined: true, css: { borderLeftColor: "$$inputPlaceholderColor", borderLeftStyle: "solid", marginLeft: "$2", borderLeftWidth: "calc($$inputBorderWeight / 2)", height: "40%" } }, { isRight: false, underlined: true, css: { borderRightColor: "$$inputPlaceholderColor", borderRightStyle: "solid", marginRight: "$2", borderRightWidth: "calc($$inputBorderWeight / 1)", height: "40%" } }, { isDefaultStatus: true, bordered: false, underlined: false, css: { bg: "$accents2" } }, { isDefaultStatus: true, bordered: false, underlined: false, isDark: true, css: { color: "$accents6" } }, { isDefaultStatus: false, bordered: true, underlined: false, css: { bg: "$$inputColor" } }, { bordered: true, isRight: true, css: { peddingRight: "$sm", paddingLeft: 0 } }, { bordered: true, isRight: false, css: { peddingLeft: "$sm", paddingRight: 0 } }], defaultVariants: { isRight: false } });
const StyledInputContent = styled$3("span", { variants: { applyStyles: { true: { display: "flex", boxSizing: "content-box", width: "calc($$inputHeightRatio * $space$4)", height: "100%", alignItems: "center", verticalAlign: "center", margin: 0, padding: "0 calc($$inputHeightRatio * $3)", color: "$$inputTextColor", lineHeight: "$xs", position: "relative", cursor: "default", pe: "none" } }, clickable: { true: { cursor: "pointer", pe: "auto" } } } });
const StyledInputClearButton = styled$3("button", { position: "absolute", right: 0, margin: 0, d: "inline-flex", ai: "center", border: "none", bg: "transparent", width: "auto", height: "auto", cursor: "pointer", boxSizing: "border-box", transition: "color 250ms ease 0s, transform 250ms ease 0s, opacity 250ms ease 0s", color: "$$inputPlaceholderColor", visibility: "hidden", transform: "translateX(20%)", opacity: 0, "&:hover": { opacity: 0.85 }, svg: { color: "currentColor", size: "calc($space$5 * $$inputHeightRatio)" }, "@motion": { transition: "none" }, variants: { visible: { true: { visibility: "visible", transform: "translateX(0)", opacity: 1 } }, underlined: { true: { padding: "0 $1" } }, animated: { false: { transition: "none" } }, hasContentRight: { true: { padding: 0, position: "relative", transform: "translateX(30%)" } }, disabled: { true: { cursor: "not-allowed", "&:hover": { color: "$accents3" } } } } });
const StyledInputClearButtonIconWrapper = styled$3("span", { display: "flex", br: "100%" }, cssFocusVisible);
const defaultProps$1 = { disabled: false, bordered: false, readOnly: false, clearable: false, rounded: false, animated: true, underlined: false, shadow: true, fullWidth: false, contentClickable: false, contentRightStyling: true, contentLeftStyling: true, required: false, width: "initial", size: "md", color: "default", helperColor: "default", status: "default", borderWeight: "normal", autoComplete: "off", className: "", placeholder: "", initialValue: "" };
const R = "nextui-input", P = React.forwardRef(({ as: e2 = "input", label: k2, labelPlaceholder: P2, labelLeft: F2, labelRight: L2, size: B2, helperText: D2, color: T2, helperColor: V2, status: j2, contentLeft: O2, contentRight: W2, contentClickable: q2, contentLeftStyling: U2, contentRightStyling: z2, onContentClick: E2, initialValue: A2, onChange: G2, readOnly: H2, value: J2, onClearClick: K2, clearable: M2, shadow: Q2, animated: X2, required: Y2, width: Z2, className: _2, onBlur: ee2, onFocus: te2, autoComplete: ae2, placeholder: re2, fullWidth: le2, borderWeight: ne2, disabled: ie2, bordered: oe2, underlined: se2, rounded: de2, css: ce2, ...ue2 }, pe2) => {
  const me2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(pe2, () => me2.current);
  const [he2, fe2] = reactExports.useState(A2), [be2, $e2] = reactExports.useState(false), { isDark: ge2 } = e$h(), ye = reactExports.useMemo(() => void 0 !== J2, [J2]), Ce2 = reactExports.useMemo(() => k2 || P2, [k2, P2]), xe = reactExports.useMemo(() => P2 ? "" : re2, [re2, P2]), we2 = reactExports.useMemo(() => le2 ? "100%" : Z2 || "initial", [le2, Z2]);
  se2 && __DEV__ && (oe2 && warn("Using underlined and bordered at the same time will have no effect."), de2 && warn("Using underlined and rounded at the same time will have no effect."));
  const Ne2 = (e3, t2) => {
    ie2 || E2 && E2(e3, t2);
  };
  reactExports.useEffect(() => {
    ye && fe2(J2);
  }, [ye, J2]);
  const ve2 = reactExports.useMemo(() => "textarea" === e2, [e2]), ke2 = { ...ue2, ...ye ? { value: J2 } : { defaultValue: A2 } }, { isFocusVisible: Se2, focusProps: Ie2 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), { labelProps: Re2, fieldProps: Pe2 } = $d191a55c9702f145$export$8467354a121f1b9f({ ...ke2, label: Ce2 }), Fe2 = reactExports.useMemo(() => be2 ? "hover" : ie2 ? "disabled" : H2 ? "read-only" : he2 ? "with-value" : "normal", [be2, ie2, H2, he2]);
  return jsxRuntimeExports.jsxs(StyledInputMainContainer, { borderWeight: ne2, className: a$9(`${R}-main-container`, `${R}-main-container--${Fe2}`), color: T2, css: { width: we2, ...ce2 }, "data-state": Fe2, disabled: ie2, helperColor: V2, rounded: de2, size: B2, status: j2, children: [Ce2 && jsxRuntimeExports.jsx(StyledInputBlockLabel, { animated: X2, asPlaceholder: !!P2, bordered: oe2, className: `${R}-block-label`, focused: be2, hasContentLeft: !!O2, htmlFor: "htmlFor" in Re2 ? Re2.htmlFor : "", id: Re2.id, isTextarea: ve2, rounded: de2, underlined: se2, withValue: !!he2, children: Ce2 }), jsxRuntimeExports.jsx(StyledInputContainer, { animated: X2, className: a$9(`${R}-container`, `${R}-container--${Fe2}`, { [`${R}-container--input`]: !ve2, [`${R}-container--textarea`]: ve2, [`${R}-container--read-only`]: H2 }, _2), focused: be2, isReadOnly: H2, isTextarea: ve2, underlined: se2, children: jsxRuntimeExports.jsxs(StyledInputWrapper, { animated: X2, as: Ce2 ? "div" : "label", bordered: oe2, className: a$9(`${R}-wrapper`, `${R}-wrapper--${Fe2}`, { [`${R}-wrapper--bordered`]: oe2, [`${R}-wrapper--underlined`]: se2, [`${R}-wrapper--shadow`]: Q2 }), disabled: ie2, focused: be2, isReadOnly: H2, isTextarea: ve2, shadow: Q2, underlined: se2, children: [!Ce2 && re2 && jsxRuntimeExports.jsx(StyledInputPlaceholder, { className: `${R}-placeholder`, children: re2 }), F2 && jsxRuntimeExports.jsx(StyledInputLabel, { bordered: oe2, className: `${R}-label--left`, isDark: ge2, isDefaultStatus: "default" === j2, underlined: se2, children: F2 }), O2 && jsxRuntimeExports.jsx(StyledInputContent, { applyStyles: U2, className: a$9(`${R}-content`, `${R}-content--left`), clickable: q2, onClick: (e3) => Ne2("left", e3), children: O2 }), jsxRuntimeExports.jsx(StyledInput, { ref: me2, "aria-multiline": ve2, "aria-placeholder": xe, "aria-readonly": H2, "aria-required": Y2, as: e2, autoComplete: ae2, bordered: oe2, className: a$9({ [`${R}`]: !ve2, [`${R}-textarea`]: ve2, [`${R}-disabled`]: ie2, [`${R}-rounded`]: de2, [`${R}-${R}-right-content`]: W2, [`${R}-left-content`]: O2 }), "data-state": Fe2, disabled: ie2, focused: be2, hasLeftContent: !!O2, hasRightContent: !!W2, isTextarea: ve2, placeholder: xe, readOnly: H2, required: Y2, type: "text", onBlur: (e3) => {
    $e2(false), ee2 && ee2(e3);
  }, onChange: (e3) => {
    ie2 || H2 || (ye || fe2(e3.target.value), G2 && G2(e3));
  }, onFocus: (e3) => {
    $e2(true), te2 && te2(e3);
  }, ...ke2, ...Pe2 }), M2 && jsxRuntimeExports.jsx(StyledInputClearButton, { animated: X2, "aria-label": "clear", className: `${R}-clear-button`, disabled: ie2 || H2, hasContentRight: !!W2, lang: "en", type: "button", underlined: se2, visible: Boolean(he2), onClick: (e3) => {
    if (e3.preventDefault(), e3.stopPropagation(), e3.nativeEvent.stopImmediatePropagation(), ye || fe2(""), K2 && K2(e3), !me2.current)
      return;
    const t2 = ((e4, t3) => ({ ...t3, target: e4, currentTarget: e4 }))(me2.current, e3);
    t2.target.value = "", G2 && G2(t2), me2.current.focus();
  }, ...Ie2, children: jsxRuntimeExports.jsx(StyledInputClearButtonIconWrapper, { isFocusVisible: Se2, children: jsxRuntimeExports.jsx(c$f, { fill: "currentColor" }) }) }), W2 && jsxRuntimeExports.jsx(StyledInputContent, { applyStyles: z2, className: a$9(`${R}-content`, `${R}-content--right`), clickable: q2, onClick: (e3) => Ne2("right", e3), children: W2 }), L2 && jsxRuntimeExports.jsx(StyledInputLabel, { bordered: oe2, className: `${R}-label--right`, isDark: ge2, isDefaultStatus: "default" === j2, isRight: true, underlined: se2, children: L2 })] }) }), jsxRuntimeExports.jsx(StyledHelperTextContainer, { className: `${R}-helper-text-container`, withValue: !!D2, children: D2 && jsxRuntimeExports.jsx(StyledHelperText, { className: `${R}-helper-text`, children: D2 }) })] });
});
P.displayName = "NextUI.Input", P.defaultProps = defaultProps$1, P.toString = () => ".nextui-input";
const t$5 = P;
const i$1 = ({ visible: r2 }) => jsxRuntimeExports.jsx("svg", { className: "nextui-input-password-icon", fill: "none", height: "16", shapeRendering: "geometricPrecision", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", style: { color: "currentColor" }, viewBox: "0 0 24 24", width: "16", children: jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, r2 ? { children: [jsxRuntimeExports.jsx("path", { d: "M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24" }), jsxRuntimeExports.jsx("path", { d: "M1 1l22 22" })] } : { children: [jsxRuntimeExports.jsx("path", { d: "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" }), jsxRuntimeExports.jsx("circle", { cx: "12", cy: "12", r: "3" })] }) }), s$1 = React.memo(i$1);
const c$b = s$1;
const d$6 = { ...defaultProps$1, hideToggle: false, visibleIcon: jsxRuntimeExports.jsx(c$b, { visible: true }), hiddenIcon: jsxRuntimeExports.jsx(c$b, { visible: false }) }, u$3 = React.forwardRef(({ hideToggle: t2, visibleIcon: n2, hiddenIcon: l2, children: p2, ...c2 }, d2) => {
  const u2 = reactExports.useRef(null), [f2, h2] = reactExports.useState(false);
  reactExports.useImperativeHandle(d2, () => u2.current);
  const x2 = () => {
    h2((t3) => !t3);
  }, w2 = reactExports.useMemo(() => ({ ...c2, ref: u2, className: a$9("nextui-input-password", c2.className), contentClickable: true, onContentClick: x2, type: f2 ? "text" : "password" }), [c2, x2, f2, u2]), g2 = reactExports.useMemo(() => t2 ? null : f2 ? n2 : l2, [t2, f2, n2, l2]);
  return jsxRuntimeExports.jsx(t$5, { contentRight: g2, ...w2, children: p2 });
});
u$3.toString = () => ".nextui-input-password";
const e$8 = n$a(u$3, d$6);
t$5.Password = e$8;
function $c5a24bc478652b5f$export$1005530eda016c13$2(node2, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node2.key);
  return node2.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71$2(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2$2(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2$2(iterable, index2) {
  if (index2 < 0)
    return void 0;
  let i2 = 0;
  for (let item of iterable) {
    if (i2 === index2)
      return item;
    i2++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf$1(iterable) {
  let lastItem = void 0;
  for (let value of iterable)
    lastItem = value;
  return lastItem;
}
class $3041db3296945e6e$export$baf26146a414f24a {
  /**
  * Returns a copy of this point.
  */
  copy() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.x, this.y);
  }
  /**
  * Checks if two points are equal.
  */
  equals(point) {
    return this.x === point.x && this.y === point.y;
  }
  /**
  * Returns true if this point is the origin.
  */
  isOrigin() {
    return this.x === 0 && this.y === 0;
  }
  constructor(x2 = 0, y2 = 0) {
    this.x = x2;
    this.y = y2;
  }
}
class $60423f92c7f9ad87$export$c79fc6492f3af13d {
  /**
  * The maximum x-coordinate in the rectangle.
  */
  get maxX() {
    return this.x + this.width;
  }
  /**
  * The maximum y-coordinate in the rectangle.
  */
  get maxY() {
    return this.y + this.height;
  }
  /**
  * The area of the rectangle.
  */
  get area() {
    return this.width * this.height;
  }
  /**
  * The top left corner of the rectangle.
  */
  get topLeft() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.x, this.y);
  }
  /**
  * The top right corner of the rectangle.
  */
  get topRight() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.maxX, this.y);
  }
  /**
  * The bottom left corner of the rectangle.
  */
  get bottomLeft() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.x, this.maxY);
  }
  /**
  * The bottom right corner of the rectangle.
  */
  get bottomRight() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.maxX, this.maxY);
  }
  /**
  * Returns whether this rectangle intersects another rectangle.
  * @param rect - The rectangle to check.
  */
  intersects(rect) {
    return this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;
  }
  /**
  * Returns whether this rectangle fully contains another rectangle.
  * @param rect - The rectangle to check.
  */
  containsRect(rect) {
    return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;
  }
  /**
  * Returns whether the rectangle contains the given point.
  * @param point - The point to check.
  */
  containsPoint(point) {
    return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;
  }
  /**
  * Returns the first corner of this rectangle (from top to bottom, left to right)
  * that is contained in the given rectangle, or null of the rectangles do not intersect.
  * @param rect - The rectangle to check.
  */
  getCornerInRect(rect) {
    for (let key of [
      "topLeft",
      "topRight",
      "bottomLeft",
      "bottomRight"
    ]) {
      if (rect.containsPoint(this[key]))
        return key;
    }
    return null;
  }
  equals(rect) {
    return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;
  }
  pointEquals(point) {
    return this.x === point.x && this.y === point.y;
  }
  sizeEquals(size) {
    return this.width === size.width && this.height === size.height;
  }
  /**
  * Returns the union of this Rect and another.
  */
  union(other) {
    let x2 = Math.min(this.x, other.x);
    let y2 = Math.min(this.y, other.y);
    let width2 = Math.max(this.maxX, other.maxX) - x2;
    let height2 = Math.max(this.maxY, other.maxY) - y2;
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x2, y2, width2, height2);
  }
  /**
  * Returns the intersection of this Rect with another.
  * If the rectangles do not intersect, an all zero Rect is returned.
  */
  intersection(other) {
    if (!this.intersects(other))
      return new $60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);
    let x2 = Math.max(this.x, other.x);
    let y2 = Math.max(this.y, other.y);
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x2, y2, Math.min(this.maxX, other.maxX) - x2, Math.min(this.maxY, other.maxY) - y2);
  }
  /**
  * Returns a copy of this rectangle.
  */
  copy() {
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);
  }
  constructor(x2 = 0, y2 = 0, width2 = 0, height2 = 0) {
    this.x = x2;
    this.y = y2;
    this.width = width2;
    this.height = height2;
  }
}
let $3eb131dcf37ad5f8$var$perf = typeof window !== "undefined" ? window.performance : null;
let $3eb131dcf37ad5f8$var$perfNow = $3eb131dcf37ad5f8$var$perf && ($3eb131dcf37ad5f8$var$perf.now || $3eb131dcf37ad5f8$var$perf.webkitNow || $3eb131dcf37ad5f8$var$perf.msNow || $3eb131dcf37ad5f8$var$perf.mozNow);
$3eb131dcf37ad5f8$var$perfNow ? $3eb131dcf37ad5f8$var$perfNow.bind($3eb131dcf37ad5f8$var$perf) : function() {
  return Date.now ? Date.now() : (/* @__PURE__ */ new Date()).getTime();
};
const $704cf1d3b684cc5c$var$defaultContext$3 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
const $704cf1d3b684cc5c$var$SSRContext$3 = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext$3);
let $704cf1d3b684cc5c$var$canUseDOM$2 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $704cf1d3b684cc5c$var$componentIds$2 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter$2(isDisabled = false) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$3);
  let ref = reactExports.useRef(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds$2.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds$2.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds$2.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b26$2(defaultId) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$3);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext$3 && !$704cf1d3b684cc5c$var$canUseDOM$2)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter$2(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a273$1() {
  let cur = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$3);
  return cur.isSSR;
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$3 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$3 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37$2(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26$2(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap$3.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$3(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap$3.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629$2(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$3.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$3.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e$2(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928$2(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e$2(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629$2(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
const $65484d02dcb7eb3e$var$DOMPropNames$1 = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames$1 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$propRe$1 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f$1(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames$1.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames$1.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe$1.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$3())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$3(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$3(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$3 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$3() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$3 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$3 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$3 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$3;
}
function $7215afc6de606d6b$var$getScrollableElements$3(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$3(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$3 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$3 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$3() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$3.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$3.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$3.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$3.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$3.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$3)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$3.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$3();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$3);
}
function $bbed8b41f857bcc0$export$24490316f764c430$3(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$3.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$3.add(fn);
  });
}
function $4f58c5f72bcf79f7$export$496315a1608d9602$1(effect, dependencies) {
  const isInitialMount = reactExports.useRef(true);
  reactExports.useEffect(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else
      effect();
  }, dependencies);
}
function $62d8ded9296f3872$export$cfa2225e87938781$1(node2) {
  if ($62d8ded9296f3872$export$2bb74740c4e19def$1(node2))
    node2 = node2.parentElement;
  while (node2 && !$62d8ded9296f3872$export$2bb74740c4e19def$1(node2))
    node2 = node2.parentElement;
  return node2 || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$export$2bb74740c4e19def$1(node2) {
  let style2 = window.getComputedStyle(node2);
  return /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
}
let $ef06256079686ba0$var$descriptionId$2 = 0;
const $ef06256079686ba0$var$descriptionNodes$2 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1$2(description) {
  let [id2, setId] = reactExports.useState(void 0);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$3(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes$2.get(description);
    if (!desc) {
      let id3 = `react-aria-description-${$ef06256079686ba0$var$descriptionId$2++}`;
      setId(id3);
      let node2 = document.createElement("div");
      node2.id = id3;
      node2.style.display = "none";
      node2.textContent = description;
      document.body.appendChild(node2);
      desc = {
        refCount: 0,
        element: node2
      };
      $ef06256079686ba0$var$descriptionNodes$2.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes$2.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id2 : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent$3(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$3(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$3() {
  return $c87311424ea30a05$var$testPlatform$3(/^Mac/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8$3() {
  return $c87311424ea30a05$var$testUserAgent$3(/Android/i);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd$1(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset$1(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset$1(scrollView, element, "top");
  let width2 = element.offsetWidth;
  let height2 = element.offsetHeight;
  let x2 = scrollView.scrollLeft;
  let y2 = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x2)
    x2 = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width2 > maxX)
    x2 += offsetX + width2 - maxX;
  if (offsetY <= borderAdjustedY)
    y2 = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height2 > maxY)
    y2 += offsetY + height2 - maxY;
  scrollView.scrollLeft = x2;
  scrollView.scrollTop = y2;
}
function $2f04cbc44ee30ce0$var$relativeOffset$1(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b$1(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement, _opts_containingElement_scrollIntoView, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParent = $62d8ded9296f3872$export$cfa2225e87938781$1(targetElement);
      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd$1(scrollParent, targetElement);
        targetElement = scrollParent;
        scrollParent = $62d8ded9296f3872$export$cfa2225e87938781$1(targetElement);
      }
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de$3(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$3() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
const $148a7a147e38ea7f$var$RTL_SCRIPTS$1 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
const $148a7a147e38ea7f$var$RTL_LANGS$1 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764$1(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS$1.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS$1.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$1() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764$1(locale) ? "rtl" : "ltr"
  };
}
let $1e5a04cdaf7d1af8$var$currentLocale$1 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$1();
let $1e5a04cdaf7d1af8$var$listeners$1 = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale$1() {
  $1e5a04cdaf7d1af8$var$currentLocale$1 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5$1();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners$1)
    listener($1e5a04cdaf7d1af8$var$currentLocale$1);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a$1() {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a273$1();
  let [defaultLocale, setDefaultLocale] = reactExports.useState($1e5a04cdaf7d1af8$var$currentLocale$1);
  reactExports.useEffect(() => {
    if ($1e5a04cdaf7d1af8$var$listeners$1.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale$1);
    $1e5a04cdaf7d1af8$var$listeners$1.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners$1.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners$1.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale$1);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
const $18f2051aff69b9bf$var$I18nContext$1 = /* @__PURE__ */ React.createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$1() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a$1();
  let context = reactExports.useContext($18f2051aff69b9bf$var$I18nContext$1);
  return context || defaultLocale;
}
const $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new $5b160d28a433310d$export$c17fa47878dc55b6(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$1();
  let dictionary = reactExports.useMemo(() => $fca6afa0e843324b$var$getCachedDictionary(strings), [
    strings
  ]);
  return reactExports.useMemo(() => new $6db58dc88e78b024$export$2f817fcdc4b89ae0(locale, dictionary), [
    locale,
    dictionary
  ]);
}
let $325a3faab7a68acd$var$cache$1 = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d$1(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$1();
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache$1.has(cacheKey))
    return $325a3faab7a68acd$var$cache$1.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache$1.set(cacheKey, formatter);
  return formatter;
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$3 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$3.displayName = "PressResponderContext";
let $507fabe10e71c6fb$var$currentModality$3 = null;
let $507fabe10e71c6fb$var$changeHandlers$3 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$3 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$3 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$3(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$3)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$3(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$3() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$3(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = true;
  if ($507fabe10e71c6fb$var$isValidKey$3(e2)) {
    $507fabe10e71c6fb$var$currentModality$3 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$3("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$3(e2) {
  $507fabe10e71c6fb$var$currentModality$3 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$3("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$3(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$3(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = true;
    $507fabe10e71c6fb$var$currentModality$3 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$3(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$3 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$3) {
    $507fabe10e71c6fb$var$currentModality$3 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$3("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$3 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$3() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$3 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$3() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$3)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$3 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$3, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$3, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$3, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$3, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$3, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$3, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$3 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$3();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$3);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality$3 !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$3() {
  return $507fabe10e71c6fb$var$currentModality$3;
}
function $507fabe10e71c6fb$export$98e20ec92f614cfe() {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents$3();
  let [modality, setModality] = reactExports.useState($507fabe10e71c6fb$var$currentModality$3);
  reactExports.useEffect(() => {
    let handler = () => {
      setModality($507fabe10e71c6fb$var$currentModality$3);
    };
    $507fabe10e71c6fb$var$changeHandlers$3.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers$3.delete(handler);
    };
  }, []);
  return $704cf1d3b684cc5c$export$535bd6ca7f90a273$1() ? null : modality;
}
function $6a99195332edec8b$export$80f3e147d781571c$3(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$3() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$3(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$3(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$3(element);
}
function $645f2e67b85a24c9$var$isStyleVisible$1(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible$1(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a$1(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible$1(element) && $645f2e67b85a24c9$var$isAttributeVisible$1(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a$1(element.parentElement, element));
}
const $9bf71ea28793e738$var$focusableElements$1 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
const $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR$1 = $9bf71ea28793e738$var$focusableElements$1.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements$1.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR$1 = $9bf71ea28793e738$var$focusableElements$1.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope$3(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa$1(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR$1 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR$1;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node2) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node2))
        return NodeFilter.FILTER_REJECT;
      if (node2.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a$1(node2) && (!scope || $9bf71ea28793e738$var$isElementInScope$3(node2, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node2)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
let $9bf71ea28793e738$var$Tree$3 = class $9bf71ea28793e738$var$Tree3 {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode$3({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope$3(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree3();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode$3({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
let $9bf71ea28793e738$var$TreeNode$3 = class $9bf71ea28793e738$var$TreeNode3 {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
new $9bf71ea28793e738$var$Tree$3();
function $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {
  let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;
  let [hasTabbableChild, setHasTabbableChild] = reactExports.useState(false);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$3(() => {
    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {
      let update = () => {
        if (ref.current) {
          let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$1(ref.current, {
            tabbable: true
          });
          setHasTabbableChild(!!walker.nextNode());
        }
      };
      update();
      let observer = new MutationObserver(update);
      observer.observe(ref.current, {
        subtree: true,
        childList: true,
        attributes: true,
        attributeFilter: [
          "tabIndex",
          "disabled"
        ]
      });
      return () => {
        observer.disconnect();
      };
    }
  });
  return isDisabled ? false : hasTabbableChild;
}
const $704cf1d3b684cc5c$var$defaultContext$2 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
const $704cf1d3b684cc5c$var$SSRContext$2 = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext$2);
function $704cf1d3b684cc5c$export$535bd6ca7f90a273() {
  let cur = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$2);
  return cur.isSSR;
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$2 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$2 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f842629$1(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$2.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$2.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e$1(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928$1(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e$1(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629$1(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$2(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$2())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$2(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$2(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$2 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$2() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$2 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$2 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$2 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$2;
}
function $7215afc6de606d6b$var$getScrollableElements$2(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$2(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$2 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$2 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$2() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$2.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$2.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$2.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$2.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$2.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$2)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$2.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$2();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$2);
}
function $bbed8b41f857bcc0$export$24490316f764c430$2(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$2.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$2.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6$1() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e$1(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$2(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $62d8ded9296f3872$export$cfa2225e87938781(node2) {
  if ($62d8ded9296f3872$export$2bb74740c4e19def(node2))
    node2 = node2.parentElement;
  while (node2 && !$62d8ded9296f3872$export$2bb74740c4e19def(node2))
    node2 = node2.parentElement;
  return node2 || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$export$2bb74740c4e19def(node2) {
  let style2 = window.getComputedStyle(node2);
  return /(auto|scroll)/.test(style2.overflow + style2.overflowX + style2.overflowY);
}
let $ef06256079686ba0$var$descriptionId$1 = 0;
const $ef06256079686ba0$var$descriptionNodes$1 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1$1(description) {
  let [id2, setId] = reactExports.useState(void 0);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$2(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes$1.get(description);
    if (!desc) {
      let id3 = `react-aria-description-${$ef06256079686ba0$var$descriptionId$1++}`;
      setId(id3);
      let node2 = document.createElement("div");
      node2.id = id3;
      node2.style.display = "none";
      node2.textContent = description;
      document.body.appendChild(node2);
      desc = {
        refCount: 0,
        element: node2
      };
      $ef06256079686ba0$var$descriptionNodes$1.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes$1.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id2 : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent$2(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$2(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$2() {
  return $c87311424ea30a05$var$testPlatform$2(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99$1() {
  return $c87311424ea30a05$var$testPlatform$2(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224$1() {
  return $c87311424ea30a05$var$testPlatform$2(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10$2() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1$1() {
  return $c87311424ea30a05$export$186c6964ca17d99$1() || $c87311424ea30a05$export$7bef049ce92e4224$1();
}
function $c87311424ea30a05$export$e1865c3bedcd822b() {
  return $c87311424ea30a05$export$9ac100e40613ea10$2() || $c87311424ea30a05$export$fedb369cb70207f1$1();
}
function $c87311424ea30a05$export$a11b0059900ceec8$2() {
  return $c87311424ea30a05$var$testUserAgent$2(/Android/i);
}
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {
  let handlerRef = reactExports.useRef(handler);
  handlerRef.current = handler;
  let isDisabled = handler == null;
  reactExports.useEffect(() => {
    if (isDisabled)
      return;
    let element = ref.current;
    let handler2 = (e2) => handlerRef.current.call(this, e2);
    element.addEventListener(event, handler2, options);
    return () => {
      element.removeEventListener(event, handler2, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled
  ]);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width2 = element.offsetWidth;
  let height2 = element.offsetHeight;
  let x2 = scrollView.scrollLeft;
  let y2 = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x2)
    x2 = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width2 > maxX)
    x2 += offsetX + width2 - maxX;
  if (offsetY <= borderAdjustedY)
    y2 = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height2 > maxY)
    y2 += offsetY + height2 - maxY;
  scrollView.scrollLeft = x2;
  scrollView.scrollTop = y2;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement, _opts_containingElement_scrollIntoView, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParent = $62d8ded9296f3872$export$cfa2225e87938781(targetElement);
      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
        targetElement = scrollParent;
        scrollParent = $62d8ded9296f3872$export$cfa2225e87938781(targetElement);
      }
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de$2(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$2() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63$1(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
let $14c0b72509d70225$var$state$1 = "default";
let $14c0b72509d70225$var$savedUserSelect$1 = "";
let $14c0b72509d70225$var$modifiedElementMap$1 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487$1(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$1()) {
    if ($14c0b72509d70225$var$state$1 === "default") {
      $14c0b72509d70225$var$savedUserSelect$1 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state$1 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap$1.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295$1(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1$1()) {
    if ($14c0b72509d70225$var$state$1 !== "disabled")
      return;
    $14c0b72509d70225$var$state$1 = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430$2(() => {
        if ($14c0b72509d70225$var$state$1 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect$1 || "";
          $14c0b72509d70225$var$savedUserSelect$1 = "";
          $14c0b72509d70225$var$state$1 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap$1.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap$1.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap$1.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$2 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$2.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext$1(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5$2);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928$1(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e$1(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21$1(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext$1(props);
  let propsRef = reactExports.useRef(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$1();
  let pressProps = reactExports.useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$1(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$1(e2.nativeEvent, e2.currentTarget) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$1(e2.target, e2.key))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e2.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink$1(e2.currentTarget))
          e2.stopPropagation();
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent$1(e2.nativeEvent, e2.currentTarget) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent$1(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de$2(e2.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3$2(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent$1(e2, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$1(e2.target, e2.key))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink$1(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63$1(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault$1(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3$2(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487$1(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault$1(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget$1(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget$1(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget$1(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295$1(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel(e2);
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    } else {
      pressProps2.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault$1(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de$2(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$2(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget$1(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent$1(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent$1(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$2(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487$1(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$1(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$1(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById$1(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget$1(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295$1(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295$1(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$1(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink$1(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent$1(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey$1(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink$1(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent$1(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById$1(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i2 = 0; i2 < changedTouches.length; i2++) {
    const touch = changedTouches[i2];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent$1(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect$1(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping$1(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right)
    return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget$1(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect$1(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping$1(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault$1(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard$1(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey$1(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes$1 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey$1(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes$1.has(target.type);
}
let $507fabe10e71c6fb$var$currentModality$2 = null;
let $507fabe10e71c6fb$var$changeHandlers$2 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$2 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$2 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$2(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$2)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$2(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$2() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$2(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = true;
  if ($507fabe10e71c6fb$var$isValidKey$2(e2)) {
    $507fabe10e71c6fb$var$currentModality$2 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$2("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$2(e2) {
  $507fabe10e71c6fb$var$currentModality$2 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$2("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$2(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$2(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = true;
    $507fabe10e71c6fb$var$currentModality$2 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$2(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$2 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$2) {
    $507fabe10e71c6fb$var$currentModality$2 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$2("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$2 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$2() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$2 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$2() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$2)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$2 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$2, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$2, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$2, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$2, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$2, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$2, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$2 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$2();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$2);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$2() {
  return $507fabe10e71c6fb$var$currentModality$2;
}
const $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = reactExports.useRef(null);
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed6$1();
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21$1({
    isDisabled,
    onPressStart(e2) {
      if (e2.pointerType === "mouse" || e2.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart({
            ...e2,
            type: "longpressstart"
          });
        timeRef.current = setTimeout(() => {
          e2.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress({
              ...e2,
              type: "longpress"
            });
          timeRef.current = null;
        }, threshold);
        if (e2.pointerType === "touch") {
          let onContextMenu = (e3) => {
            e3.preventDefault();
          };
          addGlobalListener(e2.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e2.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e2) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e2.pointerType === "mouse" || e2.pointerType === "touch"))
        onLongPressEnd({
          ...e2,
          type: "longpressend"
        });
    }
  });
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1$1(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe928$1(pressProps, descriptionProps)
  };
}
function $6a99195332edec8b$export$80f3e147d781571c$2(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$2() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$2(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$2(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$2(element);
}
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}
const $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
const $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope$2(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node2) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node2))
        return NodeFilter.FILTER_REJECT;
      if (node2.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node2) && (!scope || $9bf71ea28793e738$var$isElementInScope$2(node2, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node2)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
let $9bf71ea28793e738$var$Tree$2 = class $9bf71ea28793e738$var$Tree4 {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode$2({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope$2(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree4();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode$2({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
let $9bf71ea28793e738$var$TreeNode$2 = class $9bf71ea28793e738$var$TreeNode4 {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
new $9bf71ea28793e738$var$Tree$2();
const $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
const $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
  };
}
let $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
let $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners)
    listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a273();
  let [defaultLocale, setDefaultLocale] = reactExports.useState($1e5a04cdaf7d1af8$var$currentLocale);
  reactExports.useEffect(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
const $18f2051aff69b9bf$var$I18nContext = /* @__PURE__ */ React.createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let context = reactExports.useContext($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}
let $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let cacheKey = locale + (options ? Object.entries(options).sort((a2, b2) => a2[0] < b2[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey))
    return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}
function $feb5ffebff200149$export$d3e3bd3e26688c04(e2) {
  return $c87311424ea30a05$export$e1865c3bedcd822b() ? e2.altKey : e2.ctrlKey;
}
function $feb5ffebff200149$export$16792effe837dba3(e2) {
  if ($c87311424ea30a05$export$9ac100e40613ea10$2())
    return e2.metaKey;
  return e2.ctrlKey;
}
const $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1e3;
function $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {
  let { keyboardDelegate, selectionManager, onTypeSelect } = options;
  let state = reactExports.useRef({
    search: "",
    timeout: null
  }).current;
  let onKeyDown = (e2) => {
    let character2 = $fb3050f43d946246$var$getStringForKey(e2.key);
    if (!character2 || e2.ctrlKey || e2.metaKey || !e2.currentTarget.contains(e2.target))
      return;
    if (character2 === " " && state.search.trim().length > 0) {
      e2.preventDefault();
      if (!("continuePropagation" in e2))
        e2.stopPropagation();
    }
    state.search += character2;
    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);
    if (key == null)
      key = keyboardDelegate.getKeyForSearch(state.search);
    if (key != null) {
      selectionManager.setFocusedKey(key);
      if (onTypeSelect)
        onTypeSelect(key);
    }
    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = "";
    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null
    }
  };
}
function $fb3050f43d946246$var$getStringForKey(key) {
  if (key.length === 1 || !/^[A-Z]/i.test(key))
    return key;
  return "";
}
function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {
  let { selectionManager: manager, keyboardDelegate: delegate, ref, autoFocus = false, shouldFocusWrap = false, disallowEmptySelection = false, disallowSelectAll = false, selectOnFocus = manager.selectionBehavior === "replace", disallowTypeAhead = false, shouldUseVirtualFocus, allowsTabNavigation = false, isVirtualized, scrollRef = ref } = options;
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let onKeyDown = (e2) => {
    if (e2.altKey && e2.key === "Tab")
      e2.preventDefault();
    if (!ref.current.contains(e2.target))
      return;
    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        manager.setFocusedKey(key, childFocus);
        if (e2.shiftKey && manager.selectionMode === "multiple")
          manager.extendSelection(key);
        else if (selectOnFocus && !$feb5ffebff200149$export$d3e3bd3e26688c04(e2))
          manager.replaceSelection(key);
      }
    };
    switch (e2.key) {
      case "ArrowDown":
        if (delegate.getKeyBelow) {
          var _delegate_getFirstKey, _delegate_getFirstKey1;
          e2.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
          if (nextKey == null && shouldFocusWrap)
            nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowUp":
        if (delegate.getKeyAbove) {
          var _delegate_getLastKey, _delegate_getLastKey1;
          e2.preventDefault();
          let nextKey1 = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);
          if (nextKey1 == null && shouldFocusWrap)
            nextKey1 = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey1);
        }
        break;
      case "ArrowLeft":
        if (delegate.getKeyLeftOf) {
          var _delegate_getFirstKey2, _delegate_getLastKey2;
          e2.preventDefault();
          let nextKey2 = delegate.getKeyLeftOf(manager.focusedKey);
          if (nextKey2 == null && shouldFocusWrap)
            nextKey2 = direction === "rtl" ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate, manager.focusedKey) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate, manager.focusedKey);
          navigateToKey(nextKey2, direction === "rtl" ? "first" : "last");
        }
        break;
      case "ArrowRight":
        if (delegate.getKeyRightOf) {
          var _delegate_getLastKey3, _delegate_getFirstKey3;
          e2.preventDefault();
          let nextKey3 = delegate.getKeyRightOf(manager.focusedKey);
          if (nextKey3 == null && shouldFocusWrap)
            nextKey3 = direction === "rtl" ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate, manager.focusedKey) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate, manager.focusedKey);
          navigateToKey(nextKey3, direction === "rtl" ? "last" : "first");
        }
        break;
      case "Home":
        if (delegate.getFirstKey) {
          e2.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e2));
          manager.setFocusedKey(firstKey);
          if ($feb5ffebff200149$export$16792effe837dba3(e2) && e2.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(firstKey);
          else if (selectOnFocus)
            manager.replaceSelection(firstKey);
        }
        break;
      case "End":
        if (delegate.getLastKey) {
          e2.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e2));
          manager.setFocusedKey(lastKey);
          if ($feb5ffebff200149$export$16792effe837dba3(e2) && e2.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(lastKey);
          else if (selectOnFocus)
            manager.replaceSelection(lastKey);
        }
        break;
      case "PageDown":
        if (delegate.getKeyPageBelow) {
          e2.preventDefault();
          let nextKey4 = delegate.getKeyPageBelow(manager.focusedKey);
          navigateToKey(nextKey4);
        }
        break;
      case "PageUp":
        if (delegate.getKeyPageAbove) {
          e2.preventDefault();
          let nextKey5 = delegate.getKeyPageAbove(manager.focusedKey);
          navigateToKey(nextKey5);
        }
        break;
      case "a":
        if ($feb5ffebff200149$export$16792effe837dba3(e2) && manager.selectionMode === "multiple" && disallowSelectAll !== true) {
          e2.preventDefault();
          manager.selectAll();
        }
        break;
      case "Escape":
        e2.preventDefault();
        if (!disallowEmptySelection)
          manager.clearSelection();
        break;
      case "Tab":
        if (!allowsTabNavigation) {
          if (e2.shiftKey)
            ref.current.focus();
          else {
            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(ref.current, {
              tabbable: true
            });
            let next2;
            let last;
            do {
              last = walker.lastChild();
              if (last)
                next2 = last;
            } while (last);
            if (next2 && !next2.contains(document.activeElement))
              $7215afc6de606d6b$export$de79e2c695e052f3$2(next2);
          }
          break;
        }
    }
  };
  let scrollPos = reactExports.useRef({
    top: 0,
    left: 0
  });
  $e9faafb641e167db$export$90fc3a17d93f704c(scrollRef, "scroll", isVirtualized ? null : () => {
    scrollPos.current = {
      top: scrollRef.current.scrollTop,
      left: scrollRef.current.scrollLeft
    };
  });
  let onFocus = (e2) => {
    if (manager.isFocused) {
      if (!e2.currentTarget.contains(e2.target))
        manager.setFocused(false);
      return;
    }
    if (!e2.currentTarget.contains(e2.target))
      return;
    manager.setFocused(true);
    if (manager.focusedKey == null) {
      let navigateToFirstKey = (key) => {
        if (key != null) {
          manager.setFocusedKey(key);
          if (selectOnFocus)
            manager.replaceSelection(key);
        }
      };
      let relatedTarget = e2.relatedTarget;
      var _manager_lastSelectedKey, _manager_firstSelectedKey;
      if (relatedTarget && e2.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)
        navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : delegate.getLastKey());
      else
        navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : delegate.getFirstKey());
    } else if (!isVirtualized) {
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left;
    }
    if (!isVirtualized && manager.focusedKey != null) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element) {
        $7215afc6de606d6b$export$de79e2c695e052f3$2(element);
        $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollRef.current, element);
      }
    }
  };
  let onBlur = (e2) => {
    if (!e2.currentTarget.contains(e2.relatedTarget))
      manager.setFocused(false);
  };
  const autoFocusRef = reactExports.useRef(autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current) {
      let focusedKey = null;
      if (autoFocus === "first")
        focusedKey = delegate.getFirstKey();
      if (autoFocus === "last")
        focusedKey = delegate.getLastKey();
      let selectedKeys = manager.selectedKeys;
      if (selectedKeys.size)
        focusedKey = selectedKeys.values().next().value;
      manager.setFocused(true);
      manager.setFocusedKey(focusedKey);
      if (focusedKey == null && !shouldUseVirtualFocus)
        $6a99195332edec8b$export$80f3e147d781571c$2(ref.current);
    }
    autoFocusRef.current = false;
  }, []);
  reactExports.useEffect(() => {
    let modality = $507fabe10e71c6fb$export$630ff653c5ada6a9$2();
    if (!isVirtualized && manager.isFocused && manager.focusedKey != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollRef.current, element);
        if (modality === "keyboard")
          $2f04cbc44ee30ce0$export$c826860796309d1b(element, {
            containingElement: ref.current
          });
      }
    }
  }, [
    isVirtualized,
    scrollRef,
    manager.focusedKey,
    manager.isFocused,
    ref
  ]);
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown(e2) {
      if (scrollRef.current === e2.target)
        e2.preventDefault();
    }
  };
  let { typeSelectProps } = $fb3050f43d946246$export$e32c88dfddc6e1d8({
    keyboardDelegate: delegate,
    selectionManager: manager
  });
  if (!disallowTypeAhead)
    handlers = $3ef42575df84b30b$export$9d1611c77c2fe928$1(typeSelectProps, handlers);
  let tabIndex;
  if (!shouldUseVirtualFocus)
    tabIndex = manager.focusedKey == null ? 0 : -1;
  return {
    collectionProps: {
      ...handlers,
      tabIndex
    }
  };
}
function $880e95eb8b93ba9a$export$ecf600387e221c37(options) {
  let { selectionManager: manager, key, ref, shouldSelectOnPressUp, isVirtualized, shouldUseVirtualFocus, focus, isDisabled, onAction, allowsDifferentPressOrigin } = options;
  let onSelect = (e2) => {
    if (e2.pointerType === "keyboard" && $feb5ffebff200149$export$d3e3bd3e26688c04(e2))
      manager.toggleSelection(key);
    else {
      if (manager.selectionMode === "none")
        return;
      if (manager.selectionMode === "single") {
        if (manager.isSelected(key) && !manager.disallowEmptySelection)
          manager.toggleSelection(key);
        else
          manager.replaceSelection(key);
      } else if (e2 && e2.shiftKey)
        manager.extendSelection(key);
      else if (manager.selectionBehavior === "toggle" || e2 && ($feb5ffebff200149$export$16792effe837dba3(e2) || e2.pointerType === "touch" || e2.pointerType === "virtual"))
        manager.toggleSelection(key);
      else
        manager.replaceSelection(key);
    }
  };
  reactExports.useEffect(() => {
    let isFocused = key === manager.focusedKey;
    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {
      if (focus)
        focus();
      else if (document.activeElement !== ref.current)
        $6a99195332edec8b$export$80f3e147d781571c$2(ref.current);
    }
  }, [
    ref,
    key,
    manager.focusedKey,
    manager.childFocusStrategy,
    manager.isFocused,
    shouldUseVirtualFocus
  ]);
  isDisabled = isDisabled || manager.isDisabled(key);
  let itemProps = {};
  if (!shouldUseVirtualFocus && !isDisabled)
    itemProps = {
      tabIndex: key === manager.focusedKey ? 0 : -1,
      onFocus(e2) {
        if (e2.target === ref.current)
          manager.setFocusedKey(key);
      }
    };
  else if (isDisabled)
    itemProps.onMouseDown = (e2) => {
      e2.preventDefault();
    };
  let allowsSelection = !isDisabled && manager.canSelectItem(key);
  let allowsActions = onAction && !isDisabled;
  let hasPrimaryAction = allowsActions && (manager.selectionBehavior === "replace" ? !allowsSelection : manager.isEmpty);
  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === "replace";
  let hasAction = hasPrimaryAction || hasSecondaryAction;
  let modality = reactExports.useRef(null);
  let longPressEnabled = hasAction && allowsSelection;
  let longPressEnabledOnPressStart = reactExports.useRef(false);
  let hadPrimaryActionOnPressStart = reactExports.useRef(false);
  let itemPressProps = {};
  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = (e2) => {
      modality.current = e2.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      if (e2.pointerType === "keyboard" && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e2);
    };
    if (!allowsDifferentPressOrigin)
      itemPressProps.onPress = (e2) => {
        if (hasPrimaryAction || hasSecondaryAction && e2.pointerType !== "mouse") {
          if (e2.pointerType === "keyboard" && !$880e95eb8b93ba9a$var$isActionKey())
            return;
          onAction();
        } else if (e2.pointerType !== "keyboard")
          onSelect(e2);
      };
    else {
      itemPressProps.onPressUp = (e2) => {
        if (e2.pointerType !== "keyboard")
          onSelect(e2);
      };
      itemPressProps.onPress = hasPrimaryAction ? () => onAction() : null;
    }
  } else {
    itemPressProps.onPressStart = (e2) => {
      modality.current = e2.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      hadPrimaryActionOnPressStart.current = hasPrimaryAction;
      if (e2.pointerType === "mouse" && !hasPrimaryAction || e2.pointerType === "keyboard" && (!onAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e2);
    };
    itemPressProps.onPress = (e2) => {
      if (e2.pointerType === "touch" || e2.pointerType === "pen" || e2.pointerType === "virtual" || e2.pointerType === "keyboard" && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e2.pointerType === "mouse" && hadPrimaryActionOnPressStart.current) {
        if (hasAction)
          onAction();
        else
          onSelect(e2);
      }
    };
  }
  if (!isVirtualized)
    itemProps["data-key"] = key;
  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21$1(itemPressProps);
  let onDoubleClick = hasSecondaryAction ? (e2) => {
    if (modality.current === "mouse") {
      e2.stopPropagation();
      e2.preventDefault();
      onAction();
    }
  } : void 0;
  let { longPressProps } = $8a26561d2877236e$export$c24ed0104d07eab9({
    isDisabled: !longPressEnabled,
    onLongPress(e2) {
      if (e2.pointerType === "touch") {
        onSelect(e2);
        manager.setSelectionBehavior("toggle");
      }
    }
  });
  let onDragStartCapture = (e2) => {
    if (modality.current === "touch" && longPressEnabledOnPressStart.current)
      e2.preventDefault();
  };
  return {
    itemProps: $3ef42575df84b30b$export$9d1611c77c2fe928$1(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, longPressEnabled ? longPressProps : {}, {
      onDoubleClick,
      onDragStartCapture
    }),
    isPressed,
    isSelected: manager.isSelected(key),
    isFocused: manager.isFocused && manager.focusedKey === key,
    isDisabled,
    allowsSelection,
    hasAction
  };
}
function $880e95eb8b93ba9a$var$isActionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === "Enter";
}
function $880e95eb8b93ba9a$var$isSelectionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === " " || (event === null || event === void 0 ? void 0 : event.code) === "Space";
}
class $2a25aae57d74318e$export$a05409b8bb224a5a {
  getKeyBelow(key) {
    key = this.collection.getKeyAfter(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getKeyAbove(key) {
    key = this.collection.getKeyBefore(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getKeyRightOf(key) {
    if (this.orientation === "horizontal")
      return this.direction === "rtl" ? this.getKeyAbove(key) : this.getKeyBelow(key);
    return null;
  }
  getKeyLeftOf(key) {
    if (this.orientation === "horizontal")
      return this.direction === "rtl" ? this.getKeyBelow(key) : this.getKeyAbove(key);
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getKeyPageAbove(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!$62d8ded9296f3872$export$2bb74740c4e19def(menu))
      return this.getFirstKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.max(0, itemRect.x - containerX + itemRect.width - containerRect.width);
      while (item && itemRect.x - containerX > pageX) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.max(0, itemRect.y - containerY + itemRect.height - containerRect.height);
      while (item && itemRect.y - containerY > pageY) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getFirstKey();
  }
  getKeyPageBelow(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!$62d8ded9296f3872$export$2bb74740c4e19def(menu))
      return this.getLastKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.min(menu.scrollWidth, itemRect.x - containerX - itemRect.width + containerRect.width);
      while (item && itemRect.x - containerX < pageX) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.min(menu.scrollHeight, itemRect.y - containerY - itemRect.height + containerRect.height);
      while (item && itemRect.y - containerY < pageY) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getLastKey();
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey || this.getFirstKey();
    while (key != null) {
      let item = collection.getItem(key);
      let substring = item.textValue.slice(0, search.length);
      if (item.textValue && this.collator.compare(substring, search) === 0)
        return key;
      key = this.getKeyBelow(key);
    }
    return null;
  }
  constructor(...args) {
    if (args.length === 1) {
      let opts = args[0];
      this.collection = opts.collection;
      this.ref = opts.ref;
      this.disabledKeys = opts.disabledKeys || /* @__PURE__ */ new Set();
      this.orientation = opts.orientation;
      this.direction = opts.direction;
    } else {
      this.collection = args[0];
      this.disabledKeys = args[1];
      this.ref = args[2];
      this.collator = args[3];
    }
  }
}
function $982254629710d113$export$b95089534ab7c1fd(props) {
  let { selectionManager, collection, disabledKeys, ref, keyboardDelegate, autoFocus, shouldFocusWrap, isVirtualized, disallowEmptySelection, selectOnFocus = selectionManager.selectionBehavior === "replace", disallowTypeAhead, shouldUseVirtualFocus, allowsTabNavigation } = props;
  let collator = $325a3faab7a68acd$export$a16aca283550c30d({
    usage: "search",
    sensitivity: "base"
  });
  let disabledBehavior = selectionManager.disabledBehavior;
  let delegate = reactExports.useMemo(() => keyboardDelegate || new $2a25aae57d74318e$export$a05409b8bb224a5a(collection, disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : disabledKeys, ref, collator), [
    keyboardDelegate,
    collection,
    disabledKeys,
    ref,
    collator,
    disabledBehavior
  ]);
  let { collectionProps } = $ae20dd8cbca75726$export$d6daf82dcd84e87c({
    ref,
    selectionManager,
    keyboardDelegate: delegate,
    autoFocus,
    shouldFocusWrap,
    disallowEmptySelection,
    selectOnFocus,
    disallowTypeAhead,
    shouldUseVirtualFocus,
    allowsTabNavigation,
    isVirtualized,
    scrollRef: ref
  });
  return {
    listProps: collectionProps
  };
}
const $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7e3;
let $319e236875307eab$var$liveAnnouncer = null;
function $319e236875307eab$export$a9b970dcc4ae71a9(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
  if (!$319e236875307eab$var$liveAnnouncer)
    $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();
  $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
}
class $319e236875307eab$var$LiveAnnouncer {
  createLog(ariaLive) {
    let node2 = document.createElement("div");
    node2.setAttribute("role", "log");
    node2.setAttribute("aria-live", ariaLive);
    node2.setAttribute("aria-relevant", "additions");
    return node2;
  }
  destroy() {
    if (!this.node)
      return;
    document.body.removeChild(this.node);
    this.node = null;
  }
  announce(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
    if (!this.node)
      return;
    let node2 = document.createElement("div");
    node2.textContent = message;
    if (assertiveness === "assertive")
      this.assertiveLog.appendChild(node2);
    else
      this.politeLog.appendChild(node2);
    if (message !== "")
      setTimeout(() => {
        node2.remove();
      }, timeout);
  }
  clear(assertiveness) {
    if (!this.node)
      return;
    if (!assertiveness || assertiveness === "assertive")
      this.assertiveLog.innerHTML = "";
    if (!assertiveness || assertiveness === "polite")
      this.politeLog.innerHTML = "";
  }
  constructor() {
    this.node = document.createElement("div");
    this.node.dataset.liveAnnouncer = "true";
    Object.assign(this.node.style, {
      border: 0,
      clip: "rect(0 0 0 0)",
      clipPath: "inset(50%)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      whiteSpace: "nowrap"
    });
    this.assertiveLog = this.createLog("assertive");
    this.node.appendChild(this.assertiveLog);
    this.politeLog = this.createLog("polite");
    this.node.appendChild(this.politeLog);
    document.body.prepend(this.node);
  }
}
function $parcel$interopDefault$2(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
class $d1c300d9c497e402$export$de9feff04fda126e {
  isCell(node2) {
    return node2.type === "cell";
  }
  isRow(node2) {
    return node2.type === "row" || node2.type === "item";
  }
  findPreviousKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyBefore(key);
    }
  }
  findNextKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyAfter(key);
    }
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findNextKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return $c5a24bc478652b5f$export$5f3398f8733f90e2$2($c5a24bc478652b5f$export$1005530eda016c13$2(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findPreviousKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return $c5a24bc478652b5f$export$5f3398f8733f90e2$2($c5a24bc478652b5f$export$1005530eda016c13$2(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = $c5a24bc478652b5f$export$1005530eda016c13$2(item, this.collection);
      return this.direction === "rtl" ? $c5a24bc478652b5f$export$7475b2c64539e4cf$1(children).key : $c5a24bc478652b5f$export$fbdeaa6a76694f71$2(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children1 = $c5a24bc478652b5f$export$1005530eda016c13$2(parent, this.collection);
      let next2 = this.direction === "rtl" ? $c5a24bc478652b5f$export$5f3398f8733f90e2$2(children1, item.index - 1) : $c5a24bc478652b5f$export$5f3398f8733f90e2$2(children1, item.index + 1);
      if (next2)
        return next2.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getFirstKey(key) : this.getLastKey(key);
    }
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = $c5a24bc478652b5f$export$1005530eda016c13$2(item, this.collection);
      return this.direction === "rtl" ? $c5a24bc478652b5f$export$fbdeaa6a76694f71$2(children).key : $c5a24bc478652b5f$export$7475b2c64539e4cf$1(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children1 = $c5a24bc478652b5f$export$1005530eda016c13$2(parent, this.collection);
      let prev2 = this.direction === "rtl" ? $c5a24bc478652b5f$export$5f3398f8733f90e2$2(children1, item.index + 1) : $c5a24bc478652b5f$export$5f3398f8733f90e2$2(children1, item.index - 1);
      if (prev2)
        return prev2.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getLastKey(key) : this.getFirstKey(key);
    }
  }
  getFirstKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        return $c5a24bc478652b5f$export$fbdeaa6a76694f71$2($c5a24bc478652b5f$export$1005530eda016c13$2(parent, this.collection)).key;
      }
    }
    key = this.findNextKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item1 = this.collection.getItem(key);
      key = $c5a24bc478652b5f$export$fbdeaa6a76694f71$2($c5a24bc478652b5f$export$1005530eda016c13$2(item1, this.collection)).key;
    }
    return key;
  }
  getLastKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        let children = $c5a24bc478652b5f$export$1005530eda016c13$2(parent, this.collection);
        return $c5a24bc478652b5f$export$7475b2c64539e4cf$1(children).key;
      }
    }
    key = this.findPreviousKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item1 = this.collection.getItem(key);
      let children1 = $c5a24bc478652b5f$export$1005530eda016c13$2(item1, this.collection);
      key = $c5a24bc478652b5f$export$7475b2c64539e4cf$1(children1).key;
    }
    return key;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getItemRect(key) {
    var _this_layout_getLayoutInfo;
    if (this.layout)
      return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;
    let item = this.getItem(key);
    if (item)
      return new $60423f92c7f9ad87$export$c79fc6492f3af13d(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);
  }
  getPageHeight() {
    var _this_layout_virtualizer, _this_ref, _this_ref_current;
    if (this.layout)
      return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;
  }
  getContentHeight() {
    var _this_ref, _this_ref_current;
    if (this.layout)
      return this.layout.getContentSize().height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;
  }
  getKeyPageAbove(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());
    while (itemRect && itemRect.y > pageY) {
      key = this.getKeyAbove(key);
      itemRect = this.getItemRect(key);
    }
    return key;
  }
  getKeyPageBelow(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageHeight = this.getPageHeight();
    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);
    while (itemRect && itemRect.maxY < pageY) {
      let nextKey = this.getKeyBelow(key);
      itemRect = this.getItemRect(nextKey);
      if (nextKey != null)
        key = nextKey;
    }
    return key;
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      if (item.textValue) {
        let substring = item.textValue.slice(0, search.length);
        if (this.collator.compare(substring, search) === 0) {
          if (this.isRow(item) && this.focusMode === "cell")
            return $c5a24bc478652b5f$export$fbdeaa6a76694f71$2($c5a24bc478652b5f$export$1005530eda016c13$2(item, this.collection)).key;
          return item.key;
        }
      }
      key = this.findNextKey(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
  constructor(options) {
    this.collection = options.collection;
    this.disabledKeys = options.disabledKeys;
    this.ref = options.ref;
    this.direction = options.direction;
    this.collator = options.collator;
    this.layout = options.layout;
    this.focusMode = options.focusMode || "row";
  }
}
const $1af922eb41e03c8f$export$e6235c0d09b995d0 = /* @__PURE__ */ new WeakMap();
var $1dbe5ffd32adb38c$exports = {};
var $682989befd4f478d$exports = {};
$682989befd4f478d$exports = {
  "deselectedItem": (args) => `${args.item} غير المحدد`,
  "longPressToSelect": `اضغط مطولًا للدخول إلى وضع التحديد.`,
  "select": `تحديد`,
  "selectedAll": `جميع العناصر المحددة.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `لم يتم تحديد عناصر`,
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عنصر محدد`
  })}.`,
  "selectedItem": (args) => `${args.item} المحدد`
};
var $f7fca02019afd941$exports = {};
$f7fca02019afd941$exports = {
  "deselectedItem": (args) => `${args.item} не е избран.`,
  "longPressToSelect": `Натиснете и задръжте за да влезете в избирателен режим.`,
  "select": `Изберете`,
  "selectedAll": `Всички елементи са избрани.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Няма избрани елементи`,
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "selectedItem": (args) => `${args.item} избран.`
};
var $8f86f40be75387f1$exports = {};
$8f86f40be75387f1$exports = {
  "deselectedItem": (args) => `Položka ${args.item} není vybrána.`,
  "longPressToSelect": `Dlouhým stisknutím přejdete do režimu výběru.`,
  "select": `Vybrat`,
  "selectedAll": `Vybrány všechny položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nevybrány žádné položky`,
    one: () => `Vybrána ${formatter.number(args.count)} položka`,
    other: () => `Vybráno ${formatter.number(args.count)} položek`
  })}.`,
  "selectedItem": (args) => `Vybrána položka ${args.item}.`
};
var $db24ba43c8d652ee$exports = {};
$db24ba43c8d652ee$exports = {
  "deselectedItem": (args) => `${args.item} ikke valgt.`,
  "longPressToSelect": `Lav et langt tryk for at aktivere valgtilstand.`,
  "select": `Vælg`,
  "selectedAll": `Alle elementer valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer valgt`,
    one: () => `${formatter.number(args.count)} element valgt`,
    other: () => `${formatter.number(args.count)} elementer valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} valgt.`
};
var $f8f1e72c8b5447d6$exports = {};
$f8f1e72c8b5447d6$exports = {
  "deselectedItem": (args) => `${args.item} nicht ausgewählt.`,
  "longPressToSelect": `Gedrückt halten, um Auswahlmodus zu öffnen.`,
  "select": `Auswählen`,
  "selectedAll": `Alle Elemente ausgewählt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Keine Elemente ausgewählt`,
    one: () => `${formatter.number(args.count)} Element ausgewählt`,
    other: () => `${formatter.number(args.count)} Elemente ausgewählt`
  })}.`,
  "selectedItem": (args) => `${args.item} ausgewählt.`
};
var $9a73ed2983c3ab0b$exports = {};
$9a73ed2983c3ab0b$exports = {
  "deselectedItem": (args) => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,
  "longPressToSelect": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,
  "select": `Επιλογή`,
  "selectedAll": `Επιλέχθηκαν όλα τα στοιχεία.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Δεν επιλέχθηκαν στοιχεία`,
    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,
    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`
  })}.`,
  "selectedItem": (args) => `Επιλέχθηκε το στοιχείο ${args.item}.`
};
var $583de0b3587601b9$exports = {};
$583de0b3587601b9$exports = {
  "deselectedItem": (args) => `${args.item} not selected.`,
  "select": `Select`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `No items selected`,
    one: () => `${formatter.number(args.count)} item selected`,
    other: () => `${formatter.number(args.count)} items selected`
  })}.`,
  "selectedAll": `All items selected.`,
  "selectedItem": (args) => `${args.item} selected.`,
  "longPressToSelect": `Long press to enter selection mode.`
};
var $147159c978043442$exports = {};
$147159c978043442$exports = {
  "deselectedItem": (args) => `${args.item} no seleccionado.`,
  "longPressToSelect": `Mantenga pulsado para abrir el modo de selección.`,
  "select": `Seleccionar`,
  "selectedAll": `Todos los elementos seleccionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ningún elemento seleccionado`,
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "selectedItem": (args) => `${args.item} seleccionado.`
};
var $5cbb62c8a19173ac$exports = {};
$5cbb62c8a19173ac$exports = {
  "deselectedItem": (args) => `${args.item} pole valitud.`,
  "longPressToSelect": `Valikurežiimi sisenemiseks vajutage pikalt.`,
  "select": `Vali`,
  "selectedAll": `Kõik üksused valitud.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Üksusi pole valitud`,
    one: () => `${formatter.number(args.count)} üksus valitud`,
    other: () => `${formatter.number(args.count)} üksust valitud`
  })}.`,
  "selectedItem": (args) => `${args.item} valitud.`
};
var $a33d71dc804cc59e$exports = {};
$a33d71dc804cc59e$exports = {
  "deselectedItem": (args) => `Kohdetta ${args.item} ei valittu.`,
  "longPressToSelect": `Siirry valintatilaan painamalla pitkään.`,
  "select": `Valitse`,
  "selectedAll": `Kaikki kohteet valittu.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ei yhtään kohdetta valittu`,
    one: () => `${formatter.number(args.count)} kohde valittu`,
    other: () => `${formatter.number(args.count)} kohdetta valittu`
  })}.`,
  "selectedItem": (args) => `${args.item} valittu.`
};
var $92d800447793d084$exports = {};
$92d800447793d084$exports = {
  "deselectedItem": (args) => `${args.item} non sélectionné.`,
  "longPressToSelect": `Appuyez de manière prolongée pour passer en mode de sélection.`,
  "select": `Sélectionner`,
  "selectedAll": `Tous les éléments sélectionnés.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Aucun élément sélectionné`,
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "selectedItem": (args) => `${args.item} sélectionné.`
};
var $fe732cdb32124ea8$exports = {};
$fe732cdb32124ea8$exports = {
  "deselectedItem": (args) => `${args.item} לא נבחר.`,
  "longPressToSelect": `הקשה ארוכה לכניסה למצב בחירה.`,
  "select": `בחר`,
  "selectedAll": `כל הפריטים נבחרו.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `לא נבחרו פריטים`,
    one: () => `פריט ${formatter.number(args.count)} נבחר`,
    other: () => `${formatter.number(args.count)} פריטים נבחרו`
  })}.`,
  "selectedItem": (args) => `${args.item} נבחר.`
};
var $e41234e934efb4f5$exports = {};
$e41234e934efb4f5$exports = {
  "deselectedItem": (args) => `Stavka ${args.item} nije odabrana.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u način odabira.`,
  "select": `Odaberite`,
  "selectedAll": `Odabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije odabrana nijedna stavka`,
    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Odabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `Stavka ${args.item} je odabrana.`
};
var $1b0393182473bf9e$exports = {};
$1b0393182473bf9e$exports = {
  "deselectedItem": (args) => `${args.item} nincs kijelölve.`,
  "longPressToSelect": `Nyomja hosszan a kijelöléshez.`,
  "select": `Kijelölés`,
  "selectedAll": `Az összes elem kijelölve.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Egy elem sincs kijelölve`,
    one: () => `${formatter.number(args.count)} elem kijelölve`,
    other: () => `${formatter.number(args.count)} elem kijelölve`
  })}.`,
  "selectedItem": (args) => `${args.item} kijelölve.`
};
var $2eed782c1c110ce7$exports = {};
$2eed782c1c110ce7$exports = {
  "deselectedItem": (args) => `${args.item} non selezionato.`,
  "longPressToSelect": `Premi a lungo per passare alla modalità di selezione.`,
  "select": `Seleziona`,
  "selectedAll": `Tutti gli elementi selezionati.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nessun elemento selezionato`,
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "selectedItem": (args) => `${args.item} selezionato.`
};
var $8b5d459f86e9b23c$exports = {};
$8b5d459f86e9b23c$exports = {
  "deselectedItem": (args) => `${args.item} が選択されていません。`,
  "longPressToSelect": `長押しして選択モードを開きます。`,
  "select": `選択`,
  "selectedAll": `すべての項目を選択しました。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `項目が選択されていません`,
    one: () => `${formatter.number(args.count)} 項目を選択しました`,
    other: () => `${formatter.number(args.count)} 項目を選択しました`
  })}。`,
  "selectedItem": (args) => `${args.item} を選択しました。`
};
var $1949c3ad17295fd4$exports = {};
$1949c3ad17295fd4$exports = {
  "deselectedItem": (args) => `${args.item}이(가) 선택되지 않았습니다.`,
  "longPressToSelect": `선택 모드로 들어가려면 길게 누르십시오.`,
  "select": `선택`,
  "selectedAll": `모든 항목이 선택되었습니다.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `선택된 항목이 없습니다`,
    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,
    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`
  })}.`,
  "selectedItem": (args) => `${args.item}이(가) 선택되었습니다.`
};
var $f5e3df4dc8aa7b54$exports = {};
$f5e3df4dc8aa7b54$exports = {
  "deselectedItem": (args) => `${args.item} nepasirinkta.`,
  "longPressToSelect": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,
  "select": `Pasirinkti`,
  "selectedAll": `Pasirinkti visi elementai.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nepasirinktas nė vienas elementas`,
    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,
    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Pasirinkta: ${args.item}.`
};
var $9dd86690a5c2b2c5$exports = {};
$9dd86690a5c2b2c5$exports = {
  "deselectedItem": (args) => `Vienums ${args.item} nav atlasīts.`,
  "longPressToSelect": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,
  "select": `Atlasīt`,
  "selectedAll": `Atlasīti visi vienumi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nav atlasīts neviens vienums`,
    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,
    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Atlasīts vienums ${args.item}.`
};
var $843964c3bf9a7d24$exports = {};
$843964c3bf9a7d24$exports = {
  "deselectedItem": (args) => `${args.item} er ikke valgt.`,
  "longPressToSelect": `Bruk et langt trykk for å gå inn i valgmodus.`,
  "select": `Velg`,
  "selectedAll": `Alle elementer er valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer er valgt`,
    one: () => `${formatter.number(args.count)} element er valgt`,
    other: () => `${formatter.number(args.count)} elementer er valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} er valgt.`
};
var $73f50e845f9ef3b4$exports = {};
$73f50e845f9ef3b4$exports = {
  "deselectedItem": (args) => `${args.item} niet geselecteerd.`,
  "longPressToSelect": `Druk lang om de selectiemodus te openen.`,
  "select": `Selecteren`,
  "selectedAll": `Alle items geselecteerd.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Geen items geselecteerd`,
    one: () => `${formatter.number(args.count)} item geselecteerd`,
    other: () => `${formatter.number(args.count)} items geselecteerd`
  })}.`,
  "selectedItem": (args) => `${args.item} geselecteerd.`
};
var $87f92a7e077514b2$exports = {};
$87f92a7e077514b2$exports = {
  "deselectedItem": (args) => `Nie zaznaczono ${args.item}.`,
  "longPressToSelect": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,
  "select": `Zaznacz`,
  "selectedAll": `Wszystkie zaznaczone elementy.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nie zaznaczono żadnych elementów`,
    one: () => `${formatter.number(args.count)} zaznaczony element`,
    other: () => `${formatter.number(args.count)} zaznaczonych elementów`
  })}.`,
  "selectedItem": (args) => `Zaznaczono ${args.item}.`
};
var $c28c98d58ee9ff6f$exports = {};
$c28c98d58ee9ff6f$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Mantenha pressionado para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $b6b1503b17b2254d$exports = {};
$b6b1503b17b2254d$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Prima continuamente para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $8bdaeb71e50c3e1a$exports = {};
$8bdaeb71e50c3e1a$exports = {
  "deselectedItem": (args) => `${args.item} neselectat.`,
  "longPressToSelect": `Apăsați lung pentru a intra în modul de selectare.`,
  "select": `Selectare`,
  "selectedAll": `Toate elementele selectate.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Niciun element selectat`,
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "selectedItem": (args) => `${args.item} selectat.`
};
var $ec2b852dd7c3d1f2$exports = {};
$ec2b852dd7c3d1f2$exports = {
  "deselectedItem": (args) => `${args.item} не выбрано.`,
  "longPressToSelect": `Нажмите и удерживайте для входа в режим выбора.`,
  "select": `Выбрать`,
  "selectedAll": `Выбраны все элементы.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Нет выбранных элементов`,
    one: () => `${formatter.number(args.count)} элемент выбран`,
    other: () => `${formatter.number(args.count)} элементов выбрано`
  })}.`,
  "selectedItem": (args) => `${args.item} выбрано.`
};
var $79e6d900d6a4f82d$exports = {};
$79e6d900d6a4f82d$exports = {
  "deselectedItem": (args) => `Nevybraté položky: ${args.item}.`,
  "longPressToSelect": `Dlhším stlačením prejdite do režimu výberu.`,
  "select": `Vybrať`,
  "selectedAll": `Všetky vybraté položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Žiadne vybraté položky`,
    one: () => `${formatter.number(args.count)} vybratá položka`,
    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Vybraté položky: ${args.item}.`
};
var $f4c1f0d5d4d03d80$exports = {};
$f4c1f0d5d4d03d80$exports = {
  "deselectedItem": (args) => `Element ${args.item} ni izbran.`,
  "longPressToSelect": `Za izbirni način pritisnite in dlje časa držite.`,
  "select": `Izberite`,
  "selectedAll": `Vsi elementi so izbrani.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Noben element ni izbran`,
    one: () => `${formatter.number(args.count)} element je izbran`,
    other: () => `${formatter.number(args.count)} elementov je izbranih`
  })}.`,
  "selectedItem": (args) => `Element ${args.item} je izbran.`
};
var $46252cd87269b10b$exports = {};
$46252cd87269b10b$exports = {
  "deselectedItem": (args) => `${args.item} nije izabrano.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u režim biranja.`,
  "select": `Izaberite`,
  "selectedAll": `Izabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije izabrana nijedna stavka`,
    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Izabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `${args.item} je izabrano.`
};
var $d4d5d8dab362555c$exports = {};
$d4d5d8dab362555c$exports = {
  "deselectedItem": (args) => `${args.item} ej markerat.`,
  "longPressToSelect": `Tryck länge när du vill öppna väljarläge.`,
  "select": `Markera`,
  "selectedAll": `Alla markerade objekt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Inga markerade objekt`,
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "selectedItem": (args) => `${args.item} markerat.`
};
var $3d55d1f97c377e83$exports = {};
$3d55d1f97c377e83$exports = {
  "deselectedItem": (args) => `${args.item} seçilmedi.`,
  "longPressToSelect": `Seçim moduna girmek için uzun basın.`,
  "select": `Seç`,
  "selectedAll": `Tüm ögeler seçildi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Hiçbir öge seçilmedi`,
    one: () => `${formatter.number(args.count)} öge seçildi`,
    other: () => `${formatter.number(args.count)} öge seçildi`
  })}.`,
  "selectedItem": (args) => `${args.item} seçildi.`
};
var $5368512f1c703a3f$exports = {};
$5368512f1c703a3f$exports = {
  "deselectedItem": (args) => `${args.item} не вибрано.`,
  "longPressToSelect": `Виконайте довге натиснення, щоб перейти в режим вибору.`,
  "select": `Вибрати`,
  "selectedAll": `Усі елементи вибрано.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Жодних елементів не вибрано`,
    one: () => `${formatter.number(args.count)} елемент вибрано`,
    other: () => `Вибрано елементів: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `${args.item} вибрано.`
};
var $f1316b1074463583$exports = {};
$f1316b1074463583$exports = {
  "deselectedItem": (args) => `未选择 ${args.item}。`,
  "longPressToSelect": `长按以进入选择模式。`,
  "select": `选择`,
  "selectedAll": `已选择所有项目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未选择项目`,
    one: () => `已选择 ${formatter.number(args.count)} 个项目`,
    other: () => `已选择 ${formatter.number(args.count)} 个项目`
  })}。`,
  "selectedItem": (args) => `已选择 ${args.item}。`
};
var $7e60654723031b6f$exports = {};
$7e60654723031b6f$exports = {
  "deselectedItem": (args) => `未選取「${args.item}」。`,
  "longPressToSelect": `長按以進入選擇模式。`,
  "select": `選取`,
  "selectedAll": `已選取所有項目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未選取任何項目`,
    one: () => `已選取 ${formatter.number(args.count)} 個項目`,
    other: () => `已選取 ${formatter.number(args.count)} 個項目`
  })}。`,
  "selectedItem": (args) => `已選取「${args.item}」。`
};
$1dbe5ffd32adb38c$exports = {
  "ar-AE": $682989befd4f478d$exports,
  "bg-BG": $f7fca02019afd941$exports,
  "cs-CZ": $8f86f40be75387f1$exports,
  "da-DK": $db24ba43c8d652ee$exports,
  "de-DE": $f8f1e72c8b5447d6$exports,
  "el-GR": $9a73ed2983c3ab0b$exports,
  "en-US": $583de0b3587601b9$exports,
  "es-ES": $147159c978043442$exports,
  "et-EE": $5cbb62c8a19173ac$exports,
  "fi-FI": $a33d71dc804cc59e$exports,
  "fr-FR": $92d800447793d084$exports,
  "he-IL": $fe732cdb32124ea8$exports,
  "hr-HR": $e41234e934efb4f5$exports,
  "hu-HU": $1b0393182473bf9e$exports,
  "it-IT": $2eed782c1c110ce7$exports,
  "ja-JP": $8b5d459f86e9b23c$exports,
  "ko-KR": $1949c3ad17295fd4$exports,
  "lt-LT": $f5e3df4dc8aa7b54$exports,
  "lv-LV": $9dd86690a5c2b2c5$exports,
  "nb-NO": $843964c3bf9a7d24$exports,
  "nl-NL": $73f50e845f9ef3b4$exports,
  "pl-PL": $87f92a7e077514b2$exports,
  "pt-BR": $c28c98d58ee9ff6f$exports,
  "pt-PT": $b6b1503b17b2254d$exports,
  "ro-RO": $8bdaeb71e50c3e1a$exports,
  "ru-RU": $ec2b852dd7c3d1f2$exports,
  "sk-SK": $79e6d900d6a4f82d$exports,
  "sl-SI": $f4c1f0d5d4d03d80$exports,
  "sr-SP": $46252cd87269b10b$exports,
  "sv-SE": $d4d5d8dab362555c$exports,
  "tr-TR": $3d55d1f97c377e83$exports,
  "uk-UA": $5368512f1c703a3f$exports,
  "zh-CN": $f1316b1074463583$exports,
  "zh-TW": $7e60654723031b6f$exports
};
function $92599c3fd427b763$export$137e594ef3218a10(props, state) {
  var _state_collection_getTextValue;
  let { getRowText = (key) => {
    var _state_collection, _state_collection_getTextValue1, _state_collection_getItem;
    return (_state_collection_getTextValue = (_state_collection_getTextValue1 = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue1 === void 0 ? void 0 : _state_collection_getTextValue1.call(_state_collection, key)) !== null && _state_collection_getTextValue !== void 0 ? _state_collection_getTextValue : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;
  } } = props;
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1(/* @__PURE__ */ $parcel$interopDefault$2($1dbe5ffd32adb38c$exports));
  let selection = state.selectionManager.rawSelection;
  let lastSelection = reactExports.useRef(selection);
  $4f58c5f72bcf79f7$export$496315a1608d9602$1(() => {
    var _lastSelection_current;
    if (!state.selectionManager.isFocused) {
      lastSelection.current = selection;
      return;
    }
    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);
    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);
    let isReplace = state.selectionManager.selectionBehavior === "replace";
    let messages = [];
    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {
      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {
        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);
        if (currentSelectionText)
          messages.push(stringFormatter.format("selectedItem", {
            item: currentSelectionText
          }));
      }
    } else if (addedKeys.size === 1 && removedKeys.size === 0) {
      let addedText = getRowText(addedKeys.keys().next().value);
      if (addedText)
        messages.push(stringFormatter.format("selectedItem", {
          item: addedText
        }));
    } else if (removedKeys.size === 1 && addedKeys.size === 0) {
      if (state.collection.getItem(removedKeys.keys().next().value)) {
        let removedText = getRowText(removedKeys.keys().next().value);
        if (removedText)
          messages.push(stringFormatter.format("deselectedItem", {
            item: removedText
          }));
      }
    }
    if (state.selectionManager.selectionMode === "multiple") {
      if (messages.length === 0 || selection === "all" || selection.size > 1 || lastSelection.current === "all" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1)
        messages.push(selection === "all" ? stringFormatter.format("selectedAll") : stringFormatter.format("selectedCount", {
          count: selection.size
        }));
    }
    if (messages.length > 0)
      $319e236875307eab$export$a9b970dcc4ae71a9(messages.join(" "));
    lastSelection.current = selection;
  }, [
    selection
  ]);
}
function $92599c3fd427b763$var$diffSelection(a2, b2) {
  let res = /* @__PURE__ */ new Set();
  if (a2 === "all" || b2 === "all")
    return res;
  for (let key of a2.keys())
    if (!b2.has(key))
      res.add(key);
  return res;
}
function $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1(/* @__PURE__ */ $parcel$interopDefault$2($1dbe5ffd32adb38c$exports));
  let modality = $507fabe10e71c6fb$export$98e20ec92f614cfe();
  let shouldLongPress = (modality === "pointer" || modality === "virtual" || modality == null) && typeof window !== "undefined" && "ontouchstart" in window;
  let interactionDescription = reactExports.useMemo(() => {
    let selectionMode = props.selectionManager.selectionMode;
    let selectionBehavior = props.selectionManager.selectionBehavior;
    let message = void 0;
    if (shouldLongPress)
      message = stringFormatter.format("longPressToSelect");
    return selectionBehavior === "replace" && selectionMode !== "none" && props.hasItemActions ? message : void 0;
  }, [
    props.selectionManager.selectionMode,
    props.selectionManager.selectionBehavior,
    props.hasItemActions,
    stringFormatter,
    shouldLongPress
  ]);
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1$2(interactionDescription);
  return descriptionProps;
}
function $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {
  let { isVirtualized, keyboardDelegate, focusMode, scrollRef, getRowText, onRowAction, onCellAction } = props;
  let { selectionManager: manager } = state;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let collator = $325a3faab7a68acd$export$a16aca283550c30d$1({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$1();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = reactExports.useMemo(() => keyboardDelegate || new $d1c300d9c497e402$export$de9feff04fda126e({
    collection: state.collection,
    disabledKeys: disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : state.disabledKeys,
    ref,
    direction,
    collator,
    focusMode
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    focusMode
  ]);
  let { collectionProps } = $ae20dd8cbca75726$export$d6daf82dcd84e87c({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    isVirtualized,
    scrollRef
  });
  let id2 = $bdb11010cef70236$export$f680877a34711e37$2(props.id);
  $1af922eb41e03c8f$export$e6235c0d09b995d0.set(state, {
    keyboardDelegate: delegate,
    actions: {
      onRowAction,
      onCellAction
    }
  });
  let descriptionProps = $5b9b5b5723db6ae1$export$be42ebdab07ae4c2({
    selectionManager: manager,
    hasItemActions: !!(onRowAction || onCellAction)
  });
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f$1(props, {
    labelable: true
  });
  let onFocus = reactExports.useCallback((e2) => {
    if (manager.isFocused) {
      if (!e2.currentTarget.contains(e2.target))
        manager.setFocused(false);
      return;
    }
    if (!e2.currentTarget.contains(e2.target))
      return;
    manager.setFocused(true);
  }, [
    manager
  ]);
  let navDisabledHandlers = reactExports.useMemo(() => ({
    onBlur: collectionProps.onBlur,
    onFocus
  }), [
    onFocus,
    collectionProps.onBlur
  ]);
  let hasTabbableChild = $83013635b024ae3d$export$eac1895992b9f3d6(ref, {
    isDisabled: state.collection.size !== 0
  });
  let gridProps = $3ef42575df84b30b$export$9d1611c77c2fe928$2(
    domProps,
    {
      role: "grid",
      id: id2,
      "aria-multiselectable": manager.selectionMode === "multiple" ? "true" : void 0
    },
    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 && {
      tabIndex: hasTabbableChild ? -1 : 0
    },
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = state.collection.columnCount;
  }
  $92599c3fd427b763$export$137e594ef3218a10({
    getRowText
  }, state);
  return {
    gridProps
  };
}
function $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {
  return {
    rowGroupProps: {
      role: "rowgroup"
    }
  };
}
function $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {
  let { node: node2, isVirtualized, shouldSelectOnPressUp, onAction } = props;
  let { actions: { onRowAction } } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);
  let { itemProps, ...states } = $880e95eb8b93ba9a$export$ecf600387e221c37({
    selectionManager: state.selectionManager,
    key: node2.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp,
    onAction: onRowAction ? () => onRowAction(node2.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let isSelected = state.selectionManager.isSelected(node2.key);
  let rowProps = {
    role: "row",
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0,
    "aria-disabled": states.isDisabled || void 0,
    ...itemProps
  };
  if (isVirtualized)
    rowProps["aria-rowindex"] = node2.index + 1;
  return {
    rowProps,
    ...states
  };
}
function $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {
  let { node: node2, isVirtualized, focusMode = "child", shouldSelectOnPressUp, onAction } = props;
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$1();
  let { keyboardDelegate, actions: { onCellAction } } = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state);
  let focus = () => {
    let treeWalker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$1(ref.current);
    if (focusMode === "child") {
      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement)
        return;
      let focusable = state.selectionManager.childFocusStrategy === "last" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();
      if (focusable) {
        $6a99195332edec8b$export$80f3e147d781571c$3(focusable);
        return;
      }
    }
    if (!ref.current.contains(document.activeElement))
      $6a99195332edec8b$export$80f3e147d781571c$3(ref.current);
  };
  let { itemProps, isPressed } = $880e95eb8b93ba9a$export$ecf600387e221c37({
    selectionManager: state.selectionManager,
    key: node2.key,
    ref,
    isVirtualized,
    focus,
    shouldSelectOnPressUp,
    onAction: onCellAction ? () => onCellAction(node2.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let onKeyDownCapture = (e2) => {
    if (!e2.currentTarget.contains(e2.target) || state.isKeyboardNavigationDisabled)
      return;
    let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa$1(ref.current);
    walker.currentNode = document.activeElement;
    switch (e2.key) {
      case "ArrowLeft": {
        let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
        if (focusMode === "child" && focusable === ref.current)
          focusable = null;
        if (focusable) {
          e2.preventDefault();
          e2.stopPropagation();
          $6a99195332edec8b$export$80f3e147d781571c$3(focusable);
          $2f04cbc44ee30ce0$export$c826860796309d1b$1(focusable, {
            containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
          });
        } else {
          let prev2 = keyboardDelegate.getKeyLeftOf(node2.key);
          if (prev2 !== node2.key)
            break;
          e2.preventDefault();
          e2.stopPropagation();
          if (focusMode === "cell" && direction === "rtl") {
            $6a99195332edec8b$export$80f3e147d781571c$3(ref.current);
            $2f04cbc44ee30ce0$export$c826860796309d1b$1(ref.current, {
              containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);
            if (focusable) {
              $6a99195332edec8b$export$80f3e147d781571c$3(focusable);
              $2f04cbc44ee30ce0$export$c826860796309d1b$1(focusable, {
                containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowRight": {
        let focusable1 = direction === "rtl" ? walker.previousNode() : walker.nextNode();
        if (focusMode === "child" && focusable1 === ref.current)
          focusable1 = null;
        if (focusable1) {
          e2.preventDefault();
          e2.stopPropagation();
          $6a99195332edec8b$export$80f3e147d781571c$3(focusable1);
          $2f04cbc44ee30ce0$export$c826860796309d1b$1(focusable1, {
            containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
          });
        } else {
          let next2 = keyboardDelegate.getKeyRightOf(node2.key);
          if (next2 !== node2.key)
            break;
          e2.preventDefault();
          e2.stopPropagation();
          if (focusMode === "cell" && direction === "ltr") {
            $6a99195332edec8b$export$80f3e147d781571c$3(ref.current);
            $2f04cbc44ee30ce0$export$c826860796309d1b$1(ref.current, {
              containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable1 = direction === "rtl" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();
            if (focusable1) {
              $6a99195332edec8b$export$80f3e147d781571c$3(focusable1);
              $2f04cbc44ee30ce0$export$c826860796309d1b$1(focusable1, {
                containingElement: $62d8ded9296f3872$export$cfa2225e87938781$1(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowUp":
      case "ArrowDown":
        if (!e2.altKey && ref.current.contains(e2.target)) {
          e2.stopPropagation();
          e2.preventDefault();
          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e2.nativeEvent.type, e2.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e2) => {
    if (e2.target !== ref.current) {
      if (!$507fabe10e71c6fb$export$b9b3dfddab17db27())
        state.selectionManager.setFocusedKey(node2.key);
      return;
    }
    requestAnimationFrame(() => {
      if (focusMode === "child" && document.activeElement === ref.current)
        focus();
    });
  };
  let gridCellProps = $3ef42575df84b30b$export$9d1611c77c2fe928$2(itemProps, {
    role: "gridcell",
    onKeyDownCapture,
    onFocus
  });
  var _node_colIndex;
  if (isVirtualized)
    gridCellProps["aria-colindex"] = ((_node_colIndex = node2.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node2.index) + 1;
  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null)
    gridCellProps.onPointerDown = (e2) => {
      let el2 = e2.currentTarget;
      let tabindex = el2.getAttribute("tabindex");
      el2.removeAttribute("tabindex");
      requestAnimationFrame(() => {
        el2.setAttribute("tabindex", tabindex);
      });
    };
  return {
    gridCellProps,
    isPressed
  };
}
function $ab90dcbc1b5466d0$var$last(walker) {
  let next2;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next2 = last;
  } while (last);
  return next2;
}
function $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {
  let { key } = props;
  let manager = state.selectionManager;
  let checkboxId = $bdb11010cef70236$export$f680877a34711e37$2();
  let isDisabled = !state.selectionManager.canSelectItem(key);
  let isSelected = state.selectionManager.isSelected(key);
  let onChange = () => manager.select(key);
  const stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1(/* @__PURE__ */ $parcel$interopDefault$2($1dbe5ffd32adb38c$exports));
  return {
    checkboxProps: {
      id: checkboxId,
      "aria-label": stringFormatter.format("select"),
      isSelected,
      isDisabled,
      onChange
    }
  };
}
const $704cf1d3b684cc5c$var$defaultContext$1 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
const $704cf1d3b684cc5c$var$SSRContext$1 = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext$1);
let $704cf1d3b684cc5c$var$canUseDOM$1 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $704cf1d3b684cc5c$var$componentIds$1 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter$1(isDisabled = false) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$1);
  let ref = reactExports.useRef(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds$1.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds$1.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds$1.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b26$1(defaultId) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext$1);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext$1 && !$704cf1d3b684cc5c$var$canUseDOM$1)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter$1(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$1 = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
let $bdb11010cef70236$var$idsUpdaterMap$1 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37$1(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26$1(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap$1.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$1(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap$1.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap$1.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap$1.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i2 = 1; i2 < args.length; i2++) {
    let props = args[i2];
    for (let key in props) {
      let a2 = result[key];
      let b2 = props[key];
      if (typeof a2 === "function" && typeof b2 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e(a2, b2);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a2 === "string" && typeof b2 === "string")
        result[key] = clsx(a2, b2);
      else if (key === "id" && a2 && b2)
        result.id = $bdb11010cef70236$export$cd8c9cb68f842629(a2, b2);
      else
        result[key] = b2 !== void 0 ? b2 : a2;
    }
  }
  return result;
}
function $7215afc6de606d6b$export$de79e2c695e052f3$1(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll$1())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements$1(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition$1(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached$1 = null;
function $7215afc6de606d6b$var$supportsPreventScroll$1() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached$1 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached$1 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached$1 = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached$1;
}
function $7215afc6de606d6b$var$getScrollableElements$1(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition$1(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement$1 = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks$1 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents$1() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement$1.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement$1.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement$1.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement$1.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement$1.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks$1)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks$1.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents$1();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents$1);
}
function $bbed8b41f857bcc0$export$24490316f764c430$1(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement$1.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks$1.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = reactExports.useRef(/* @__PURE__ */ new Map());
  let addGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = reactExports.useCallback((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = reactExports.useCallback(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  reactExports.useEffect(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = reactExports.useRef(true);
  reactExports.useEffect(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else
      effect();
  }, dependencies);
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$1(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
let $ef06256079686ba0$var$descriptionId = 0;
const $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id2, setId] = reactExports.useState(void 0);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$1(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id3 = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id3);
      let node2 = document.createElement("div");
      node2.id = id3;
      node2.style.display = "none";
      node2.textContent = description;
      document.body.appendChild(node2);
      desc = {
        refCount: 0,
        element: node2
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id2 : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent$1(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform$1(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10$1() {
  return $c87311424ea30a05$var$testPlatform$1(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99() {
  return $c87311424ea30a05$var$testPlatform$1(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224() {
  return $c87311424ea30a05$var$testPlatform$1(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10$1() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
}
function $c87311424ea30a05$export$a11b0059900ceec8$1() {
  return $c87311424ea30a05$var$testUserAgent$1(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de$1(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8$1() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
let $14c0b72509d70225$var$state = "default";
let $14c0b72509d70225$var$savedUserSelect = "";
let $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state === "default") {
      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f1()) {
    if ($14c0b72509d70225$var$state !== "disabled")
      return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c430$1(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5$1 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5$1.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = reactExports.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5$1);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe928(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let propsRef = reactExports.useRef(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = reactExports.useState(false);
  let ref = reactExports.useRef({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();
  let pressProps = reactExports.useMemo(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e2) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2.nativeEvent, e2.currentTarget) && e2.currentTarget.contains(e2.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e2.target, e2.key))
            e2.preventDefault();
          e2.stopPropagation();
          if (!state.isPressed && !e2.repeat) {
            state.target = e2.currentTarget;
            state.isPressed = true;
            triggerPressStart(e2, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e2.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(e2.currentTarget))
          e2.stopPropagation();
      },
      onKeyUp(e2) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e2.nativeEvent, e2.currentTarget) && !e2.repeat && e2.currentTarget.contains(e2.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard");
      },
      onClick(e2) {
        if (e2 && !e2.currentTarget.contains(e2.target))
          return;
        if (e2 && e2.button === 0) {
          e2.stopPropagation();
          if (isDisabled)
            e2.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de$1(e2.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f3$1(e2.currentTarget);
            triggerPressStart(e2, "virtual");
            triggerPressUp(e2, "virtual");
            triggerPressEnd(e2, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e2) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e2, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e2.target, e2.key))
          e2.preventDefault();
        e2.stopPropagation();
        state.isPressed = false;
        let target = e2.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf63(e2.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
          e2.preventDefault();
        state.pointerType = e2.pointerType;
        e2.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e2.pointerId;
          state.target = e2.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f3$1(e2.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a4697467175487(state.target);
          triggerPressStart(e2, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (e2.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
            e2.preventDefault();
          e2.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target) || state.pointerType === "virtual")
          return;
        if (e2.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e2, e2.currentTarget))
          triggerPressUp(e2, state.pointerType || e2.pointerType);
      };
      let onPointerMove = (e2) => {
        if (e2.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      let onPointerUp = (e2) => {
        if (e2.pointerId === state.activePointerId && state.isPressed && e2.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        }
      };
      let onPointerCancel = (e2) => {
        cancel(e2);
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    } else {
      pressProps2.onMouseDown = (e2) => {
        if (e2.button !== 0 || !e2.currentTarget.contains(e2.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e2.currentTarget))
          e2.preventDefault();
        e2.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e2.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de$1(e2.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$1(e2.currentTarget);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e2, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onMouseUp = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e2.button === 0)
          triggerPressUp(e2, state.pointerType);
      };
      let onMouseUp = (e2) => {
        if (e2.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget(e2, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e2), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e2.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e2.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f3$1(e2.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a4697467175487(state.target);
        triggerPressStart(e2, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e2.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e2, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e2, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e2);
        }
      };
      pressProps2.onTouchEnd = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e2.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e2.currentTarget)) {
          triggerPressUp(e2, state.pointerType);
          triggerPressEnd(e2, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e2, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        e2.stopPropagation();
        if (state.isPressed)
          cancel(e2);
      };
      let onScroll = (e2) => {
        if (state.isPressed && e2.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e2) => {
        if (!e2.currentTarget.contains(e2.target))
          return;
        cancel(e2);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  reactExports.useEffect(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e3295(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i2 = 0; i2 < changedTouches.length; i2++) {
    const touch = changedTouches[i2];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent(target, e2) {
  return {
    currentTarget: target,
    shiftKey: e2.shiftKey,
    ctrlKey: e2.ctrlKey,
    metaKey: e2.metaKey,
    altKey: e2.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a2, b2) {
  if (a2.left > b2.right || b2.left > a2.right)
    return false;
  if (a2.top > b2.bottom || b2.top > a2.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
const $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}
class $8a9cb279dc87e130$export$905e7fc544a71f365 {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
}
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = reactExports.useRef({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c$1(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return reactExports.useCallback((e2) => {
    if (e2.target instanceof HTMLButtonElement || e2.target instanceof HTMLInputElement || e2.target instanceof HTMLTextAreaElement || e2.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e2.target;
      let onBlurHandler = (e3) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f365("blur", e3));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget) {
      if (onBlurProp)
        onBlurProp(e2);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);
  const onFocus = reactExports.useCallback((e2) => {
    if (e2.target === e2.currentTarget && document.activeElement === e2.target) {
      if (onFocusProp)
        onFocusProp(e2);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e2);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
let $507fabe10e71c6fb$var$currentModality$1 = null;
let $507fabe10e71c6fb$var$changeHandlers$1 = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners$1 = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently$1 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers$1(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers$1)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey$1(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10$1() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent$1(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = true;
  if ($507fabe10e71c6fb$var$isValidKey$1(e2)) {
    $507fabe10e71c6fb$var$currentModality$1 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers$1("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent$1(e2) {
  $507fabe10e71c6fb$var$currentModality$1 = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers$1("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent$1(e2) {
  if ($6a7db85432448f7f$export$60278871457622de$1(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = true;
    $507fabe10e71c6fb$var$currentModality$1 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent$1(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus$1 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently$1) {
    $507fabe10e71c6fb$var$currentModality$1 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers$1("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$1 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur$1() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently$1 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents$1() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners$1)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus$1 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent$1, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent$1, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent$1, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent$1, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur$1, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent$1, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners$1 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents$1();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents$1);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9$1() {
  return $507fabe10e71c6fb$var$currentModality$1;
}
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e2) => {
    let event = {
      ...e2,
      preventDefault() {
        e2.preventDefault();
      },
      isDefaultPrevented() {
        return e2.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e2.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),
      onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)
    }
  };
}
function $6a99195332edec8b$export$80f3e147d781571c$1(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9$1() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430$1(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3$1(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3$1(element);
}
function $9bf71ea28793e738$var$isElementInScope$1(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
let $9bf71ea28793e738$var$Tree$1 = class $9bf71ea28793e738$var$Tree5 {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode$1({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope$1(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree5();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode$1({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
let $9bf71ea28793e738$var$TreeNode$1 = class $9bf71ea28793e738$var$TreeNode5 {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
new $9bf71ea28793e738$var$Tree$1();
let $e6afbd83fe6ebbd2$var$FocusableContext = /* @__PURE__ */ React.createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {
  let context = reactExports.useContext($e6afbd83fe6ebbd2$var$FocusableContext) || {};
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props);
  let { keyboardProps } = $46d819fcbaf35654$export$8f71654801c2f7cd(props);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = reactExports.useRef(props.autoFocus);
  reactExports.useEffect(() => {
    if (autoFocusRef.current && domRef.current)
      $6a99195332edec8b$export$80f3e147d781571c$1(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}
function $parcel$interopDefault$1(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
const $2140fb2337097f2d$export$552312adfd451dab = /* @__PURE__ */ new WeakMap();
function $2140fb2337097f2d$var$normalizeKey(key) {
  if (typeof key === "string")
    return key.replace(/\s*/g, "");
  return "" + key;
}
function $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {
  return [
    ...state.collection.rowHeaderColumnKeys
  ].map(
    (columnKey) => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)
  ).join(" ");
}
var $ae7e9c471762b4d3$exports = {};
var $ce3de3ff2fd66848$exports = {};
$ce3de3ff2fd66848$exports = {
  "ascending": `تصاعدي`,
  "ascendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,
  "columnSize": (args) => `${args.value} بالبكسل`,
  "descending": `تنازلي`,
  "descendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,
  "select": `تحديد`,
  "selectAll": `تحديد الكل`,
  "sortable": `عمود قابل للترتيب`
};
var $cb80dcce530985b9$exports = {};
$cb80dcce530985b9$exports = {
  "ascending": `възходящ`,
  "ascendingSort": (args) => `сортирано по колона ${args.columnName} във възходящ ред`,
  "columnSize": (args) => `${args.value} пиксела`,
  "descending": `низходящ`,
  "descendingSort": (args) => `сортирано по колона ${args.columnName} в низходящ ред`,
  "select": `Изберете`,
  "selectAll": `Изберете всичко`,
  "sortable": `сортираща колона`
};
var $68ac86749db4c0fb$exports = {};
$68ac86749db4c0fb$exports = {
  "ascending": `vzestupně`,
  "ascendingSort": (args) => `řazeno vzestupně podle sloupce ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixelů`,
  "descending": `sestupně`,
  "descendingSort": (args) => `řazeno sestupně podle sloupce ${args.columnName}`,
  "select": `Vybrat`,
  "selectAll": `Vybrat vše`,
  "sortable": `sloupec s možností řazení`
};
var $9a6cbac08487e661$exports = {};
$9a6cbac08487e661$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `faldende`,
  "descendingSort": (args) => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,
  "select": `Vælg`,
  "selectAll": `Vælg alle`,
  "sortable": `sorterbar kolonne`
};
var $c963661d89486e72$exports = {};
$c963661d89486e72$exports = {
  "ascending": `aufsteigend`,
  "ascendingSort": (args) => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,
  "columnSize": (args) => `${args.value} Pixel`,
  "descending": `absteigend`,
  "descendingSort": (args) => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,
  "select": `Auswählen`,
  "selectAll": `Alles auswählen`,
  "sortable": `sortierbare Spalte`
};
var $ac03861c6e8605f4$exports = {};
$ac03861c6e8605f4$exports = {
  "ascending": `αύξουσα`,
  "ascendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `φθίνουσα`,
  "descendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,
  "select": `Επιλογή`,
  "selectAll": `Επιλογή όλων`,
  "sortable": `Στήλη διαλογής`
};
var $09e6b82e0d6e466a$exports = {};
$09e6b82e0d6e466a$exports = {
  "select": `Select`,
  "selectAll": `Select All`,
  "sortable": `sortable column`,
  "ascending": `ascending`,
  "descending": `descending`,
  "ascendingSort": (args) => `sorted by column ${args.columnName} in ascending order`,
  "descendingSort": (args) => `sorted by column ${args.columnName} in descending order`,
  "columnSize": (args) => `${args.value} pixels`
};
var $8cc39eb66c2bf220$exports = {};
$8cc39eb66c2bf220$exports = {
  "ascending": `de subida`,
  "ascendingSort": (args) => `ordenado por columna ${args.columnName} en orden de subida`,
  "columnSize": (args) => `${args.value} píxeles`,
  "descending": `de bajada`,
  "descendingSort": (args) => `ordenado por columna ${args.columnName} en orden de bajada`,
  "select": `Seleccionar`,
  "selectAll": `Seleccionar todos`,
  "sortable": `columna ordenable`
};
var $4e11db3c25a38112$exports = {};
$4e11db3c25a38112$exports = {
  "ascending": `tõusev järjestus`,
  "ascendingSort": (args) => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,
  "columnSize": (args) => `${args.value} pikslit`,
  "descending": `laskuv järjestus`,
  "descendingSort": (args) => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,
  "select": `Vali`,
  "selectAll": `Vali kõik`,
  "sortable": `sorditav veerg`
};
var $da1e751a92575e02$exports = {};
$da1e751a92575e02$exports = {
  "ascending": `nouseva`,
  "ascendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,
  "columnSize": (args) => `${args.value} pikseliä`,
  "descending": `laskeva`,
  "descendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,
  "select": `Valitse`,
  "selectAll": `Valitse kaikki`,
  "sortable": `lajiteltava sarake`
};
var $1b5d6c6c47d55106$exports = {};
$1b5d6c6c47d55106$exports = {
  "ascending": `croissant`,
  "ascendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `décroissant`,
  "descendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,
  "select": `Sélectionner`,
  "selectAll": `Sélectionner tout`,
  "sortable": `colonne triable`
};
var $7c18ba27b86d3308$exports = {};
$7c18ba27b86d3308$exports = {
  "ascending": `עולה`,
  "ascendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר עולה`,
  "columnSize": (args) => `${args.value} פיקסלים`,
  "descending": `יורד`,
  "descendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר יורד`,
  "select": `בחר`,
  "selectAll": `בחר הכול`,
  "sortable": `עמודה שניתן למיין`
};
var $2cb40998e20e8a46$exports = {};
$2cb40998e20e8a46$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,
  "select": `Odaberite`,
  "selectAll": `Odaberite sve`,
  "sortable": `stupac koji se može razvrstati`
};
var $189e23eec1d6aa3a$exports = {};
$189e23eec1d6aa3a$exports = {
  "ascending": `növekvő`,
  "ascendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,
  "columnSize": (args) => `${args.value} képpont`,
  "descending": `csökkenő`,
  "descendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,
  "select": `Kijelölés`,
  "selectAll": `Összes kijelölése`,
  "sortable": `rendezendő oszlop`
};
var $3c5ec8e4f015dfd0$exports = {};
$3c5ec8e4f015dfd0$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `in ordine crescente in base alla colonna ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `decrescente`,
  "descendingSort": (args) => `in ordine decrescente in base alla colonna ${args.columnName}`,
  "select": `Seleziona`,
  "selectAll": `Seleziona tutto`,
  "sortable": `colonna ordinabile`
};
var $d021d50e6b315ebb$exports = {};
$d021d50e6b315ebb$exports = {
  "ascending": `昇順`,
  "ascendingSort": (args) => `列 ${args.columnName} を昇順で並べ替え`,
  "columnSize": (args) => `${args.value} ピクセル`,
  "descending": `降順`,
  "descendingSort": (args) => `列 ${args.columnName} を降順で並べ替え`,
  "select": `選択`,
  "selectAll": `すべて選択`,
  "sortable": `並べ替え可能な列`
};
var $52535c35c24ec937$exports = {};
$52535c35c24ec937$exports = {
  "ascending": `오름차순`,
  "ascendingSort": (args) => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,
  "columnSize": (args) => `${args.value} 픽셀`,
  "descending": `내림차순`,
  "descendingSort": (args) => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,
  "select": `선택`,
  "selectAll": `모두 선택`,
  "sortable": `정렬 가능한 열`
};
var $b37ee03672edfd1d$exports = {};
$b37ee03672edfd1d$exports = {
  "ascending": `didėjančia tvarka`,
  "ascendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,
  "columnSize": (args) => `${args.value} piks.`,
  "descending": `mažėjančia tvarka`,
  "descendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,
  "select": `Pasirinkti`,
  "selectAll": `Pasirinkti viską`,
  "sortable": `rikiuojamas stulpelis`
};
var $c7df6686b4189d56$exports = {};
$c7df6686b4189d56$exports = {
  "ascending": `augošā secībā`,
  "ascendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,
  "columnSize": (args) => `${args.value} pikseļi`,
  "descending": `dilstošā secībā`,
  "descendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,
  "select": `Atlasīt`,
  "selectAll": `Atlasīt visu`,
  "sortable": `kārtojamā kolonna`
};
var $da07fe8ec87e6b68$exports = {};
$da07fe8ec87e6b68$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,
  "columnSize": (args) => `${args.value} piksler`,
  "descending": `synkende`,
  "descendingSort": (args) => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,
  "select": `Velg`,
  "selectAll": `Velg alle`,
  "sortable": `kolonne som kan sorteres`
};
var $64b7e390f5791490$exports = {};
$64b7e390f5791490$exports = {
  "ascending": `oplopend`,
  "ascendingSort": (args) => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `aflopend`,
  "descendingSort": (args) => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,
  "select": `Selecteren`,
  "selectAll": `Alles selecteren`,
  "sortable": `sorteerbare kolom`
};
var $2a03621e773f1678$exports = {};
$2a03621e773f1678$exports = {
  "ascending": `rosnąco`,
  "ascendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,
  "columnSize": (args) => `Liczba pikseli: ${args.value}`,
  "descending": `malejąco`,
  "descendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku malejącym`,
  "select": `Zaznacz`,
  "selectAll": `Zaznacz wszystko`,
  "sortable": `kolumna z możliwością sortowania`
};
var $0a79c0aba9e5ecc6$exports = {};
$0a79c0aba9e5ecc6$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem crescente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `decrescente`,
  "descendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem decrescente`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `coluna classificável`
};
var $de7b4d0f7dc86fc8$exports = {};
$de7b4d0f7dc86fc8$exports = {
  "ascending": `ascendente`,
  "ascendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem ascendente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `descendente`,
  "descendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem descendente`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `Coluna ordenável`
};
var $28ea7e849d77bd1c$exports = {};
$28ea7e849d77bd1c$exports = {
  "ascending": `crescătoare`,
  "ascendingSort": (args) => `sortate după coloana ${args.columnName} în ordine crescătoare`,
  "columnSize": (args) => `${args.value} pixeli`,
  "descending": `descrescătoare`,
  "descendingSort": (args) => `sortate după coloana ${args.columnName} în ordine descrescătoare`,
  "select": `Selectare`,
  "selectAll": `Selectare totală`,
  "sortable": `coloană sortabilă`
};
var $9a09321cf046b187$exports = {};
$9a09321cf046b187$exports = {
  "ascending": `возрастание`,
  "ascendingSort": (args) => `сортировать столбец ${args.columnName} в порядке возрастания`,
  "columnSize": (args) => `${args.value} пикс.`,
  "descending": `убывание`,
  "descendingSort": (args) => `сортировать столбец ${args.columnName} в порядке убывания`,
  "select": `Выбрать`,
  "selectAll": `Выбрать все`,
  "sortable": `сортируемый столбец`
};
var $5afe469a63fcac7b$exports = {};
$5afe469a63fcac7b$exports = {
  "ascending": `vzostupne`,
  "ascendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "columnSize": (args) => `Počet pixelov: ${args.value}`,
  "descending": `zostupne`,
  "descendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "select": `Vybrať`,
  "selectAll": `Vybrať všetko`,
  "sortable": `zoraditeľný stĺpec`
};
var $2956757ac31a7ce2$exports = {};
$2956757ac31a7ce2$exports = {
  "ascending": `naraščajoče`,
  "ascendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,
  "columnSize": (args) => `${args.value} slikovnih pik`,
  "descending": `padajoče`,
  "descendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,
  "select": `Izberite`,
  "selectAll": `Izberite vse`,
  "sortable": `razvrstljivi stolpec`
};
var $cedee0e66b175529$exports = {};
$cedee0e66b175529$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `sortirano po kolonama ${args.columnName} rastućim redosledom`,
  "descending": `padajući`,
  "descendingSort": (args) => `sortirano po kolonama ${args.columnName} padajućim redosledom`,
  "select": `Izaberite`,
  "selectAll": `Izaberite sve`,
  "sortable": `kolona koja se može sortirati`
};
var $6db19998ba4427da$exports = {};
$6db19998ba4427da$exports = {
  "ascending": `stigande`,
  "ascendingSort": (args) => `sorterat på kolumn ${args.columnName} i stigande ordning`,
  "columnSize": (args) => `${args.value} pixlar`,
  "descending": `fallande`,
  "descendingSort": (args) => `sorterat på kolumn ${args.columnName} i fallande ordning`,
  "select": `Markera`,
  "selectAll": `Markera allt`,
  "sortable": `sorterbar kolumn`
};
var $166b7c9cc1adb1a1$exports = {};
$166b7c9cc1adb1a1$exports = {
  "ascending": `artan sırada`,
  "ascendingSort": (args) => `${args.columnName} sütuna göre artan düzende sırala`,
  "columnSize": (args) => `${args.value} piksel`,
  "descending": `azalan sırada`,
  "descendingSort": (args) => `${args.columnName} sütuna göre azalan düzende sırala`,
  "select": `Seç`,
  "selectAll": `Tümünü Seç`,
  "sortable": `Sıralanabilir sütun`
};
var $c7ab180b401e49ff$exports = {};
$c7ab180b401e49ff$exports = {
  "ascending": `висхідний`,
  "ascendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,
  "columnSize": (args) => `${args.value} пікс.`,
  "descending": `низхідний`,
  "descendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,
  "select": `Вибрати`,
  "selectAll": `Вибрати все`,
  "sortable": `сортувальний стовпець`
};
var $1648ec00941567f3$exports = {};
$1648ec00941567f3$exports = {
  "ascending": `升序`,
  "ascendingSort": (args) => `按列 ${args.columnName} 升序排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `降序`,
  "descendingSort": (args) => `按列 ${args.columnName} 降序排序`,
  "select": `选择`,
  "selectAll": `全选`,
  "sortable": `可排序的列`
};
var $b26f22384b3c1526$exports = {};
$b26f22384b3c1526$exports = {
  "ascending": `遞增`,
  "ascendingSort": (args) => `已依據「${args.columnName}」欄遞增排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `遞減`,
  "descendingSort": (args) => `已依據「${args.columnName}」欄遞減排序`,
  "select": `選取`,
  "selectAll": `全選`,
  "sortable": `可排序的欄`
};
$ae7e9c471762b4d3$exports = {
  "ar-AE": $ce3de3ff2fd66848$exports,
  "bg-BG": $cb80dcce530985b9$exports,
  "cs-CZ": $68ac86749db4c0fb$exports,
  "da-DK": $9a6cbac08487e661$exports,
  "de-DE": $c963661d89486e72$exports,
  "el-GR": $ac03861c6e8605f4$exports,
  "en-US": $09e6b82e0d6e466a$exports,
  "es-ES": $8cc39eb66c2bf220$exports,
  "et-EE": $4e11db3c25a38112$exports,
  "fi-FI": $da1e751a92575e02$exports,
  "fr-FR": $1b5d6c6c47d55106$exports,
  "he-IL": $7c18ba27b86d3308$exports,
  "hr-HR": $2cb40998e20e8a46$exports,
  "hu-HU": $189e23eec1d6aa3a$exports,
  "it-IT": $3c5ec8e4f015dfd0$exports,
  "ja-JP": $d021d50e6b315ebb$exports,
  "ko-KR": $52535c35c24ec937$exports,
  "lt-LT": $b37ee03672edfd1d$exports,
  "lv-LV": $c7df6686b4189d56$exports,
  "nb-NO": $da07fe8ec87e6b68$exports,
  "nl-NL": $64b7e390f5791490$exports,
  "pl-PL": $2a03621e773f1678$exports,
  "pt-BR": $0a79c0aba9e5ecc6$exports,
  "pt-PT": $de7b4d0f7dc86fc8$exports,
  "ro-RO": $28ea7e849d77bd1c$exports,
  "ru-RU": $9a09321cf046b187$exports,
  "sk-SK": $5afe469a63fcac7b$exports,
  "sl-SI": $2956757ac31a7ce2$exports,
  "sr-SP": $cedee0e66b175529$exports,
  "sv-SE": $6db19998ba4427da$exports,
  "tr-TR": $166b7c9cc1adb1a1$exports,
  "uk-UA": $c7ab180b401e49ff$exports,
  "zh-CN": $1648ec00941567f3$exports,
  "zh-TW": $b26f22384b3c1526$exports
};
class $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $d1c300d9c497e402$export$de9feff04fda126e {
  isCell(node2) {
    return node2.type === "cell" || node2.type === "rowheader" || node2.type === "column";
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let child = [
        ...startItem.childNodes
      ][0];
      if (child)
        return child.key;
      let firstKey = this.getFirstKey();
      if (firstKey == null)
        return;
      let firstItem = this.collection.getItem(firstKey);
      return [
        ...firstItem.childNodes
      ][startItem.index].key;
    }
    return super.getKeyBelow(key);
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let parent = this.collection.getItem(startItem.parentKey);
      if (parent && parent.type === "column")
        return parent.key;
      return;
    }
    let superKey = super.getKeyAbove(key);
    if (superKey != null && this.collection.getItem(superKey).type !== "headerrow")
      return superKey;
    if (this.isCell(startItem))
      return this.collection.columns[startItem.index].key;
    return this.collection.columns[0].key;
  }
  findNextColumnKey(column2) {
    let key = this.findNextKey(
      column2.key,
      (item) => item.type === "column"
    );
    if (key != null)
      return key;
    let row = this.collection.headerRows[column2.level];
    for (let item1 of row.childNodes) {
      if (item1.type === "column")
        return item1.key;
    }
  }
  findPreviousColumnKey(column2) {
    let key = this.findPreviousKey(
      column2.key,
      (item) => item.type === "column"
    );
    if (key != null)
      return key;
    let row = this.collection.headerRows[column2.level];
    let childNodes = [
      ...row.childNodes
    ];
    for (let i2 = childNodes.length - 1; i2 >= 0; i2--) {
      let item = childNodes[i2];
      if (item.type === "column")
        return item.key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);
    return super.getKeyRightOf(key);
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);
    return super.getKeyLeftOf(key);
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    if (key == null)
      return null;
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      for (let cell of item.childNodes) {
        let column2 = collection.columns[cell.index];
        if (collection.rowHeaderColumnKeys.has(column2.key) && cell.textValue) {
          let substring = cell.textValue.slice(0, search.length);
          if (this.collator.compare(substring, search) === 0) {
            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;
            return fromItem.type === "cell" ? cell.key : item.key;
          }
        }
      }
      key = this.getKeyBelow(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
}
function $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {
  let { keyboardDelegate, isVirtualized, layout } = props;
  let collator = $325a3faab7a68acd$export$a16aca283550c30d$2({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7$2();
  let delegate = reactExports.useMemo(
    () => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({
      collection: state.collection,
      disabledKeys: state.disabledKeys,
      ref: ref1,
      direction,
      collator,
      layout
    }),
    [
      keyboardDelegate,
      state.collection,
      state.disabledKeys,
      ref1,
      direction,
      collator,
      layout
    ]
  );
  let id2 = $bdb11010cef70236$export$f680877a34711e37$1(props.id);
  $2140fb2337097f2d$export$552312adfd451dab.set(state, id2);
  let { gridProps } = $83c6e2eafa584c67$export$f6b86a04e5d66d90({
    ...props,
    id: id2,
    keyboardDelegate: delegate,
    getRowText(key) {
      let added = state.collection.getItem(key);
      if (!added)
        return "";
      if (added.textValue != null)
        return added.textValue;
      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;
      if (rowHeaderColumnKeys) {
        let text = [];
        for (let cell of added.childNodes) {
          let column2 = state.collection.columns[cell.index];
          if (rowHeaderColumnKeys.has(column2.key) && cell.textValue)
            text.push(cell.textValue);
          if (text.length === rowHeaderColumnKeys.size)
            break;
        }
        return text.join(" ");
      }
      return "";
    }
  }, state, ref1);
  if (isVirtualized)
    gridProps["aria-rowcount"] = state.collection.size + state.collection.headerRows.length;
  let { column: column1, direction: sortDirection } = state.sortDescriptor || {};
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1$1(/* @__PURE__ */ $parcel$interopDefault$1($ae7e9c471762b4d3$exports));
  let sortDescription = reactExports.useMemo(() => {
    var ref;
    let columnName = (ref = state.collection.columns.find(
      (c2) => c2.key === column1
    )) === null || ref === void 0 ? void 0 : ref.textValue;
    return sortDirection && column1 ? stringFormatter.format(`${sortDirection}Sort`, {
      columnName
    }) : void 0;
  }, [
    sortDirection,
    column1,
    state.collection.columns
  ]);
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1(sortDescription);
  $4f58c5f72bcf79f7$export$496315a1608d9602(() => {
    $319e236875307eab$export$a9b970dcc4ae71a9(sortDescription, "assertive", 500);
  }, [
    sortDescription
  ]);
  return {
    gridProps: $3ef42575df84b30b$export$9d1611c77c2fe928(
      gridProps,
      descriptionProps,
      // If table is empty, make sure the table is tabbable
      state.collection.size === 0 && {
        tabIndex: 0
      },
      {
        // merge sort description with long press information
        "aria-describedby": [
          descriptionProps["aria-describedby"],
          gridProps["aria-describedby"]
        ].filter(Boolean).join(" ")
      }
    )
  };
}
function $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {
  var ref1, ref2;
  let { node: node2 } = props;
  let allowsSorting = node2.props.allowsSorting;
  let { gridCellProps } = $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c({
    ...props,
    focusMode: node2.props.isSelectionCell || props.hasMenu || node2.props.allowsSorting ? "child" : "cell"
  }, state, ref);
  let isSelectionCellDisabled = node2.props.isSelectionCell && state.selectionManager.selectionMode === "single";
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad21({
    isDisabled: !allowsSorting || isSelectionCellDisabled,
    onPress() {
      state.sort(node2.key);
    },
    ref
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c({}, ref);
  if (props.hasMenu)
    pressProps = {};
  let ariaSort = null;
  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node2.key;
  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction;
  if (node2.props.allowsSorting && !$c87311424ea30a05$export$a11b0059900ceec8$1())
    ariaSort = isSortedColumn ? sortDirection : "none";
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1$1(/* @__PURE__ */ $parcel$interopDefault$1($ae7e9c471762b4d3$exports));
  let sortDescription;
  if (allowsSorting) {
    sortDescription = `${stringFormatter.format("sortable")}`;
    if (isSortedColumn && sortDirection && $c87311424ea30a05$export$a11b0059900ceec8$1())
      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;
  }
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1(sortDescription);
  return {
    columnHeaderProps: {
      ...$3ef42575df84b30b$export$9d1611c77c2fe928(
        gridCellProps,
        pressProps,
        focusableProps,
        descriptionProps,
        // If the table is empty, make all column headers untabbable or programatically focusable
        state.collection.size === 0 && {
          tabIndex: null
        }
      ),
      role: "columnheader",
      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node2.key),
      "aria-colspan": node2.colspan && node2.colspan > 1 ? node2.colspan : null,
      "aria-sort": ariaSort
    }
  };
}
function $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {
  let { node: node2 } = props;
  let { rowProps, isPressed } = $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref);
  return {
    rowProps: {
      ...rowProps,
      "aria-labelledby": $2140fb2337097f2d$export$85069b70317f543(state, node2.key)
    },
    isPressed
  };
}
function $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {
  let { node: node2, isVirtualized } = props;
  let rowProps = {
    role: "row"
  };
  if (isVirtualized)
    rowProps["aria-rowindex"] = node2.index + 1;
  return {
    rowProps
  };
}
function $7713593715703b24$export$49571c903d73624c(props, state, ref) {
  let { gridCellProps, isPressed } = $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref);
  let columnKey = props.node.column.key;
  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {
    gridCellProps.role = "rowheader";
    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);
  }
  return {
    gridCellProps,
    isPressed
  };
}
function $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {
  let { key } = props;
  const { checkboxProps } = $7cb39d07f245a780$export$70e2eed1a92976ad(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`
    }
  };
}
function $2a795c53a101c542$export$1003db6a7e384b99(state) {
  let { isEmpty: isEmpty2, isSelectAll, selectionMode } = state.selectionManager;
  const stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1$1(/* @__PURE__ */ $parcel$interopDefault$1($ae7e9c471762b4d3$exports));
  return {
    checkboxProps: {
      "aria-label": stringFormatter.format(selectionMode === "single" ? "select" : "selectAll"),
      isSelected: isSelectAll,
      isDisabled: selectionMode !== "multiple" || state.collection.size === 0,
      isIndeterminate: !isEmpty2 && !isSelectAll,
      onChange: () => state.selectionManager.toggleSelectAll()
    }
  };
}
function $0047e6c294ea075f$export$6fb1613bd7b28198() {
  return $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf();
}
function $c1d7fb2ec91bae71$var$Item(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),
    *childNodes() {
      if (childItems)
        for (let child1 of childItems)
          yield {
            type: "item",
            value: child1
          };
      else if (title) {
        let items = [];
        React.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && React.Children.count(props.children) > 0)
    return true;
  return false;
}
let $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;
function $9fc4852771d079eb$var$Section(props) {
  return null;
}
$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode2(props) {
  let { children, title, items: items1 } = props;
  yield {
    type: "section",
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items1)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items1)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items = [];
        React.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
let $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;
class $eb2240fc39a57fa5$export$bf788dd355e3a401 {
  build(props, context) {
    this.context = context;
    return $eb2240fc39a57fa5$var$iterable(
      () => this.iterateCollection(props)
    );
  }
  *iterateCollection(props) {
    let { children, items } = props;
    if (typeof children === "function") {
      if (!items)
        throw new Error("props.children was a function but props.items is missing");
      for (let item of props.items)
        yield* this.getFullNode({
          value: item
        }, {
          renderer: children
        });
    } else {
      let items2 = [];
      React.Children.forEach(children, (child) => {
        items2.push(child);
      });
      let index2 = 0;
      for (let item of items2) {
        let nodes = this.getFullNode({
          element: item,
          index: index2
        }, {});
        for (let node2 of nodes) {
          index2++;
          yield node2;
        }
      }
    }
  }
  getKey(item, partialNode, state, parentKey) {
    if (item.key != null)
      return item.key;
    if (partialNode.type === "cell" && partialNode.key != null)
      return `${parentKey}${partialNode.key}`;
    let v2 = partialNode.value;
    if (v2 != null) {
      var _key;
      let key = (_key = v2.key) !== null && _key !== void 0 ? _key : v2.id;
      if (key == null)
        throw new Error("No key found for item");
      return key;
    }
    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;
  }
  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }
  *getFullNode(partialNode, state, parentKey, parentNode) {
    let element = partialNode.element;
    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);
      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }
      element = state.renderer(partialNode.value);
    }
    if (React.isValidElement(element)) {
      let type = element.type;
      if (typeof type !== "function" && typeof type.getCollectionNode !== "function") {
        let name = typeof element.type === "function" ? element.type.name : element.type;
        throw new Error(`Unknown element <${name}> in collection.`);
      }
      let childNodes = type.getCollectionNode(element.props, this.context);
      let index2 = partialNode.index;
      let result = childNodes.next();
      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index2;
        let nodeKey = childNode.key;
        if (!nodeKey)
          nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        let nodes = this.getFullNode({
          ...childNode,
          key: nodeKey,
          index: index2,
          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)
        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);
        let children = [
          ...nodes
        ];
        for (let node3 of children) {
          node3.value = childNode.value || partialNode.value;
          if (node3.value)
            this.cache.set(node3.value, node3);
          if (partialNode.type && node3.type !== partialNode.type)
            throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node3.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);
          index2++;
          yield node3;
        }
        result = childNodes.next(children);
      }
      return;
    }
    if (partialNode.key == null)
      return;
    let builder = this;
    let node2 = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: partialNode.value,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: partialNode.textValue,
      "aria-label": partialNode["aria-label"],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes,
      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {
        if (!partialNode.hasChildNodes)
          return;
        let index2 = 0;
        for (let child of partialNode.childNodes()) {
          if (child.key != null)
            child.key = `${node2.key}${child.key}`;
          child.index = index2;
          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node2.key, node2);
          for (let node1 of nodes) {
            index2++;
            yield node1;
          }
        }
      })
    };
    yield node2;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
}
function $eb2240fc39a57fa5$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache)
        yield item;
      if (!iterable)
        iterable = iterator();
      for (let item1 of iterable) {
        cache.push(item1);
        yield item1;
      }
    }
  };
}
function $eb2240fc39a57fa5$var$compose(outer, inner) {
  if (outer && inner)
    return (element) => outer(inner(element));
  if (outer)
    return outer;
  if (inner)
    return inner;
}
function $eb2240fc39a57fa5$var$capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}
function $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context, invalidators = []) {
  let builder = reactExports.useMemo(
    () => new $eb2240fc39a57fa5$export$bf788dd355e3a401(),
    []
  );
  let prev2 = reactExports.useRef(null);
  return reactExports.useMemo(() => {
    let nodes = builder.build(props, context);
    prev2.current = factory(nodes, prev2.current);
    return prev2.current;
  }, [
    builder,
    props.children,
    props.items,
    context,
    ...invalidators
  ]);
}
const $453cc9f0df89c0a5$var$cache = /* @__PURE__ */ new WeakMap();
function $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {
  let count = $453cc9f0df89c0a5$var$cache.get(collection);
  if (count != null)
    return count;
  count = 0;
  for (let item of collection)
    if (item.type === "section")
      count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);
    else
      count++;
  $453cc9f0df89c0a5$var$cache.set(collection, count);
  return count;
}
function $c5a24bc478652b5f$export$1005530eda016c13$1(node2, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node2.key);
  return node2.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71$1(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2$1(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2$1(iterable, index2) {
  if (index2 < 0)
    return void 0;
  let i2 = 0;
  for (let item of iterable) {
    if (i2 === index2)
      return item;
    i2++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf(iterable) {
  let lastItem = void 0;
  for (let value of iterable)
    lastItem = value;
  return lastItem;
}
function $c5a24bc478652b5f$export$1005530eda016c13(node2, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node2.key);
  return node2.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, index2) {
  if (index2 < 0)
    return void 0;
  let i2 = 0;
  for (let item of iterable) {
    if (i2 === index2)
      return item;
    i2++;
  }
}
function $c5a24bc478652b5f$export$8c434b3a7a4dad6(collection, a2, b2) {
  if (a2.parentKey === b2.parentKey)
    return a2.index - b2.index;
  let aAncestors = $c5a24bc478652b5f$var$getAncestors(collection, a2);
  let bAncestors = $c5a24bc478652b5f$var$getAncestors(collection, b2);
  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a3, i2) => a3 !== bAncestors[i2]);
  if (firstNonMatchingAncestor !== -1) {
    a2 = aAncestors[firstNonMatchingAncestor];
    b2 = bAncestors[firstNonMatchingAncestor];
    return a2.index - b2.index;
  }
  return -1;
}
function $c5a24bc478652b5f$var$getAncestors(collection, node2) {
  let parents = [];
  while ((node2 === null || node2 === void 0 ? void 0 : node2.parentKey) != null) {
    node2 = collection.getItem(node2.parentKey);
    parents.unshift(node2);
  }
  return parents;
}
class $e40ea825a81a3709$export$52baac22726c72bf extends Set {
  constructor(keys, anchorKey, currentKey) {
    super(keys);
    if (keys instanceof $e40ea825a81a3709$export$52baac22726c72bf) {
      this.anchorKey = anchorKey || keys.anchorKey;
      this.currentKey = currentKey || keys.currentKey;
    } else {
      this.anchorKey = anchorKey;
      this.currentKey = currentKey;
    }
  }
}
function $7af3f5b51489e0b5$var$equalSets(setA, setB) {
  if (setA.size !== setB.size)
    return false;
  for (let item of setA) {
    if (!setB.has(item))
      return false;
  }
  return true;
}
function $7af3f5b51489e0b5$export$253fe78d46329472(props) {
  let { selectionMode = "none", disallowEmptySelection, allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = "toggle", disabledBehavior = "all" } = props;
  let isFocusedRef = reactExports.useRef(false);
  let [, setFocused] = reactExports.useState(false);
  let focusedKeyRef = reactExports.useRef(null);
  let childFocusStrategyRef = reactExports.useRef(null);
  let [, setFocusedKey] = reactExports.useState(null);
  let selectedKeysProp = reactExports.useMemo(() => $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [
    props.selectedKeys
  ]);
  let defaultSelectedKeys = reactExports.useMemo(() => $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new $e40ea825a81a3709$export$52baac22726c72bf()), [
    props.defaultSelectedKeys
  ]);
  let [selectedKeys, setSelectedKeys] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);
  let disabledKeysProp = reactExports.useMemo(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let [selectionBehavior, setSelectionBehavior] = reactExports.useState(selectionBehaviorProp);
  if (selectionBehaviorProp === "replace" && selectionBehavior === "toggle" && typeof selectedKeys === "object" && selectedKeys.size === 0)
    setSelectionBehavior("replace");
  let lastSelectionBehavior = reactExports.useRef(selectionBehaviorProp);
  reactExports.useEffect(() => {
    if (selectionBehaviorProp !== lastSelectionBehavior.current) {
      setSelectionBehavior(selectionBehaviorProp);
      lastSelectionBehavior.current = selectionBehaviorProp;
    }
  }, [
    selectionBehaviorProp
  ]);
  return {
    selectionMode,
    disallowEmptySelection,
    selectionBehavior,
    setSelectionBehavior,
    get isFocused() {
      return isFocusedRef.current;
    },
    setFocused(f2) {
      isFocusedRef.current = f2;
      setFocused(f2);
    },
    get focusedKey() {
      return focusedKeyRef.current;
    },
    get childFocusStrategy() {
      return childFocusStrategyRef.current;
    },
    setFocusedKey(k2, childFocusStrategy = "first") {
      focusedKeyRef.current = k2;
      childFocusStrategyRef.current = childFocusStrategy;
      setFocusedKey(k2);
    },
    selectedKeys,
    setSelectedKeys(keys) {
      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys))
        setSelectedKeys(keys);
    },
    disabledKeys: disabledKeysProp,
    disabledBehavior
  };
}
function $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {
  if (!selection)
    return defaultValue;
  return selection === "all" ? "all" : new $e40ea825a81a3709$export$52baac22726c72bf(selection);
}
class $d496c0a20b6e58ec$export$6c8a5aaad13c9852 {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(selectionBehavior) {
    this.state.setSelectionBehavior(selectionBehavior);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(isFocused) {
    this.state.setFocused(isFocused);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(key, childFocusStrategy) {
    if (key == null || this.collection.getItem(key))
      this.state.setFocusedKey(key, childFocusStrategy);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(key) {
    if (this.state.selectionMode === "none")
      return false;
    key = this.getKey(key);
    return this.state.selectedKeys === "all" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty)
      return false;
    if (this.state.selectedKeys === "all")
      return true;
    if (this._isSelectAll != null)
      return this._isSelectAll;
    let allKeys = this.getSelectAllKeys();
    let selectedKeys = this.state.selectedKeys;
    this._isSelectAll = allKeys.every((k2) => selectedKeys.has(k2));
    return this._isSelectAll;
  }
  get firstSelectedKey() {
    let first = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!first || item && $c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, item, first) < 0)
        first = item;
    }
    return first === null || first === void 0 ? void 0 : first.key;
  }
  get lastSelectedKey() {
    let last = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!last || item && $c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, item, last) > 0)
        last = item;
    }
    return last === null || last === void 0 ? void 0 : last.key;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(toKey) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      this.replaceSelection(toKey);
      return;
    }
    toKey = this.getKey(toKey);
    let selection;
    if (this.state.selectedKeys === "all")
      selection = new $e40ea825a81a3709$export$52baac22726c72bf([
        toKey
      ], toKey, toKey);
    else {
      let selectedKeys = this.state.selectedKeys;
      let anchorKey = selectedKeys.anchorKey || toKey;
      selection = new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys, anchorKey, toKey);
      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))
        selection.delete(key);
      for (let key1 of this.getKeyRange(toKey, anchorKey))
        if (this.canSelectItem(key1))
          selection.add(key1);
    }
    this.state.setSelectedKeys(selection);
  }
  getKeyRange(from2, to) {
    let fromItem = this.collection.getItem(from2);
    let toItem = this.collection.getItem(to);
    if (fromItem && toItem) {
      if ($c5a24bc478652b5f$export$8c434b3a7a4dad6(this.collection, fromItem, toItem) <= 0)
        return this.getKeyRangeInternal(from2, to);
      return this.getKeyRangeInternal(to, from2);
    }
    return [];
  }
  getKeyRangeInternal(from2, to) {
    let keys = [];
    let key = from2;
    while (key) {
      let item = this.collection.getItem(key);
      if (item && item.type === "item" || item.type === "cell" && this.allowsCellSelection)
        keys.push(key);
      if (key === to)
        return keys;
      key = this.collection.getKeyAfter(key);
    }
    return [];
  }
  getKey(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return key;
    if (item.type === "cell" && this.allowsCellSelection)
      return key;
    while (item.type !== "item" && item.parentKey != null)
      item = this.collection.getItem(item.parentKey);
    if (!item || item.type !== "item")
      return null;
    return item.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(key) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single" && !this.isSelected(key)) {
      this.replaceSelection(key);
      return;
    }
    key = this.getKey(key);
    if (key == null)
      return;
    let keys = new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    if (keys.has(key))
      keys.delete(key);
    else if (this.canSelectItem(key)) {
      keys.add(key);
      keys.anchorKey = key;
      keys.currentKey = key;
    }
    if (this.disallowEmptySelection && keys.size === 0)
      return;
    this.state.setSelectedKeys(keys);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(key) {
    if (this.selectionMode === "none")
      return;
    key = this.getKey(key);
    if (key == null)
      return;
    let selection = this.canSelectItem(key) ? new $e40ea825a81a3709$export$52baac22726c72bf([
      key
    ], key, key) : new $e40ea825a81a3709$export$52baac22726c72bf();
    this.state.setSelectedKeys(selection);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(keys) {
    if (this.selectionMode === "none")
      return;
    let selection = new $e40ea825a81a3709$export$52baac22726c72bf();
    for (let key of keys) {
      key = this.getKey(key);
      if (key != null) {
        selection.add(key);
        if (this.selectionMode === "single")
          break;
      }
    }
    this.state.setSelectedKeys(selection);
  }
  getSelectAllKeys() {
    let keys = [];
    let addKeys = (key) => {
      while (key) {
        if (this.canSelectItem(key)) {
          let item = this.collection.getItem(key);
          if (item.type === "item")
            keys.push(key);
          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== "item"))
            addKeys($c5a24bc478652b5f$export$fbdeaa6a76694f71($c5a24bc478652b5f$export$1005530eda016c13(item, this.collection)).key);
        }
        key = this.collection.getKeyAfter(key);
      }
    };
    addKeys(this.collection.getFirstKey());
    return keys;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    if (!this.isSelectAll && this.selectionMode === "multiple")
      this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    if (!this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0))
      this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    if (this.isSelectAll)
      this.clearSelection();
    else
      this.selectAll();
  }
  select(key, e2) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      if (this.isSelected(key) && !this.disallowEmptySelection)
        this.toggleSelection(key);
      else
        this.replaceSelection(key);
    } else if (this.selectionBehavior === "toggle" || e2 && (e2.pointerType === "touch" || e2.pointerType === "virtual"))
      this.toggleSelection(key);
    else
      this.replaceSelection(key);
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(selection) {
    if (selection === this.state.selectedKeys)
      return true;
    let selectedKeys = this.selectedKeys;
    if (selection.size !== selectedKeys.size)
      return false;
    for (let key of selection) {
      if (!selectedKeys.has(key))
        return false;
    }
    for (let key1 of selectedKeys) {
      if (!selection.has(key1))
        return false;
    }
    return true;
  }
  canSelectItem(key) {
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(key))
      return false;
    let item = this.collection.getItem(key);
    if (!item || item.type === "cell" && !this.allowsCellSelection)
      return false;
    return true;
  }
  isDisabled(key) {
    return this.state.disabledKeys.has(key) && this.state.disabledBehavior === "all";
  }
  constructor(collection, state, options) {
    this.collection = collection;
    this.state = state;
    var _options_allowsCellSelection;
    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;
    this._isSelectAll = null;
  }
}
function $62967d126f3aa823$export$4007ac09ff9c68ed(props) {
  let { collection, focusMode } = props;
  let selectionState = $7af3f5b51489e0b5$export$253fe78d46329472(props);
  let disabledKeys = reactExports.useMemo(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let setFocusedKey = selectionState.setFocusedKey;
  selectionState.setFocusedKey = (key, child) => {
    if (focusMode === "cell" && key != null) {
      let item = collection.getItem(key);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item") {
        var _getLastItem, _getFirstItem;
        let children = $c5a24bc478652b5f$export$1005530eda016c13$1(item, collection);
        if (child === "last")
          key = (_getLastItem = $c5a24bc478652b5f$export$7475b2c64539e4cf(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;
        else
          key = (_getFirstItem = $c5a24bc478652b5f$export$fbdeaa6a76694f71$1(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;
      }
    }
    setFocusedKey(key, child);
  };
  let selectionManager = reactExports.useMemo(() => new $d496c0a20b6e58ec$export$6c8a5aaad13c9852(collection, selectionState), [
    collection,
    selectionState
  ]);
  const cachedCollection = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {
      const node2 = cachedCollection.current.getItem(selectionState.focusedKey);
      const parentNode = node2.parentKey != null && (node2.type === "cell" || node2.type === "rowheader" || node2.type === "column") ? cachedCollection.current.getItem(node2.parentKey) : node2;
      const cachedRows = cachedCollection.current.rows;
      const rows = collection.rows;
      const diff = cachedRows.length - rows.length;
      let index2 = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);
      let newRow;
      while (index2 >= 0) {
        if (!selectionManager.isDisabled(rows[index2].key)) {
          newRow = rows[index2];
          break;
        }
        if (index2 < rows.length - 1)
          index2++;
        else {
          if (index2 > parentNode.index)
            index2 = parentNode.index;
          index2--;
        }
      }
      if (newRow) {
        const childNodes = newRow.hasChildNodes ? [
          ...$c5a24bc478652b5f$export$1005530eda016c13$1(newRow, collection)
        ] : [];
        const keyToFocus = newRow.hasChildNodes && parentNode !== node2 && node2.index < childNodes.length ? childNodes[node2.index].key : newRow.key;
        selectionState.setFocusedKey(keyToFocus);
      } else
        selectionState.setFocusedKey(null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager,
    selectionState,
    selectionState.focusedKey
  ]);
  return {
    collection,
    disabledKeys,
    isKeyboardNavigationDisabled: false,
    selectionManager
  };
}
let $16805b1b18093c5f$var$_Symbol_iterator = Symbol.iterator;
class $16805b1b18093c5f$export$de3fdf6493c353d {
  *[$16805b1b18093c5f$var$_Symbol_iterator]() {
    yield* [
      ...this.rows
    ];
  }
  get size() {
    return [
      ...this.rows
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.prevKey : null;
  }
  getKeyAfter(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.nextKey : null;
  }
  getFirstKey() {
    var _2;
    return (_2 = [
      ...this.rows
    ][0]) === null || _2 === void 0 ? void 0 : _2.key;
  }
  getLastKey() {
    var _rows_;
    let rows = [
      ...this.rows
    ];
    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node2 = this.keyMap.get(key);
    return (node2 === null || node2 === void 0 ? void 0 : node2.childNodes) || [];
  }
  constructor(opts) {
    _defineProperty(this, "keyMap", /* @__PURE__ */ new Map());
    this.keyMap = /* @__PURE__ */ new Map();
    this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;
    this.rows = [];
    let visit = (node2) => {
      let prevNode = this.keyMap.get(node2.key);
      if (opts.visitNode)
        node2 = opts.visitNode(node2);
      this.keyMap.set(node2.key, node2);
      let childKeys = /* @__PURE__ */ new Set();
      let last2;
      for (let child of node2.childNodes) {
        if (child.type === "cell" && child.parentKey == null)
          child.parentKey = node2.key;
        childKeys.add(child.key);
        if (last2) {
          last2.nextKey = child.key;
          child.prevKey = last2.key;
        } else
          child.prevKey = null;
        visit(child);
        last2 = child;
      }
      if (last2)
        last2.nextKey = null;
      if (prevNode) {
        for (let child1 of prevNode.childNodes)
          if (!childKeys.has(child1.key))
            remove(child1);
      }
    };
    let remove = (node2) => {
      this.keyMap.delete(node2.key);
      for (let child of node2.childNodes)
        if (this.keyMap.get(child.key) === child)
          remove(child);
    };
    let last;
    opts.items.forEach((node2, i2) => {
      let rowNode = {
        level: 0,
        key: "row-" + i2,
        type: "row",
        value: void 0,
        hasChildNodes: true,
        childNodes: [
          ...node2.childNodes
        ],
        rendered: void 0,
        textValue: void 0,
        ...node2,
        index: i2
      };
      if (last) {
        last.nextKey = rowNode.key;
        rowNode.prevKey = last.key;
      } else
        rowNode.prevKey = null;
      this.rows.push(rowNode);
      visit(rowNode);
      last = rowNode;
    });
    if (last)
      last.nextKey = null;
  }
}
const $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY = "row-header-column-" + Math.random().toString(36).slice(2);
function $788781baa30117fa$var$buildHeaderRows(keyMap, columnNodes) {
  let columns = [];
  let seen2 = /* @__PURE__ */ new Map();
  for (let column2 of columnNodes) {
    let parentKey = column2.parentKey;
    let col = [
      column2
    ];
    while (parentKey) {
      let parent = keyMap.get(parentKey);
      if (seen2.has(parent)) {
        parent.colspan++;
        let { column: column3, index: index2 } = seen2.get(parent);
        if (index2 > col.length)
          break;
        for (let i3 = index2; i3 < col.length; i3++)
          column3.splice(i3, 0, null);
        for (let i1 = col.length; i1 < column3.length; i1++)
          if (column3[i1] && seen2.has(column3[i1]))
            seen2.get(column3[i1]).index = i1;
      } else {
        parent.colspan = 1;
        col.push(parent);
        seen2.set(parent, {
          column: col,
          index: col.length - 1
        });
      }
      parentKey = parent.parentKey;
    }
    columns.push(col);
    column2.index = columns.length - 1;
  }
  let maxLength = Math.max(...columns.map(
    (c2) => c2.length
  ));
  let headerRows = Array(maxLength).fill(0).map(
    () => []
  );
  let colIndex = 0;
  for (let column1 of columns) {
    let i3 = maxLength - 1;
    for (let item of column1) {
      if (item) {
        let row = headerRows[i3];
        let rowLength = row.reduce(
          (p2, c2) => p2 + c2.colspan,
          0
        );
        if (rowLength < colIndex) {
          let placeholder = {
            type: "placeholder",
            key: "placeholder-" + item.key,
            colspan: colIndex - rowLength,
            index: rowLength,
            value: null,
            rendered: null,
            level: i3,
            hasChildNodes: false,
            childNodes: [],
            textValue: null
          };
          if (row.length > 0) {
            row[row.length - 1].nextKey = placeholder.key;
            placeholder.prevKey = row[row.length - 1].key;
          }
          row.push(placeholder);
        }
        if (row.length > 0) {
          row[row.length - 1].nextKey = item.key;
          item.prevKey = row[row.length - 1].key;
        }
        item.level = i3;
        item.colIndex = colIndex;
        row.push(item);
      }
      i3--;
    }
    colIndex++;
  }
  let i2 = 0;
  for (let row1 of headerRows) {
    let rowLength = row1.reduce(
      (p2, c2) => p2 + c2.colspan,
      0
    );
    if (rowLength < columnNodes.length) {
      let placeholder = {
        type: "placeholder",
        key: "placeholder-" + row1[row1.length - 1].key,
        colspan: columnNodes.length - rowLength,
        index: rowLength,
        value: null,
        rendered: null,
        level: i2,
        hasChildNodes: false,
        childNodes: [],
        textValue: null,
        prevKey: row1[row1.length - 1].key
      };
      row1.push(placeholder);
    }
    i2++;
  }
  return headerRows.map((childNodes, index2) => {
    let row = {
      type: "headerrow",
      key: "headerrow-" + index2,
      index: index2,
      value: null,
      rendered: null,
      level: 0,
      hasChildNodes: true,
      childNodes,
      textValue: null
    };
    return row;
  });
}
var tmp$1 = Symbol.iterator;
class $788781baa30117fa$export$596e1b2e2cf93690 extends $16805b1b18093c5f$export$de3fdf6493c353d {
  *[tmp$1]() {
    yield* this.body.childNodes;
  }
  get size() {
    return [
      ...this.body.childNodes
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.prevKey : null;
  }
  getKeyAfter(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.nextKey : null;
  }
  getFirstKey() {
    var ref;
    return (ref = [
      ...this.body.childNodes
    ][0]) === null || ref === void 0 ? void 0 : ref.key;
  }
  getLastKey() {
    var ref;
    let rows = [
      ...this.body.childNodes
    ];
    return (ref = rows[rows.length - 1]) === null || ref === void 0 ? void 0 : ref.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, prev2, opts) {
    let rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    let body;
    let columns = [];
    if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY,
        value: null,
        textValue: "",
        level: 0,
        index: 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isSelectionCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    let rows = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node2) => {
      switch (node2.type) {
        case "body":
          body = node2;
          break;
        case "column":
          columnKeyMap.set(node2.key, node2);
          if (!node2.hasChildNodes) {
            columns.push(node2);
            if (node2.props.isRowHeader)
              rowHeaderColumnKeys.add(node2.key);
          }
          break;
        case "item":
          rows.push(node2);
          return;
      }
      for (let child of node2.childNodes)
        visit(child);
    };
    for (let node1 of nodes)
      visit(node1);
    let headerRows = $788781baa30117fa$var$buildHeaderRows(columnKeyMap, columns);
    headerRows.forEach(
      (row, i2) => rows.splice(i2, 0, row)
    );
    super({
      columnCount: columns.length,
      items: rows,
      visitNode: (node2) => {
        node2.column = columns[node2.index];
        return node2;
      }
    });
    this.columns = columns;
    this.rowHeaderColumnKeys = rowHeaderColumnKeys;
    this.body = body;
    this.headerRows = headerRows;
    if (this.rowHeaderColumnKeys.size === 0)
      this.rowHeaderColumnKeys.add(this.columns[(opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) ? 1 : 0].key);
  }
}
const $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {
  ascending: "descending",
  descending: "ascending"
};
function $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {
  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = reactExports.useState(false);
  let { selectionMode = "none" } = props;
  let context = reactExports.useMemo(
    () => ({
      showSelectionCheckboxes: props.showSelectionCheckboxes && selectionMode !== "none",
      selectionMode,
      columns: []
    }),
    [
      props.children,
      props.showSelectionCheckboxes,
      selectionMode
    ]
  );
  let collection = $7613b1592d41b092$export$6cd28814d92fa9c9(
    props,
    (nodes, prev2) => new $788781baa30117fa$export$596e1b2e2cf93690(nodes, prev2, context),
    context
  );
  let { disabledKeys, selectionManager } = $62967d126f3aa823$export$4007ac09ff9c68ed({
    ...props,
    collection
  });
  return {
    collection,
    disabledKeys,
    selectionManager,
    showSelectionCheckboxes: props.showSelectionCheckboxes || false,
    sortDescriptor: props.sortDescriptor,
    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,
    setKeyboardNavigationDisabled,
    sort(columnKey, direction) {
      var ref;
      props.onSortChange({
        column: columnKey,
        direction: direction !== null && direction !== void 0 ? direction : ((ref = props.sortDescriptor) === null || ref === void 0 ? void 0 : ref.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : "ascending"
      });
    }
  };
}
function $312ae3b56a94a86e$var$TableHeader(props) {
  return null;
}
$312ae3b56a94a86e$var$TableHeader.getCollectionNode = function* getCollectionNode3(props) {
  let { children, columns } = props;
  if (typeof children === "function") {
    if (!columns)
      throw new Error("props.children was a function but props.columns is missing");
    for (let column2 of columns)
      yield {
        type: "column",
        value: column2,
        renderer: children
      };
  } else {
    let columns2 = [];
    React.Children.forEach(children, (column2) => {
      columns2.push({
        type: "column",
        element: column2
      });
    });
    yield* columns2;
  }
};
let $312ae3b56a94a86e$export$f850895b287ef28e = $312ae3b56a94a86e$var$TableHeader;
function $4ae5314bf50db1a3$var$TableBody(props) {
  return null;
}
$4ae5314bf50db1a3$var$TableBody.getCollectionNode = function* getCollectionNode4(props) {
  let { children, items: items1 } = props;
  yield {
    type: "body",
    hasChildNodes: true,
    props,
    *childNodes() {
      if (typeof children === "function") {
        if (!items1)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items1)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items = [];
        React.Children.forEach(children, (item) => {
          items.push({
            type: "item",
            element: item
          });
        });
        yield* items;
      }
    }
  };
};
let $4ae5314bf50db1a3$export$76ccd210b9029917 = $4ae5314bf50db1a3$var$TableBody;
function $1cd244557c2f97d5$var$Column(props) {
  return null;
}
$1cd244557c2f97d5$var$Column.getCollectionNode = function* getCollectionNode5(props, context1) {
  let { title, children, childColumns: childColumns1 } = props;
  let rendered = title || children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"];
  let fullNodes = yield {
    type: "column",
    hasChildNodes: !!childColumns1 || title && React.Children.count(children) > 0,
    rendered,
    textValue,
    props,
    *childNodes() {
      if (childColumns1)
        for (let child1 of childColumns1)
          yield {
            type: "column",
            value: child1
          };
      else if (title) {
        let childColumns = [];
        React.Children.forEach(children, (child) => {
          childColumns.push({
            type: "column",
            element: child
          });
        });
        yield* childColumns;
      }
    },
    shouldInvalidate(newContext) {
      updateContext(newContext);
      return false;
    }
  };
  let updateContext = (context) => {
    for (let node2 of fullNodes)
      if (!node2.hasChildNodes)
        context.columns.push(node2);
  };
  updateContext(context1);
};
let $1cd244557c2f97d5$export$816b5d811295e6bc = $1cd244557c2f97d5$var$Column;
function $70d70eb16ea48428$var$Row(props) {
  return null;
}
$70d70eb16ea48428$var$Row.getCollectionNode = function* getCollectionNode6(props, context) {
  let { children, textValue } = props;
  yield {
    type: "item",
    props,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: true,
    *childNodes() {
      if (context.showSelectionCheckboxes && context.selectionMode !== "none")
        yield {
          type: "cell",
          key: "header",
          props: {
            isSelectionCell: true
          }
        };
      if (typeof children === "function")
        for (let column2 of context.columns)
          yield {
            type: "cell",
            element: children(column2.key),
            key: column2.key
            // this is combined with the row key by CollectionBuilder
          };
      else {
        let cells = [];
        React.Children.forEach(children, (cell) => {
          cells.push({
            type: "cell",
            element: cell
          });
        });
        if (cells.length !== context.columns.length)
          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);
        yield* cells;
      }
    },
    shouldInvalidate(newContext) {
      return newContext.columns.length !== context.columns.length || newContext.columns.some(
        (c2, i2) => c2.key !== context.columns[i2].key
      ) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.selectionMode !== context.selectionMode;
    }
  };
};
let $70d70eb16ea48428$export$b59bdbef9ce70de2 = $70d70eb16ea48428$var$Row;
function $941d1d9a6a28982a$var$Cell(props) {
  return null;
}
$941d1d9a6a28982a$var$Cell.getCollectionNode = function* getCollectionNode7(props) {
  let { children } = props;
  let textValue = props.textValue || (typeof children === "string" ? children : "") || props["aria-label"] || "";
  yield {
    type: "cell",
    props,
    rendered: children,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: false
  };
};
let $941d1d9a6a28982a$export$f6f0c3fe4ec306ea = $941d1d9a6a28982a$var$Cell;
const StyledTableHeaderRow = styled$3("tr", { ov: "visible" });
const StyledTableColumnHeader = styled$3("th", { height: "$14", cursor: "default", bg: "$accents0", color: "$accents7", fontSize: "$xs", textAlign: "left", position: "relative", "@motion": { transition: "none" }, "&:first-child": { pl: "$8", btlr: "$md", bblr: "$md" }, "&:last-child": { pr: "$8", btrr: "$md", bbrr: "$md" }, variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } }, animated: { false: { transition: "none" } }, allowsSorting: { true: { transition: "background 0.25s ease 0s, color 0.25s ease 0s", cursor: "pointer", "@motion": { transition: "none" }, "&:hover": { color: "$accents8", bg: "$accents1" } } } }, defaultVariants: { align: "left", animated: true }, compoundVariants: [{ animated: false, allowsSorting: true, css: { transition: "none" } }] }, cssFocusVisible);
const StyledTableHeaderCell = styled$3(StyledTableColumnHeader, cssFocusVisible);
const StyledTableFooter = styled$3("tfoot", { height: "$14", variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } } }, defaultVariants: { align: "right" } });
const StyledBaseTableCell = styled$3("td", {});
const StyledTableCell = styled$3(StyledBaseTableCell, { position: "relative", userSelect: "none", cursor: "default", py: "$5", pr: "$5", zIndex: "$2", ov: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis", "&:first-child": { pl: "$8" }, "&:last-child": { pr: "$8" }, "&:before": { zIndex: "-$1", transition: "background 0.25s ease 0s, opacity 0.25s ease 0s", content: '""', position: "absolute", size: "100%", top: 0, left: 0, opacity: 0, transform: "translateZ(0)", backfaceVisibility: "hidden" }, variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } }, isStatic: { true: { cursor: "text", userSelect: "text" } } } }, cssFocusVisible);
const StyledTableRow = styled$3("tr", { ov: "visible", color: "$text", variants: { isDisabled: { true: { color: "$accents3", pointerEvents: "none", cursor: "not-allowed" } }, isSelected: { true: { color: "$$tableRowTextColor", [`& ${StyledTableCell}:before`]: { opacity: 1, bg: "$$tableRowColor" } } } } }, cssFocusVisible);
const StyledTableRowGroup = styled$3("thead", { variants: { isFixed: { true: { display: "table", width: "100%", tableLayout: "fixed" } }, isInfinityScroll: { true: { display: "block", height: "100%", overflow: "auto", pb: "$10", [`& ${StyledTableRow}`]: { display: "table", width: "100%", tableLayout: "fixed" } } } }, defaultVariants: { isInfinityScroll: false } });
const StyledTableLoadingRow = styled$3("tr", { width: "100%", display: "flex", alignItems: "center", justifyContent: "center", height: "calc(100% - $space$14)", variants: { isAtEnd: { true: { height: "$space$18" } }, isAbsolute: { true: { position: "absolute", left: "0", top: "$10" } } } });
const StyledTable = styled$3("table", { borderCollapse: "separate", borderSpacing: 0, width: "100%", p: "$md $sm", "@motion": { [`& ${StyledTableCell}:before`]: { transition: "none" } }, variants: { animated: { false: { [`& ${StyledTableCell}:before`]: { transition: "none" } } }, color: { primary: { $$tableRowColor: "$colors$primaryLight", $$tableRowTextColor: "$colors$primaryLightContrast" }, secondary: { $$tableRowColor: "$colors$secondaryLight", $$tableRowTextColor: "$colors$secondaryLightContrast" }, success: { $$tableRowColor: "$colors$successLight", $$tableRowTextColor: "$colors$successLightContrast" }, warning: { $$tableRowColor: "$colors$warningLight", $$tableRowTextColor: "$colors$warningLightContrast" }, error: { $$tableRowColor: "$colors$errorLight", $$tableRowTextColor: "$colors$errorLightContrast" } }, striped: { true: { [`& ${StyledTableRow}[aria-selected=false]:nth-child(even)`]: { [`& ${StyledTableCell}`]: { bg: "$accents0" } }, [`& ${StyledTableRow}:nth-child(even)`]: { [`& ${StyledTableCell}:first-child`]: { br: "$lg 0 0 $lg" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $lg $lg 0" } } } }, sticked: { true: { p: 0, [`& ${StyledTableColumnHeader}:first-child`]: { br: "$lg 0 0 0" }, [`& ${StyledTableColumnHeader}:last-child`]: { br: "0 $lg 0 0" } } }, lineWeight: { light: { $$tableLineWeight: "$borderWeights$light" }, normal: { $$tableLineWeight: "$borderWeights$normal" }, bold: { $$tableLineWeight: "$borderWeights$bold" }, extrabold: { $$tableLineWeight: "$borderWeights$extrabold" }, black: { $$tableLineWeight: "$borderWeights$black" } }, headerLined: { true: { [`& ${StyledTableColumnHeader}`]: { position: "relative", bg: "transparent", "&:after": { content: "", position: "absolute", left: 0, right: 0, bottom: 0, height: "calc($$tableLineWeight * 1.5)", bg: "$accents1" }, "&:first-child": { ml: "$12", br: "0", "&:after": { left: "$space$md" } }, "&:last-child": { br: "0", "&:after": { right: "$space$md" } } } } }, lined: { true: { [`& ${StyledTableRow}:not(:last-child)`]: { position: "relative", [`& ${StyledTableCell}:after`]: { content: "", position: "absolute", bottom: 0, left: 0, right: 0, height: "$$tableLineWeight", bg: "$border" }, [`& ${StyledTableCell}:first-child`]: { "&:after": { left: "$space$md" } }, [`& ${StyledTableCell}:last-child`]: { "&:after": { right: "$space$md" } } }, [`& ${StyledTableRow}[aria-selected=true]:not(last-child)`]: { [`& ${StyledTableCell}:after`]: { bg: "$$tableRowTextColor", opacity: 0.3 } } } }, fixed: { true: { tableLayout: "fixed" } }, hoverable: { true: { [`& ${StyledTableCell}:first-child`]: { br: "$md 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $md $md 0" }, [`& ${StyledTableRow}`]: { cursor: "pointer" }, [`& ${StyledTableRow}[aria-selected=false]`]: { "&:hover": { [`& ${StyledTableCell}:before`]: { opacity: 1, bg: "$accents0" } } }, [`& ${StyledTableRow}[aria-selected=true]`]: { "&:hover": { [`& ${StyledTableCell}:before`]: { opacity: 0.8 } } } } }, isMultiple: { true: {} }, hasPagination: { true: {} }, shadow: { true: {} }, compact: { true: { [`& ${StyledTableCell}`]: { py: "$1" }, [`& ${StyledTableColumnHeader}`]: { height: "$12", "&:first-child": { br: "$sm 0 0 $sm" }, "&:last-child": { br: "0 $sm $sm 0" } } } } }, compoundVariants: [{ isMultiple: true, hoverable: true, css: { [`& ${StyledTableRow}:not(:first-child):not(:last-child)`]: { [`& ${StyledTableCell}:first-child`]: { br: 0 }, [`& ${StyledTableCell}:last-child`]: { br: 0 } }, [`& ${StyledTableRow}:first-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "$md 0 0 0" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $md 0 0" } }, [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 0 $md 0" } } } }, { isMultiple: true, hoverable: true, sticked: true, css: { [`& ${StyledTableRow}:first-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0" }, [`& ${StyledTableCell}:last-child`]: { br: "0" } } } }, { compact: true, shadow: true, css: { p: "$md $sm" } }, { compact: true, sticked: true, css: { p: 0 } }, { sticked: true, isMultiple: false, hoverable: true, hasPagination: false, css: { [`& ${StyledTableRow}:not(:last-child)`]: { [`& ${StyledTableCell}`]: { br: "0" } }, [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 0 $md 0" } } } }, { sticked: true, isMultiple: false, hoverable: true, hasPagination: true, css: { [`& ${StyledTableRow}`]: { [`& ${StyledTableCell}`]: { br: "0" } } } }, { sticked: true, hasPagination: true, css: { pb: "$5" } }, { sticked: true, hasPagination: true, isMultiple: true, hoverable: true, css: { [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0" }, [`& ${StyledTableCell}:last-child`]: { br: "0" } } } }], defaultVariants: { sticked: false, color: "primary", lineWeight: "light" } });
const StyledTableContainer = styled$3("div", { display: "flex", flexDirection: "column", br: "$xl", overflowX: "auto", overflowY: "hidden", variants: { shadow: { true: { bs: "$md" } }, bordered: { true: { borderStyle: "solid", borderColor: "$border" }, false: { bw: 0 } }, borderWeight: { light: { bw: "$light" }, normal: { bw: "$normal" }, bold: { bw: "$bold" }, extrabold: { bw: "$extrabold" }, black: { bw: "$black" } } }, defaultVariants: { shadow: true, borderWeight: "normal" } });
const c$a = n$a(({ children: r2, ...o2 }) => {
  const { rowGroupProps: m2 } = $0047e6c294ea075f$export$6fb1613bd7b28198();
  return jsxRuntimeExports.jsx(StyledTableRowGroup, { className: a$9("nextui-table-row-group", o2.className), ...o2, ...m2, children: r2 });
}, { as: "thead" });
const r$6 = styled$3("svg", { opacity: 0, transition: "$default", path: { fill: "$$tableRowTextColor" }, variants: { visible: { true: { opacity: 1 } }, ascending: { true: { transform: "rotate(180deg)" } } } });
const ICON_SIZE = 22;
const c$9 = (t2) => jsxRuntimeExports.jsx(r$6, { "aria-hidden": "true", className: "nextui-table-sort-icon", fill: "none", focusable: "false", height: 22, role: "presentation", viewBox: "0 0 24 24", width: 22, xmlns: "http://www.w3.org/2000/svg", ...t2, children: jsxRuntimeExports.jsx("path", { d: "M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z" }) });
const p$5 = React.forwardRef(({ column: r2, state: p2, ...f2 }, b2) => {
  var x2, h2;
  const v2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(b2, () => null == v2 ? void 0 : v2.current);
  const { columnHeaderProps: g2 } = $f329116d8ad0aba0$export$9514819a8c81e960({ node: r2 }, p2, v2), { isFocusVisible: j2, focusProps: y2 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), { hideHeader: N2, ...H2 } = r2.props;
  return jsxRuntimeExports.jsxs(StyledTableColumnHeader, { ref: v2, className: a$9("nextui-table-column-header", f2.className), colSpan: r2.colspan, isFocusVisible: j2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(f2, g2, y2, H2), children: [N2 ? jsxRuntimeExports.jsx($5c3e21d68f1c4674$export$439d29a4e110a164, { children: r2.rendered }) : r2.rendered, H2.allowsSorting && jsxRuntimeExports.jsx(c$9, { ascending: "ascending" === (null == (x2 = p2.sortDescriptor) ? void 0 : x2.direction), css: { position: "absolute", m: "0 $2", bottom: `calc(50% - ${ICON_SIZE / 2}px)` }, visible: (null == (h2 = p2.sortDescriptor) ? void 0 : h2.column) === r2.key })] });
});
p$5.displayName = "NextUI.TableColumnHeader", p$5.toString = () => ".nextui-table-column-header";
const d$5 = p$5;
const i = React.forwardRef(({ children: e2, item: i2, state: m2, ...n2 }, c2) => {
  const d2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(c2, () => null == d2 ? void 0 : d2.current);
  const { rowProps: f2 } = $f917ee10f4c32dab$export$1b95a7d2d517b841({ node: i2 });
  return jsxRuntimeExports.jsx(StyledTableHeaderRow, { ref: d2, className: a$9("nextui-table-header-row", n2.className), ...n2, ...f2, children: e2 });
});
i.displayName = "NextUI.TableHeaderRow", i.toString = () => ".nextui-table-header-row";
const h$2 = i;
const b$5 = React.forwardRef(({ column: e2, state: b2, color: d2, animated: f2, ...p2 }, x2) => {
  const h2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(x2, () => null == h2 ? void 0 : h2.current);
  const k2 = "single" === b2.selectionManager.selectionMode, { columnHeaderProps: y2 } = $f329116d8ad0aba0$export$9514819a8c81e960({ node: e2 }, b2, h2), { checkboxProps: N2 } = $2a795c53a101c542$export$1003db6a7e384b99(b2), { isFocusVisible: $2, focusProps: g2 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  return jsxRuntimeExports.jsx(StyledTableHeaderCell, { ref: h2, className: a$9("nextui-table-select-all-checkbox", p2.className), isFocusVisible: $2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(y2, g2, p2), children: k2 ? jsxRuntimeExports.jsx($5c3e21d68f1c4674$export$439d29a4e110a164, { children: N2["aria-label"] }) : jsxRuntimeExports.jsx(e$d, { ...N2, color: d2, css: { display: "inherit", $$checkboxBorderColor: "$colors$accents3" }, disableAnimation: !f2 }) });
});
b$5.displayName = "NextUI.TableSelectAllCheckbox", b$5.toString = () => ".nextui-table-select-all-checkbox";
const p$4 = b$5;
const o$3 = { footerAlign: "end", rowsPerPage: 0, currentPage: 1, animated: true };
const TableContext = React.createContext(o$3);
const useTableContext = () => React.useContext(TableContext);
const w$1 = { Provider: ({ children: r2, defaultValues: n2 }) => {
  const [a2, l2] = React.useState((null == n2 ? void 0 : n2.footerAlign) || o$3.footerAlign), [s2, i2] = React.useState(void 0 === (null == n2 ? void 0 : n2.animated) ? o$3.animated : null == n2 ? void 0 : n2.animated), [u2, d2] = React.useState(null == n2 ? void 0 : n2.collection), [c2, P2] = React.useState(void 0 === (null == n2 ? void 0 : n2.rowsPerPage) ? o$3.rowsPerPage : null == n2 ? void 0 : n2.rowsPerPage), [g2, m2] = React.useState(o$3.currentPage), [v2, x2] = React.useState(null == n2 ? void 0 : n2.color), C2 = React.useMemo(() => ({ animated: s2, footerAlign: a2, collection: u2, rowsPerPage: c2, currentPage: g2, color: v2, setFooterAlign: l2, setCollection: d2, setAnimated: i2, setRowsPerPage: P2, setColor: x2, setCurrentPage: m2 }), [s2, v2, u2, a2, c2, g2]);
  return jsxRuntimeExports.jsx(TableContext.Provider, { value: C2, children: r2 });
}, Consumer: TableContext.Consumer };
const r$5 = ({ align: r2, rowsPerPage: i2, onPageChange: s2, ...c2 }) => {
  const { color: u2, animated: m2, collection: g2, footerAlign: f2, rowsPerPage: d2, setFooterAlign: p2, setRowsPerPage: x2, setCurrentPage: P2 } = useTableContext();
  React.useEffect(() => {
    r2 && r2 !== f2 && (null == p2 || p2(r2));
  }, [r2, f2]), React.useEffect(() => {
    i2 && i2 !== d2 && (null == x2 || x2(i2));
  }, [d2, i2]);
  const b2 = reactExports.useMemo(() => {
    var e2;
    const t2 = null != g2 && g2.body ? [...null == g2 || null == (e2 = g2.body) ? void 0 : e2.childNodes].length : 0;
    return d2 > 0 ? Math.ceil(t2 / d2) : 1;
  }, [g2, d2]);
  return jsxRuntimeExports.jsx(t$7, { animated: m2, className: a$9("nextui-table-pagination", c2.className), color: c2.color || u2, total: b2, onChange: (e2) => {
    null == P2 || P2(e2), null == s2 || s2(e2);
  }, ...c2 });
};
r$5.displayName = "NextUI.TablePagination", r$5.toString = () => ".nextui-table-pagination";
const l$3 = r$5;
const n$4 = React.forwardRef(({ children: t2, ...n2 }, s2) => {
  const m2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(s2, () => null == m2 ? void 0 : m2.current);
  const { footerAlign: c2 } = useTableContext();
  return jsxRuntimeExports.jsx(StyledTableFooter, { ref: m2, align: n2.align || c2, className: a$9("nextui-table-footer", n2.className), role: "rowgroup", ...n2, children: t2 });
});
n$4.displayName = "NextUI.TableFooter", n$4.toString = () => ".nextui-table-footer";
const b$4 = n$4;
const m$4 = React.forwardRef(({ children: e2, item: m2, state: d2, ...n2 }, u2) => {
  const f2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(u2, () => null == f2 ? void 0 : f2.current);
  const { rowProps: p2 } = $b2db214c022798eb$export$7f2f6ae19e707aa5({ node: m2 }, d2, f2), { isFocusVisible: b2, focusProps: x2 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), w2 = d2.disabledKeys.has(m2.key);
  return jsxRuntimeExports.jsx(StyledTableRow, { ref: f2, className: a$9("nextui-table-row", { "nextui-table-row--selected": p2["aria-selected"], "nextui-table-row--disabled": w2 }, n2.className), css: m2.props.css, isDisabled: w2, isFocusVisible: b2, isSelected: !!p2["aria-selected"], ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(p2, x2, n2), children: e2 });
});
m$4.displayName = "NextUI.TableRow", m$4.toString = () => ".nextui-table-row";
const s = m$4;
const c$7 = React.forwardRef(({ cell: t2, state: c2, isStatic: m2, ...p2 }, n2) => {
  const f2 = useDOMRef(n2), { gridCellProps: u2 } = $7713593715703b24$export$49571c903d73624c({ node: t2 }, c2, f2), { isFocusVisible: d2, focusProps: b2 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), x2 = m2 ? { ...u2, onMouseDown: (t3) => t3.stopPropagation(), onPointerDown: (t3) => t3.stopPropagation() } : u2;
  return jsxRuntimeExports.jsx(StyledTableCell, { ref: f2, className: a$9("nextui-table-cell", p2.className), css: t2.props.css, isFocusVisible: d2, isStatic: m2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(x2, b2, p2), children: t2.rendered });
});
c$7.displayName = "NextUI.TableCell", c$7.toString = () => ".nextui-table-cell";
const c$8 = c$7;
const p$3 = React.forwardRef(({ cell: e2, state: p2, color: u2, animated: f2, ...b2 }, x2) => {
  const d2 = reactExports.useRef(null);
  reactExports.useImperativeHandle(x2, () => null == d2 ? void 0 : d2.current);
  const { gridCellProps: h2 } = $7713593715703b24$export$49571c903d73624c({ node: e2 }, p2, d2), { checkboxProps: k2 } = $2a795c53a101c542$export$16ea7f650bd7c1bb({ key: (null == e2 ? void 0 : e2.parentKey) || e2.key }, p2), { isFocusVisible: y2, focusProps: N2 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  return jsxRuntimeExports.jsx(StyledTableCell, { ref: d2, className: a$9("nextui-table-checkbox-cell", b2.className), isFocusVisible: y2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(h2, N2, b2), children: jsxRuntimeExports.jsx(e$d, { ...k2, color: u2, css: { display: "inherit" }, disableAnimation: !f2 }) });
});
p$3.displayName = "NextUI.TableCheckboxCell", p$3.toString = () => ".nextui-table-checkbox-cell";
const d$4 = p$3;
const hasPaginationChild = (n2, i2) => {
  const r2 = React.Children.toArray(n2).find((n3) => React.isValidElement(n3) && n3.type === i2);
  var t2;
  return React.isValidElement(r2) ? { hasPagination: true, rowsPerPage: (null == r2 || null == (t2 = r2.props) ? void 0 : t2.rowsPerPage) || 0 } : { hasPagination: false, rowsPerPage: 0 };
};
const isInfinityScroll = (o2) => {
  var n2;
  const i2 = null == (n2 = o2.body) ? void 0 : n2.props;
  return void 0 !== (null == i2 ? void 0 : i2.loadingState) && "function" == typeof (null == i2 ? void 0 : i2.onLoadMore);
};
const b$3 = ({ children: b2, collection: y2, state: f2, animated: g2, color: x2, hasPagination: v2, hideLoading: S2, isStatic: N2, ...w2 }) => {
  var C2, j2, k2, E2, H2, P2;
  const { currentPage: B2, rowsPerPage: L2, collection: M2, setCollection: A2 } = useTableContext(), I2 = reactExports.useMemo(() => isInfinityScroll(y2), [y2.body.props]);
  React.useEffect(() => {
    y2 !== M2 && (null == A2 || A2(y2));
  }, [y2, M2]);
  const T2 = "loading" === (null == (C2 = y2.body) || null == (j2 = C2.props) ? void 0 : j2.loadingState) || "loadingMore" === (null == (k2 = y2.body) || null == (E2 = k2.props) ? void 0 : E2.loadingState), U2 = reactExports.useMemo(() => {
    const l2 = [...y2.body.childNodes];
    return v2 ? null == l2 ? void 0 : l2.slice((B2 - 1) * L2, B2 * L2) : l2;
  }, [v2, y2, B2, L2]), $2 = reactExports.useMemo(() => {
    const l2 = U2.length;
    return l2 >= L2 && !I2 ? null : jsxRuntimeExports.jsx("tr", { "aria-hidden": "true", className: "nextui-table-hidden-row", role: "row", children: jsxRuntimeExports.jsx(StyledBaseTableCell, { "aria-hidden": "true", colSpan: y2.columnCount, css: { height: "var(--nextui--tableBodyEmptySpaceHeight)" }, style: $3ef42575df84b30b$export$9d1611c77c2fe928$5({ "--nextui--tableBodyEmptySpaceHeight": I2 ? "var(--nextui-space-10)" : `calc(${L2 - l2} * var(--nextui-space-15))` }, (null == w2 ? void 0 : w2.style) || {}) }) });
  }, [y2.columnCount, U2, L2, I2]);
  return jsxRuntimeExports.jsxs(c$a, { as: "tbody", className: a$9("nextui-table-body", w2.className), css: { position: "relative", ...w2.css, ...null == (H2 = y2.body) || null == (P2 = H2.props) ? void 0 : P2.css }, isInfinityScroll: I2, onScroll: (l2) => {
    if (!I2)
      return;
    const e2 = l2.target;
    var o2, t2;
    e2.scrollHeight - (e2.scrollTop + 40) <= e2.clientHeight && !T2 && (null == (o2 = y2.body) || null == (t2 = o2.props) || null == t2.onLoadMore || t2.onLoadMore());
  }, ...w2, children: [b2, null == U2 ? void 0 : U2.map((l2) => l2.hasChildNodes ? jsxRuntimeExports.jsx(s, { "aria-hidden": "false", item: l2, state: f2, children: [...l2.childNodes].map((l3) => {
    var e2;
    return null != l3 && null != (e2 = l3.props) && e2.isSelectionCell ? jsxRuntimeExports.jsx(d$4, { animated: g2, cell: l3, color: x2, state: f2 }, null == l3 ? void 0 : l3.key) : jsxRuntimeExports.jsx(c$8, { cell: l3, isStatic: N2, state: f2 }, null == l3 ? void 0 : l3.key);
  }) }, null == l2 ? void 0 : l2.key) : null), !S2 && T2 && jsxRuntimeExports.jsx(StyledTableLoadingRow, { "aria-hidden": "true", className: "nextui-table-hidden-row", isAbsolute: !I2, isAtEnd: U2.length > 0, role: "row", children: jsxRuntimeExports.jsx(StyledBaseTableCell, { "aria-hidden": "true", colSpan: y2.columnCount, children: jsxRuntimeExports.jsx(e$9, { color: x2 }) }) }), $2] });
};
b$3.displayName = "NextUI.TableBody", b$3.toString = () => ".nextui-table-body";
const f$2 = b$3;
const N = React.forwardRef((n2, N2) => {
  const { css: S2, selectionMode: C2, selectionBehavior: j2, hideLoading: M2, children: L2, shadow: B2, color: I2, animated: R2, borderWeight: W2, bordered: F2, hoverable: T2, sticked: U2, containerCss: V2, className: q2, ...z2 } = n2, [A2, D2] = pickSingleChild(L2, l$3), { hasPagination: E2, rowsPerPage: G2 } = hasPaginationChild(L2, l$3), H2 = $4a0dd036d492cee4$export$907bcc6c48325fd6({ ...n2, children: A2, showSelectionCheckboxes: void 0 !== n2.showSelectionCheckboxes ? n2.showSelectionCheckboxes : "multiple" === C2 && "replace" !== j2 }), J2 = useDOMRef(N2), { collection: K2 } = H2, { gridProps: O2 } = $6e31608fbba75bab$export$25bceaac3c7e4dc7(n2, H2, J2), Q2 = React.useMemo(() => ({ collection: K2, color: I2, animated: R2, rowsPerPage: G2 }), [K2, R2, I2, G2]), X2 = reactExports.useMemo(() => !("none" === C2 && !T2), [C2, T2]);
  return jsxRuntimeExports.jsx(w$1.Provider, { defaultValues: Q2, children: jsxRuntimeExports.jsx(StyledTableContainer, { borderWeight: W2, bordered: F2, className: "nextui-table-container", css: V2, shadow: B2, children: jsxRuntimeExports.jsxs(StyledTable, { ref: J2, animated: R2, className: a$9("nextui-table", q2), color: I2, css: S2, hasPagination: E2, hoverable: X2, isMultiple: "multiple" === C2, shadow: B2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(O2, z2), children: [jsxRuntimeExports.jsxs(c$a, { as: "thead", isFixed: isInfinityScroll(K2), children: [K2.headerRows.map((e2) => jsxRuntimeExports.jsx(h$2, { item: e2, state: H2, children: [...e2.childNodes].map((e3) => {
    var o2;
    return null != e3 && null != (o2 = e3.props) && o2.isSelectionCell ? jsxRuntimeExports.jsx(p$4, { animated: R2, color: I2, column: e3, state: H2 }, null == e3 ? void 0 : e3.key) : jsxRuntimeExports.jsx(d$5, { animated: R2, column: e3, state: H2 }, null == e3 ? void 0 : e3.key);
  }) }, null == e2 ? void 0 : e2.key)), !U2 && jsxRuntimeExports.jsx(e$c, { as: "tr", className: "nextui-table-hidden-row", y: 0.4 })] }), jsxRuntimeExports.jsx(f$2, { animated: R2, collection: K2, color: I2, hasPagination: E2, hideLoading: M2, isStatic: !X2, state: H2 }), E2 && jsxRuntimeExports.jsxs(b$4, { children: [jsxRuntimeExports.jsx(e$c, { as: "tr", className: "nextui-table-hidden-row", y: 0.6 }), jsxRuntimeExports.jsx("tr", { role: "row", children: jsxRuntimeExports.jsx("th", { colSpan: K2.columnCount, role: "columnheader", tabIndex: -1, children: D2 }) })] })] }) }) });
});
N.displayName = "NextUI.Table", N.toString = () => ".nextui-table";
const e$7 = n$a(N, { animated: true, hideLoading: false, selectionMode: "none", selectionBehavior: "toggle" });
const a$3 = $4ae5314bf50db1a3$export$76ccd210b9029917;
const t$4 = a$3;
const e$6 = $941d1d9a6a28982a$export$f6f0c3fe4ec306ea;
const r$4 = e$6;
const e$5 = $1cd244557c2f97d5$export$816b5d811295e6bc;
const a$2 = e$5;
const t$3 = $312ae3b56a94a86e$export$f850895b287ef28e;
const b$2 = t$3;
const a$1 = $70d70eb16ea48428$export$b59bdbef9ce70de2;
const o$2 = a$1;
e$7.Cell = r$4, e$7.Column = a$2, e$7.Header = b$2, e$7.Row = o$2, e$7.Body = t$4, e$7.Pagination = l$3;
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  return {
    isOpen,
    setOpen,
    open() {
      setOpen(true);
    },
    close() {
      setOpen(false);
    },
    toggle() {
      setOpen(!isOpen);
    }
  };
}
function assignRef(e2, n2) {
  if (null != e2)
    if (isFunction(e2))
      e2(n2);
    else
      try {
        e2.current = n2;
      } catch (r2) {
        throw new Error(`Cannot assign value '${n2}' to ref '${e2}'`);
      }
}
function mergeRefs(...r2) {
  return (e2) => {
    r2.forEach((r3) => assignRef(r3, e2));
  };
}
const getAriaPlacement = (t2) => t2 ? t2.replace("-", " ") : "bottom";
const getTransformOrigin = (t2) => {
  if (!t2)
    return "bottom";
  switch (t2) {
    case "bottom":
    default:
      return "top center";
    case "top":
      return "bottom center";
    case "left":
      return "right center";
    case "right":
      return "left center";
    case "bottom-left":
      return "top left";
    case "bottom-right":
      return "top right";
    case "top-left":
      return "bottom left";
    case "top-right":
      return "bottom right";
    case "left-top":
      return "right top";
    case "left-bottom":
      return "right bottom";
    case "right-top":
      return "left top";
    case "right-bottom":
      return "left bottom";
  }
};
function usePopover(u2 = {}) {
  const { ref: m2, triggerRef: c2, scrollRef: f2, isOpen: g2, defaultOpen: O2, onOpenChange: y2, isBordered: b2, borderWeight: h2, disableShadow: P2, shouldFlip: v2 = true, offset: C2 = 12, placement: R2 = "bottom", onClose: D2, triggerType: x2 = "dialog", isDismissable: B2 = true, shouldCloseOnBlur: j2 = false, isKeyboardDismissDisabled: E2 = false, disableAnimation: k2 = false, shouldCloseOnInteractOutside: w2 } = u2, A2 = reactExports.useRef(null), F2 = reactExports.useRef(null), I2 = m2 || A2, K2 = c2 || F2, S2 = $fc909762b330b746$export$61c6a8c84e605fb6({ isOpen: g2, defaultOpen: O2, onOpenChange: y2 }), [T2, W2] = reactExports.useState(!S2.isOpen), H2 = reactExports.useMemo(() => S2.isOpen ? "open" : "closed", [S2.isOpen]), q2 = reactExports.useCallback(() => {
    null == D2 || D2(), S2.close();
  }, [S2, D2]), z2 = reactExports.useCallback(() => {
    W2(false);
  }, []), G2 = reactExports.useCallback(() => {
    W2(true);
  }, []), { triggerProps: J2, overlayProps: L2 } = $628037886ba31236$export$f9d5c8beee7d008d({ type: x2 }, S2, K2), M2 = reactExports.useMemo(() => getAriaPlacement(R2), [R2]), { overlayProps: N2 } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({ isOpen: S2.isOpen, targetRef: K2, scrollRef: f2, placement: M2, overlayRef: I2, shouldFlip: v2, offset: C2 }), Q2 = reactExports.useMemo(() => {
    var e2;
    return !(null == (e2 = N2.style) || !e2.maxHeight);
  }, [N2.style]), U2 = reactExports.useCallback((e2 = {}, s2 = null) => ({ ...null != c2 && c2.current ? $3ef42575df84b30b$export$9d1611c77c2fe928$5(J2, e2) : $3ef42575df84b30b$export$9d1611c77c2fe928$5(e2, J2), ref: mergeRefs(K2, s2) }), [K2, c2, J2]), V2 = reactExports.useCallback((e2 = {}, s2 = {}) => {
    const o2 = N2.style ? Object.keys(N2.style) : [];
    let r2 = {};
    o2.forEach((e3) => {
      const o3 = isObject(s2) && s2[e3];
      o3 && (r2 = { ...r2, [e3]: o3 });
    });
    const t2 = Object.keys(r2).length > 0 ? { ...N2, style: { ...N2.style, ...r2 } } : N2;
    return { css: s2, ...e2, ...L2, ...t2, "data-state": H2, "data-placement": R2 };
  }, [H2, N2, L2, R2]);
  return { state: S2, exited: T2, overlayRef: I2, triggerRef: K2, placement: R2, disableShadow: P2, disableAnimation: k2, shouldCloseOnBlur: j2, isDismissable: B2, isBordered: b2, borderWeight: h2, isKeyboardDismissDisabled: E2, shouldCloseOnInteractOutside: w2, isOpen: S2.isOpen, onClose: q2, onExited: G2, onEntered: z2, triggerProps: J2, overlayProps: L2, positionProps: N2, getTriggerProps: U2, getPopoverProps: V2, isPositioned: Q2 };
}
const [PopoverProvider, usePopoverContext] = createContext({ name: "PopoverContext", errorMessage: "usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`" });
const p$2 = React.forwardRef((o2, p2) => {
  const { children: s2, ...n2 } = o2, f2 = usePopover({ ref: p2, ...n2 }), [c2, l2] = React.Children.toArray(s2), x2 = f2.state.isOpen || !f2.exited;
  return jsxRuntimeExports.jsxs(PopoverProvider, { value: f2, children: [c2, x2 && jsxRuntimeExports.jsx($f57aed4a881a3485$export$b47c3594eab58386, { children: l2 })] });
});
p$2.toString = () => ".nextui-popover";
const o$1 = p$2;
const c$6 = React.forwardRef((r2, a2) => {
  const { triggerRef: c2, getTriggerProps: g2 } = usePopoverContext(), { children: u2, ...d2 } = r2, P2 = reactExports.useMemo(() => "string" == typeof u2 ? jsxRuntimeExports.jsx(t$9, { children: u2 }) : reactExports.Children.only(u2), [u2]), { onPress: x2, onKeyDown: y2, onPressStart: v2, ...w2 } = reactExports.useMemo(() => g2($3ef42575df84b30b$export$9d1611c77c2fe928$5(P2.props, d2), P2.ref), [g2, P2.props, d2, P2.ref]), { buttonProps: S2 } = $701a24aa0da5b062$export$ea18c227d4417cc3({ onPress: x2, onKeyDown: y2, onPressStart: v2, ...w2 }, c2), [, h2] = pickChild(r2.children, t$c), D2 = reactExports.useMemo(() => void 0 !== (null == h2 ? void 0 : h2[0]), [h2]), K2 = reactExports.useMemo(() => ({ ...w2, onPress: x2, onKeyDown: y2, onPressStart: v2 }), [w2, x2, y2, v2]);
  return reactExports.cloneElement(P2, $3ef42575df84b30b$export$9d1611c77c2fe928$5(w2, D2 ? K2 : S2));
});
c$6.toString = () => ".nextui-popover-trigger";
const r$3 = c$6;
const $704cf1d3b684cc5c$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
const $704cf1d3b684cc5c$var$SSRContext = /* @__PURE__ */ React.createContext($704cf1d3b684cc5c$var$defaultContext);
let $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
let $704cf1d3b684cc5c$var$componentIds = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter(isDisabled = false) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext);
  let ref = reactExports.useRef(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {
  let ctx = reactExports.useContext($704cf1d3b684cc5c$var$SSRContext);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
const $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof window !== "undefined" ? React.useLayoutEffect : () => {
};
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = reactExports.useState(defaultValue);
  let valueRef = reactExports.useRef(value);
  let effect = reactExports.useRef(null);
  let nextIter = reactExports.useCallback(() => {
    let newValue = effect.current.next();
    while (!newValue.done && valueRef.current === newValue.value)
      newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    setValue(newValue.value);
    valueRef.current = newValue.value;
  }, [
    setValue,
    valueRef,
    effect
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    if (effect.current)
      nextIter();
  });
  let queue = reactExports.useCallback((fn) => {
    effect.current = fn(valueRef.current);
    nextIter();
  }, [
    nextIter,
    effect,
    valueRef
  ]);
  return [
    value,
    queue
  ];
}
let $bdb11010cef70236$var$idsUpdaterMap = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = reactExports.useState(defaultId);
  let nextId = reactExports.useRef(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26(value);
  let updateValue = reactExports.useCallback((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap.delete(r2);
    };
  }, [
    res
  ]);
  reactExports.useEffect(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id2 = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25(id2);
  let updateId = reactExports.useCallback(() => {
    setResolvedId(function* () {
      yield id2;
      yield document.getElementById(id2) ? id2 : void 0;
    });
  }, [
    id2,
    setResolvedId
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updateId, [
    id2,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
const $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
const $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
const $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
let $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e2) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
let $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
let $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e2) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e2.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e2.target, transitions);
      e2.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e2.propertyName);
  };
  let onTransitionEnd = (e2) => {
    let properties2 = $bbed8b41f857bcc0$var$transitionsByElement.get(e2.target);
    if (!properties2)
      return;
    properties2.delete(e2.propertyName);
    if (properties2.size === 0) {
      e2.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e2.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb2 of $bbed8b41f857bcc0$var$transitionCallbacks)
        cb2();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}
function $c87311424ea30a05$var$testUserAgent(re2) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re2.test(brand.brand))) || re2.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re2) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re2.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec8() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
const $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = React.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";
let $507fabe10e71c6fb$var$currentModality = null;
let $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
let $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;
let $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
let $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e2) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers)
    handler(modality, e2);
}
function $507fabe10e71c6fb$var$isValidKey(e2) {
  return !(e2.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10() && e2.altKey || e2.ctrlKey || e2.key === "Control" || e2.key === "Shift" || e2.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e2) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e2)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e2);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e2) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e2.type === "mousedown" || e2.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e2);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e2) {
  if ($6a7db85432448f7f$export$60278871457622de(e2)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e2) {
  if (e2.target === window || e2.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e2);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c430(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f3(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f3(element);
}
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  return scope.some((node2) => node2.contains(element));
}
class $9bf71ea28793e738$var$Tree6 {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node2 = new $9bf71ea28793e738$var$TreeNode6({
      scopeRef
    });
    parentNode.addChild(node2);
    node2.parent = parentNode;
    this.fastMap.set(scopeRef, node2);
    if (nodeToRestore)
      node2.nodeToRestore = nodeToRestore;
  }
  addNode(node2) {
    this.fastMap.set(node2.scopeRef, node2);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node2 = this.fastMap.get(scopeRef);
    let parentNode = node2.parent;
    for (let current of this.traverse())
      if (current !== node2 && node2.nodeToRestore && current.nodeToRestore && node2.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node2.scopeRef.current))
        current.nodeToRestore = node2.nodeToRestore;
    let children = node2.children;
    parentNode.removeChild(node2);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node2.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node2 = this.root) {
    if (node2.scopeRef != null)
      yield node2;
    if (node2.children.size > 0)
      for (let child of node2.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree6();
    for (let node2 of this.traverse())
      newTree.addTreeNode(node2.scopeRef, node2.parent.scopeRef, node2.nodeToRestore);
    return newTree;
  }
  constructor() {
    _defineProperty(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode6({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
}
class $9bf71ea28793e738$var$TreeNode6 {
  addChild(node2) {
    this.children.add(node2);
    node2.parent = this;
  }
  removeChild(node2) {
    this.children.delete(node2);
    node2.parent = void 0;
  }
  constructor(props) {
    _defineProperty(this, "children", /* @__PURE__ */ new Set());
    _defineProperty(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
}
new $9bf71ea28793e738$var$Tree6();
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = reactExports.useRef(false);
  reactExports.useEffect(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      $6a99195332edec8b$export$80f3e147d781571c(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          ref.current.blur();
          $6a99195332edec8b$export$80f3e147d781571c(ref.current);
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  $337b884510726a0d$export$14c98a7594375490();
  return {
    dialogProps: {
      ...$65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e2) => {
        if (isRefocusing.current)
          e2.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}
const appearanceIn = keyframes$1({ "0%": { opacity: 0, transform: "translateZ(0)  scale(0.95)" }, "60%": { opacity: 0.75, backfaceVisibility: "hidden", webkitFontSmoothing: "antialiased", transform: "translateZ(0) scale(1.05)" }, "100%": { opacity: 1, transform: "translateZ(0) scale(1)" } });
const appearanceOut = keyframes$1({ "0%": { opacity: 1, transform: "scale(1)" }, "100%": { opacity: 0, transform: "scale(0.5)" } });
const StyledPopoverContentContainer = styled$3("div", { $$popoverMinWidth: "$space$fit", $$popoverMinHeight: "$space$fit", $$popoverBorderRadius: "$radii$lg", $$popoverBackground: "$colors$backgroundContrast", $$popoverBoxShadow: "$shadows$md", $$popoverBorderColor: "$colors$border", boxShadow: "$$popoverBoxShadow", outline: "none", overflow: "hidden auto", bg: "$$popoverBackground", display: "inline-flex", flexDirection: "column", boxSizing: "border-box", minWidth: "$$popoverMinWidth", minHeight: "$$popoverMinHeight", maxWidth: "calc(100% - $$popoverMinWidth)", maxHeight: "calc(100% - $$popoverMinWidth)", borderRadius: "$$popoverBorderRadius", animationFillMode: "forwards", willChange: "transform, opacity", "@motion": { transition: "none" }, "&.nextui-popover-content-enter": { animationName: appearanceIn, animationTimingFunction: "ease-out", animationDirection: "normal", animationDuration: "300ms", animationFillMode: "both" }, "&.nextui-popover-content-leave": { animationName: appearanceOut, animationTimingFunction: "ease-in", animationDuration: "60ms", animationFillMode: "both" }, variants: { disableShadow: { true: { boxShadow: "none" } }, isBordered: { true: { borderStyle: "solid", borderColor: "$$popoverBorderColor" } }, borderWeight: { light: { bw: "$light", $$popoverBorderWeight: "$borderWeights$light" }, normal: { bw: "$normal", $$popoverBorderWeight: "$borderWeights$normal" }, bold: { bw: "$bold", $$popoverBorderWeight: "$borderWeights$bold" }, extrabold: { bw: "$extrabold", $$popoverBorderWeight: "$borderWeights$extrabold" }, black: { bw: "$black", $$popoverBorderWeight: "$borderWeights$black" } }, isPositioned: { true: { visibility: "visible" }, false: { visibility: "hidden" } }, disableAnimation: { true: { transition: "none", "&.nextui-popover-content-enter": { animation: "none" }, "&.nextui-popover-content-leave": { animation: "none" } } } }, defaultVariants: { isBordered: false, borderWeight: "light" } }, cssFocusVisible);
const StyledPopoverContent = styled$3("div", {});
const g$2 = React.forwardRef((e2, d2) => {
  const { children: g2, as: D2, css: P2, className: y2, ...C2 } = e2, { state: j2, placement: N2, overlayRef: B2, disableAnimation: E2, disableShadow: F2, shouldCloseOnBlur: w2, isDismissable: I2, isKeyboardDismissDisabled: S2, shouldCloseOnInteractOutside: T2, getPopoverProps: A2, isBordered: K2, borderWeight: R2, onClose: V2, onEntered: W2, onExited: U2, isPositioned: k2 } = usePopoverContext(), q2 = getTransformOrigin(N2), z2 = reactExports.useMemo(() => ({ transformOrigin: q2, ...P2 }), [q2, P2]), { modalProps: G2 } = $f57aed4a881a3485$export$33ffd74ebf07f060({ isDisabled: true }), { dialogProps: H2 } = $40df3f8667284809$export$d55e7ee900f34e93({ role: "dialog" }, B2), { overlayProps: J2 } = $a11501f3d1d39e6c$export$ea8f71083e90600f({ onClose: V2, isOpen: j2.isOpen, isDismissable: I2 && j2.isOpen, shouldCloseOnBlur: w2, isKeyboardDismissDisabled: S2, shouldCloseOnInteractOutside: T2 }, B2), L2 = $3ef42575df84b30b$export$9d1611c77c2fe928$5({ isBordered: K2, disableShadow: F2, borderWeight: R2 }, C2), { isFocusVisible: M2, focusProps: Q2 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), X2 = reactExports.useMemo(() => ({ clearTime: E2 ? 0 : 300, enterTime: E2 ? 0 : 20, leaveTime: E2 ? 0 : 60, name: "nextui-popover-content", visible: j2.isOpen, onEntered: W2, onExited: U2 }), [E2, j2.isOpen]), Y2 = jsxRuntimeExports.jsxs(StyledPopoverContentContainer, { ref: mergeRefs(B2, d2), ...A2($3ef42575df84b30b$export$9d1611c77c2fe928$5(J2, G2, H2, Q2, L2), z2), as: D2, className: a$9("nextui-popover-content-container", y2), disableAnimation: E2, isFocusVisible: M2, isPositioned: k2, children: [jsxRuntimeExports.jsx($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: V2 }), jsxRuntimeExports.jsx(StyledPopoverContent, { className: "nextui-popover-content", children: g2 }), jsxRuntimeExports.jsx($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: V2 })] });
  return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, { children: jsxRuntimeExports.jsx($9bf71ea28793e738$export$20e40289641fbbb6, { restoreFocus: true, children: jsxRuntimeExports.jsx(m$7, { ...X2, children: Y2 }) }) });
});
g$2.toString = () => ".nextui-popover-content";
const e$4 = g$2;
o$1.Content = e$4, o$1.Trigger = r$3;
const o = $c1d7fb2ec91bae71$export$6d08773d2e66f8f2;
o.toString = () => ".nextui-dropdown-item-base";
const t$2 = o;
const [DropdownProvider, useDropdownContext] = createContext({ name: "DropdownContext", errorMessage: "useDropdownContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Dropdown />`" });
const n$3 = React.forwardRef((r2, t2) => {
  const { children: n2, ...p2 } = r2, { getMenuTriggerProps: m2 } = useDropdownContext();
  return jsxRuntimeExports.jsx(o$1.Trigger, { ...m2(p2), children: n2 });
});
n$3.toString = () => ".nextui-dropdown-trigger";
const e$3 = n$3;
function $parcel$interopDefault(a2) {
  return a2 && a2.__esModule ? a2.default : a2;
}
var $9bdd31893c9700c3$exports = {};
var $c0398ad35c3639b7$exports = {};
$c0398ad35c3639b7$exports = {
  "longPressMessage": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`
};
var $7af657c4165927c3$exports = {};
$7af657c4165927c3$exports = {
  "longPressMessage": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`
};
var $d95d4da6d531ab81$exports = {};
$d95d4da6d531ab81$exports = {
  "longPressMessage": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`
};
var $24ebda9c775dca17$exports = {};
$24ebda9c775dca17$exports = {
  "longPressMessage": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`
};
var $743e0dfca6cab1e9$exports = {};
$743e0dfca6cab1e9$exports = {
  "longPressMessage": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`
};
var $a2f41026e05f1c84$exports = {};
$a2f41026e05f1c84$exports = {
  "longPressMessage": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`
};
var $43b800e97c901737$exports = {};
$43b800e97c901737$exports = {
  "longPressMessage": `Long press or press Alt + ArrowDown to open menu`
};
var $442f5f6ac211e29f$exports = {};
$442f5f6ac211e29f$exports = {
  "longPressMessage": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`
};
var $dff280acfeb2d8ac$exports = {};
$dff280acfeb2d8ac$exports = {
  "longPressMessage": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`
};
var $51608325613944d7$exports = {};
$51608325613944d7$exports = {
  "longPressMessage": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`
};
var $c4a1b1eabeaa87be$exports = {};
$c4a1b1eabeaa87be$exports = {
  "longPressMessage": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`
};
var $8c74815cdee18d1b$exports = {};
$8c74815cdee18d1b$exports = {
  "longPressMessage": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`
};
var $fd0e9ef6a7fe0ec9$exports = {};
$fd0e9ef6a7fe0ec9$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`
};
var $a89a74a39eba465a$exports = {};
$a89a74a39eba465a$exports = {
  "longPressMessage": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`
};
var $edc7c66594a0ae8a$exports = {};
$edc7c66594a0ae8a$exports = {
  "longPressMessage": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`
};
var $f1ab51510712db52$exports = {};
$f1ab51510712db52$exports = {
  "longPressMessage": `長押しまたは Alt+下矢印キーでメニューを開く`
};
var $f9b672d9b82fa3d6$exports = {};
$f9b672d9b82fa3d6$exports = {
  "longPressMessage": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`
};
var $a385f3910feda499$exports = {};
$a385f3910feda499$exports = {
  "longPressMessage": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`
};
var $4f1bde932c441789$exports = {};
$4f1bde932c441789$exports = {
  "longPressMessage": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`
};
var $914a51a8a594d5be$exports = {};
$914a51a8a594d5be$exports = {
  "longPressMessage": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`
};
var $89aaf803103bb500$exports = {};
$89aaf803103bb500$exports = {
  "longPressMessage": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`
};
var $c685891476dbaaca$exports = {};
$c685891476dbaaca$exports = {
  "longPressMessage": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`
};
var $885879b9b10c2959$exports = {};
$885879b9b10c2959$exports = {
  "longPressMessage": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`
};
var $6b39616688a51692$exports = {};
$6b39616688a51692$exports = {
  "longPressMessage": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`
};
var $f26362aed63f47e2$exports = {};
$f26362aed63f47e2$exports = {
  "longPressMessage": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`
};
var $06cbade644558bf0$exports = {};
$06cbade644558bf0$exports = {
  "longPressMessage": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`
};
var $0a391ff68f9d59b1$exports = {};
$0a391ff68f9d59b1$exports = {
  "longPressMessage": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`
};
var $8193cf0e649c7928$exports = {};
$8193cf0e649c7928$exports = {
  "longPressMessage": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`
};
var $f398debcce5a5c55$exports = {};
$f398debcce5a5c55$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`
};
var $9e9fef000aa4c013$exports = {};
$9e9fef000aa4c013$exports = {
  "longPressMessage": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`
};
var $c016c8183bbe3d68$exports = {};
$c016c8183bbe3d68$exports = {
  "longPressMessage": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`
};
var $ca4f6c8462244e62$exports = {};
$ca4f6c8462244e62$exports = {
  "longPressMessage": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`
};
var $2d9960c02ccac927$exports = {};
$2d9960c02ccac927$exports = {
  "longPressMessage": `长按或按 Alt + 向下方向键以打开菜单`
};
var $f1b682a4c8c5631c$exports = {};
$f1b682a4c8c5631c$exports = {
  "longPressMessage": `長按或按 Alt+向下鍵以開啟功能表`
};
$9bdd31893c9700c3$exports = {
  "ar-AE": $c0398ad35c3639b7$exports,
  "bg-BG": $7af657c4165927c3$exports,
  "cs-CZ": $d95d4da6d531ab81$exports,
  "da-DK": $24ebda9c775dca17$exports,
  "de-DE": $743e0dfca6cab1e9$exports,
  "el-GR": $a2f41026e05f1c84$exports,
  "en-US": $43b800e97c901737$exports,
  "es-ES": $442f5f6ac211e29f$exports,
  "et-EE": $dff280acfeb2d8ac$exports,
  "fi-FI": $51608325613944d7$exports,
  "fr-FR": $c4a1b1eabeaa87be$exports,
  "he-IL": $8c74815cdee18d1b$exports,
  "hr-HR": $fd0e9ef6a7fe0ec9$exports,
  "hu-HU": $a89a74a39eba465a$exports,
  "it-IT": $edc7c66594a0ae8a$exports,
  "ja-JP": $f1ab51510712db52$exports,
  "ko-KR": $f9b672d9b82fa3d6$exports,
  "lt-LT": $a385f3910feda499$exports,
  "lv-LV": $4f1bde932c441789$exports,
  "nb-NO": $914a51a8a594d5be$exports,
  "nl-NL": $89aaf803103bb500$exports,
  "pl-PL": $c685891476dbaaca$exports,
  "pt-BR": $885879b9b10c2959$exports,
  "pt-PT": $6b39616688a51692$exports,
  "ro-RO": $f26362aed63f47e2$exports,
  "ru-RU": $06cbade644558bf0$exports,
  "sk-SK": $0a391ff68f9d59b1$exports,
  "sl-SI": $8193cf0e649c7928$exports,
  "sr-SP": $f398debcce5a5c55$exports,
  "sv-SE": $9e9fef000aa4c013$exports,
  "tr-TR": $c016c8183bbe3d68$exports,
  "uk-UA": $ca4f6c8462244e62$exports,
  "zh-CN": $2d9960c02ccac927$exports,
  "zh-TW": $f1b682a4c8c5631c$exports
};
function $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {
  let { type = "menu", isDisabled, trigger = "press" } = props;
  let menuTriggerId = $bdb11010cef70236$export$f680877a34711e37$3();
  let { triggerProps, overlayProps } = $628037886ba31236$export$f9d5c8beee7d008d({
    type
  }, state, ref);
  let onKeyDown = (e2) => {
    if (isDisabled)
      return;
    if (trigger === "longPress" && !e2.altKey)
      return;
    if (ref && ref.current)
      switch (e2.key) {
        case "Enter":
        case " ":
          if (trigger === "longPress")
            return;
        case "ArrowDown":
          if (!("continuePropagation" in e2))
            e2.stopPropagation();
          e2.preventDefault();
          state.toggle("first");
          break;
        case "ArrowUp":
          if (!("continuePropagation" in e2))
            e2.stopPropagation();
          e2.preventDefault();
          state.toggle("last");
          break;
      }
  };
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1$1(/* @__PURE__ */ $parcel$interopDefault($9bdd31893c9700c3$exports));
  let { longPressProps } = $8a26561d2877236e$export$c24ed0104d07eab9$1({
    isDisabled: isDisabled || trigger !== "longPress",
    accessibilityDescription: stringFormatter.format("longPressMessage"),
    onLongPressStart() {
      state.close();
    },
    onLongPress() {
      state.open("first");
    }
  });
  let pressProps = {
    onPressStart(e2) {
      if (e2.pointerType !== "touch" && e2.pointerType !== "keyboard" && !isDisabled)
        state.toggle(e2.pointerType === "virtual" ? "first" : null);
    },
    onPress(e2) {
      if (e2.pointerType === "touch" && !isDisabled)
        state.toggle();
    }
  };
  delete triggerProps.onPress;
  return {
    menuTriggerProps: {
      ...triggerProps,
      ...trigger === "press" ? pressProps : longPressProps,
      id: menuTriggerId,
      onKeyDown
    },
    menuProps: {
      ...overlayProps,
      "aria-labelledby": menuTriggerId,
      autoFocus: state.focusStrategy,
      onClose: state.close
    }
  };
}
const $d5336fe17ce95402$export$6f49b4016bfc8d56 = /* @__PURE__ */ new WeakMap();
function $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {
  let { shouldFocusWrap = true, ...otherProps } = props;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f$4(props, {
    labelable: true
  });
  let { listProps } = $982254629710d113$export$b95089534ab7c1fd({
    ...otherProps,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap
  });
  $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {
    onClose: props.onClose,
    onAction: props.onAction
  });
  return {
    menuProps: $3ef42575df84b30b$export$9d1611c77c2fe928$5(domProps, {
      role: "menu",
      ...listProps
    })
  };
}
function $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {
  let { key, closeOnSelect, isVirtualized } = props;
  var _isDisabled;
  let isDisabled = (_isDisabled = props.isDisabled) !== null && _isDisabled !== void 0 ? _isDisabled : state.disabledKeys.has(key);
  var _isSelected;
  let isSelected = (_isSelected = props.isSelected) !== null && _isSelected !== void 0 ? _isSelected : state.selectionManager.isSelected(key);
  let isFocused = state.selectionManager.focusedKey === key;
  let data = $d5336fe17ce95402$export$6f49b4016bfc8d56.get(state);
  let onClose = props.onClose || data.onClose;
  let onAction = props.onAction || data.onAction;
  let role = "menuitem";
  if (state.selectionManager.selectionMode === "single")
    role = "menuitemradio";
  else if (state.selectionManager.selectionMode === "multiple")
    role = "menuitemcheckbox";
  let labelId = $bdb11010cef70236$export$b4cc09c592e8fdb8$1();
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8$1();
  let keyboardId = $bdb11010cef70236$export$b4cc09c592e8fdb8$1();
  let ariaProps = {
    "aria-disabled": isDisabled,
    role,
    "aria-label": props["aria-label"],
    "aria-labelledby": labelId,
    "aria-describedby": [
      descriptionId,
      keyboardId
    ].filter(Boolean).join(" ") || void 0
  };
  if (state.selectionManager.selectionMode !== "none")
    ariaProps["aria-checked"] = isSelected;
  if (isVirtualized) {
    ariaProps["aria-posinset"] = state.collection.getItem(key).index;
    ariaProps["aria-setsize"] = $453cc9f0df89c0a5$export$77d5aafae4e095b2(state.collection);
  }
  let onKeyDown = (e2) => {
    if (e2.repeat)
      return;
    switch (e2.key) {
      case " ":
        if (!isDisabled && state.selectionManager.selectionMode === "none" && closeOnSelect !== false && onClose)
          onClose();
        break;
      case "Enter":
        if (!isDisabled && closeOnSelect !== false && onClose)
          onClose();
        break;
    }
  };
  let onPressStart = (e2) => {
    if (e2.pointerType === "keyboard" && onAction)
      onAction(key);
  };
  let onPressUp = (e2) => {
    if (e2.pointerType !== "keyboard") {
      if (onAction)
        onAction(key);
      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== "multiple"))
        onClose();
    }
  };
  let { itemProps } = $880e95eb8b93ba9a$export$ecf600387e221c37({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true,
    allowsDifferentPressOrigin: true
  });
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad21$4({
    onPressStart,
    onPressUp,
    isDisabled
  });
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled,
    onHoverStart() {
      if (!$507fabe10e71c6fb$export$b9b3dfddab17db27$1()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
    }
  });
  return {
    menuItemProps: {
      ...ariaProps,
      ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(itemProps, pressProps, hoverProps, {
        onKeyDown
      })
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    },
    isFocused,
    isSelected,
    isPressed,
    isDisabled
  };
}
function $3e5eb2498db5b506$export$73f7a44322579622(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = $bdb11010cef70236$export$f680877a34711e37$3();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, and only use it
      // as a label for the nested group.
      id: headingId,
      "aria-hidden": true
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}
var tmp = Symbol.iterator;
class $05ca4cd7c4a5a999$export$863faf230ee2118a {
  *[tmp]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.prevKey : null;
  }
  getKeyAfter(key) {
    let node2 = this.keyMap.get(key);
    return node2 ? node2.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, { expandedKeys } = {}) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.iterable = nodes;
    expandedKeys = expandedKeys || /* @__PURE__ */ new Set();
    let visit = (node2) => {
      this.keyMap.set(node2.key, node2);
      if (node2.childNodes && (node2.type === "section" || expandedKeys.has(node2.key)))
        for (let child of node2.childNodes)
          visit(child);
    };
    for (let node2 of nodes)
      visit(node2);
    let last;
    let index2 = 0;
    for (let [key, node1] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node1.prevKey = last.key;
      } else {
        this.firstKey = key;
        node1.prevKey = void 0;
      }
      if (node1.type === "item")
        node1.index = index2++;
      last = node1;
      last.nextKey = void 0;
    }
    this.lastKey = last === null || last === void 0 ? void 0 : last.key;
  }
}
function $875d6693e12af071$export$728d6ba534403756(props) {
  let [expandedKeys, setExpandedKeys] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.expandedKeys ? new Set(props.expandedKeys) : void 0, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), props.onExpandedChange);
  let selectionState = $7af3f5b51489e0b5$export$253fe78d46329472(props);
  let disabledKeys = reactExports.useMemo(
    () => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(),
    [
      props.disabledKeys
    ]
  );
  let tree = $7613b1592d41b092$export$6cd28814d92fa9c9(
    props,
    (nodes) => new $05ca4cd7c4a5a999$export$863faf230ee2118a(nodes, {
      expandedKeys
    }),
    null,
    [
      expandedKeys
    ]
  );
  reactExports.useEffect(() => {
    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey))
      selectionState.setFocusedKey(null);
  }, [
    tree,
    selectionState.focusedKey
  ]);
  let onToggle = (key) => {
    setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));
  };
  return {
    collection: tree,
    expandedKeys,
    disabledKeys,
    toggleKey: onToggle,
    selectionManager: new $d496c0a20b6e58ec$export$6c8a5aaad13c9852(tree, selectionState)
  };
}
function $875d6693e12af071$var$toggleKey(set, key) {
  let res = new Set(set);
  if (res.has(key))
    res.delete(key);
  else
    res.add(key);
  return res;
}
const StyledDropdownMenu = styled$3("ul", { $$dropdownItemHeight: "$space$13", $$dropdownMenuPadding: "$space$4", $$dropdownMenuWidth: "250px", $$dropdownMenuMinWidth: "250px", listStyle: "none", position: "relative", maxWidth: "$$dropdownMenuWidth", minWidth: "$$dropdownMenuMinWidth", width: "100%", p: "$$dropdownMenuPadding", m: 0, outline: "none" });
const StyledDropdownItemIconWrapper = styled$3("span", { dflex: "center", flexShrink: 0, mr: "$4" });
const StyledDropdownItemKbd = styled$3("kbd", { opacity: 0.8, ml: "$4", mr: 0, dflex: "center", color: "$$dropdownItemKeyboardColor", fontSize: "$xs", fontFamily: "$sans", boxShadow: "none", bg: "transparent", transition: "border 0.12s ease 0s" });
const StyledDropdownItemContentWrapper = styled$3("div", { d: "flex", flex: "1 1 0%", flexDirection: "column", alignItems: "flex-start", lineHeight: 1.2 });
const StyledDropdownItemContent = styled$3("span", { flex: "1 1 0%" });
const StyledDropdownItemDescription = styled$3("span", { fontSize: "$xs", color: "$$dropdownItemDescriptionColor", truncateText: "calc($$dropdownMenuWidth * 0.9)", transition: "color 0.12s ease 0s", variants: { hasIcon: { true: { truncateText: "calc($$dropdownMenuWidth * 0.7)" } }, hasCommand: { true: { truncateText: "calc($$dropdownMenuWidth * 0.7)" } } }, compoundVariants: [{ hasIcon: true, hasCommand: true, css: { truncateText: "calc($$dropdownMenuWidth * 0.6)" } }] });
const StyledDropdownItem = styled$3("li", { $$dropdownItemPressedScale: 0.97, $$dropdownItemTextColor: "$colors$text", $$dropdownItemBorderRadius: "$radii$sm", $$dropdownItemKeyboardColor: "$colors$accents8", $$dropdownItemDescriptionColor: "$colors$accents8", dflex: "center", outline: "none", cursor: "pointer", justifyContent: "space-between", bg: "transparent", position: "relative", height: "$$dropdownItemHeight", px: "$6", br: "$$dropdownItemBorderRadius", color: "$$dropdownItemTextColor", mb: 0, transition: "$dropdownItem", transform: "translateZ(0)", backfaceVisibility: "hidden", $$dropdownItemShadow: "$colors$primaryShadow", "@motion": { transition: "none", [`& ${StyledDropdownItemKbd}`]: { transition: "none" }, [`& ${StyledDropdownItemDescription}`]: { transition: "none" } }, variants: { color: { default: { $$dropdownItemHoverBackground: "$colors$neutralLight", $$dropdownItemHoverTextColor: "$colors$neutralLightContrast", $$dropdownItemActiveBackground: "$colors$neutralLightActive", $$dropdownItemSolidHoverBackground: "$colors$neutral", $$dropdownItemSolidHoverTextColor: "$colors$neutralSolidContrast", $$dropdownItemShadow: "$colors$neutralShadow", $$dropdownItemHoverBorderColor: "$colors$neutralBorder" }, primary: { $$dropdownItemHoverBackground: "$colors$primaryLight", $$dropdownItemHoverTextColor: "$colors$primaryLightContrast", $$dropdownItemActiveBackground: "$colors$primaryLightActive", $$dropdownItemSolidHoverBackground: "$colors$primary", $$dropdownItemSolidHoverTextColor: "$colors$primarySolidContrast", $$dropdownItemShadow: "$colors$primaryShadow", $$dropdownItemHoverBorderColor: "$colors$primaryBorder" }, secondary: { $$dropdownItemHoverBackground: "$colors$secondaryLight", $$dropdownItemHoverTextColor: "$colors$secondaryLightContrast", $$dropdownItemActiveBackground: "$colors$secondaryLightActive", $$dropdownItemSolidHoverBackground: "$colors$secondary", $$dropdownItemSolidHoverTextColor: "$colors$secondarySolidContrast", $$dropdownItemShadow: "$colors$secondaryShadow", $$dropdownItemHoverBorderColor: "$colors$secondaryBorder" }, success: { $$dropdownItemHoverBackground: "$colors$successLight", $$dropdownItemHoverTextColor: "$colors$successLightContrast", $$dropdownItemActiveBackground: "$colors$successLightActive", $$dropdownItemSolidHoverBackground: "$colors$success", $$dropdownItemSolidHoverTextColor: "$colors$successSolidContrast", $$dropdownItemShadow: "$colors$successShadow", $$dropdownItemHoverBorderColor: "$colors$successBorder" }, warning: { $$dropdownItemHoverBackground: "$colors$warningLight", $$dropdownItemHoverTextColor: "$colors$warningLightContrast", $$dropdownItemActiveBackground: "$colors$warningLightActive", $$dropdownItemSolidHoverBackground: "$colors$warning", $$dropdownItemSolidHoverTextColor: "$colors$warningSolidContrast", $$dropdownItemShadow: "$colors$warningShadow", $$dropdownItemHoverBorderColor: "$colors$warningBorder" }, error: { $$dropdownItemHoverBackground: "$colors$errorLight", $$dropdownItemHoverTextColor: "$colors$errorLightContrast", $$dropdownItemActiveBackground: "$colors$errorLightActive", $$dropdownItemSolidHoverBackground: "$colors$error", $$dropdownItemSolidHoverTextColor: "$colors$errorSolidContrast", $$dropdownItemShadow: "$colors$errorShadow", $$dropdownItemHoverBorderColor: "$colors$errorBorder" } }, textColor: { default: {}, primary: { $$dropdownItemTextColor: "$colors$primaryLightContrast", $$dropdownItemHoverTextColor: "$colors$primaryLightContrast" }, secondary: { $$dropdownItemTextColor: "$colors$secondaryLightContrast", $$dropdownItemHoverTextColor: "$colors$secondaryLightContrast" }, success: { $$dropdownItemTextColor: "$colors$successLightContrast", $$dropdownItemHoverTextColor: "$colors$successLightContrast" }, warning: { $$dropdownItemTextColor: "$colors$warningLightContrast", $$dropdownItemHoverTextColor: "$colors$warningLightContrast" }, error: { $$dropdownItemTextColor: "$colors$errorLightContrast", $$dropdownItemHoverTextColor: "$colors$errorLightContrast" } }, variant: { flat: { true: {} }, light: { true: {} }, solid: { true: {} }, shadow: { true: {} } }, isPressed: { true: { bg: "$$dropdownItemActiveBackground" } }, isFocused: { true: { bg: "$$dropdownItemHoverBackground", color: "$$dropdownItemHoverTextColor", zIndex: "$1", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemHoverTextColor", borderColor: "$$dropdownItemHoverBorderColor" }, [`& ${StyledDropdownItemDescription}`]: { color: "currentColor" } } }, isHovered: { true: { bg: "$$dropdownItemHoverBackground", color: "$$dropdownItemHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemHoverTextColor", borderColor: "$$dropdownItemHoverBorderColor" }, [`& ${StyledDropdownItemDescription}`]: { color: "currentColor" } } }, shouldShowOutline: { true: { outline: "solid 2px $$dropdownItemActiveBackground" } }, isSelected: { true: {} }, isSelectable: { true: {} }, isDisabled: { true: { color: "$accents5", cursor: "default" } }, withDescription: { true: { height: "calc($$dropdownItemHeight * 1.2)" } }, withDivider: { true: { mt: "$6", "&:before": { content: '""', position: "absolute", top: "-$3", left: "-$$dropdownMenuPadding", right: "-$$dropdownMenuPadding", height: "$$dropdownItemBorderWeight", bg: "$border" } } }, dividerWeight: { light: { $$dropdownItemBorderWeight: "$borderWeights$light" }, normal: { $$dropdownItemBorderWeight: "$borderWeights$normal" }, bold: { $$dropdownItemBorderWeight: "$borderWeights$bold" }, extrabold: { $$dropdownItemBorderWeight: "$borderWeights$extrabold" }, black: { $$dropdownItemBorderWeight: "$borderWeights$black" } }, showFullDescription: { true: { [`& ${StyledDropdownItemDescription}`]: { mt: "$2", overflow: "visible", textOverflow: "visible", whiteSpace: "normal" } } }, disableAnimation: { true: { transition: "none", [`& ${StyledDropdownItemKbd}`]: { transition: "none" }, [`& ${StyledDropdownItemDescription}`]: { transition: "none" } } } }, compoundVariants: [{ isPressed: true, disableAnimation: false, css: { transform: "scale($$dropdownItemPressedScale)" } }, { isHovered: true, variant: "light", css: { bg: "transparent" } }, { isFocused: true, variant: "light", css: { bg: "transparent" } }, { isHovered: true, variant: "solid", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isFocused: true, variant: "solid", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isHovered: true, variant: "shadow", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", boxShadow: "0 3px 10px 0 $$dropdownItemShadow", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isFocused: true, variant: "shadow", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", boxShadow: "0 3px 10px 0 $$dropdownItemShadow", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { variant: "flat", color: "default", css: { $$dropdownItemHoverTextColor: "$colors$foreground" } }], defaultVariants: { color: "default", textColor: "default", dividerWeight: "light", variant: "flat" } }, cssFocusVisible);
const StyledDropdownSectionWrapper = styled$3("li", { mb: 0 });
const StyledDropdownSection = styled$3("ul", { m: 0, p: 0, listStyle: "none" });
const StyledDropdownSectionTitle = styled$3("span", { fontWeight: "$medium", fontSize: "$xs", padding: "0 $4", color: "$accents8" });
const stroke = keyframes$1({ "100%": { strokeDashoffset: 0 } });
const a = styled$3("svg", { d: "block", path: { transformOrigin: "50% 50%", strokeDasharray: 48, strokeDashoffset: 48, animation: `${stroke} .25s cubic-bezier(0.650, 0.000, 0.450, 1.000) forwards` } }), c$4 = (t2) => {
  const { width: r2 = 24, height: e2 = 24, size: o2, strokeWidth: c2 = 3, fill: m2 = "currentColor", css: h2, className: n2 } = t2;
  return jsxRuntimeExports.jsx(a, { className: a$9("nextui-checkmark", n2), css: h2, height: o2 || e2, role: "img", viewBox: "0 0 52 52", width: o2 || r2, xmlns: "http://www.w3.org/2000/svg", children: jsxRuntimeExports.jsx("path", { d: "M14.1 27.2l7.1 7.2 16.7-16.8", fill: "none", stroke: m2, strokeWidth: c2 }) });
};
c$4.toString = () => ".nextui-checkmark";
const c$5 = c$4;
const D = ({ as: e2, css: p2, item: D2, state: N2, color: y2, icon: P2, command: S2, description: g2, textColor: C2, variant: F2, autoFocus: k2, isVirtualized: j2, withDivider: A2, dividerWeight: I2, showFullDescription: M2, className: V2, onAction: W2 }) => {
  const { onClose: O2, closeOnSelect: z2, disableAnimation: H2, borderWeight: K2 } = useDropdownContext(), { rendered: U2, key: $2 } = D2, q2 = N2.selectionManager.isSelected($2), B2 = N2.selectionManager.focusedKey === D2.key, E2 = N2.disabledKeys.has($2), G2 = reactExports.useRef(null), { pressProps: J2, isPressed: L2 } = $f6c31cce2adf654f$export$45712eceda6fad21$4({ ref: G2, isDisabled: E2 }), { isFocusVisible: Q2, focusProps: R2 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: k2 }), { hoverProps: T2, isHovered: X2 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: E2 }), Y2 = "none" !== N2.selectionManager.selectionMode && !E2, { menuItemProps: Z2, labelProps: _2, descriptionProps: ee2, keyboardShortcutProps: oe2 } = $a2e5df62f93c7633$export$9d32628fc2aea7da({ key: $2, onClose: O2, isSelected: q2, isDisabled: E2, "aria-label": D2["aria-label"], closeOnSelect: z2, isVirtualized: j2, onAction: W2 }, N2, G2), se2 = reactExports.useMemo(() => X2 ? "hovered" : q2 ? "selected" : L2 ? "pressed" : E2 ? "disabled" : "ready", [q2, E2, X2, L2]), ie2 = reactExports.useMemo(() => D2.props.textColor ? D2.props.textColor : D2.props.color && "default" === C2 ? D2.props.color : C2, [C2, D2.props.color, D2.props.textColor]), re2 = reactExports.useMemo(() => g2 || D2.props.description, [g2, D2.props.description]), te2 = reactExports.useMemo(() => S2 || D2.props.command, [S2, D2.props.command]), ae2 = reactExports.useMemo(() => P2 || D2.props.icon, [P2, D2.props.icon]);
  return jsxRuntimeExports.jsxs(StyledDropdownItem, { ref: G2, ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(Z2, T2, J2, R2), as: D2.props.as || e2, className: a$9("nextui-dropdown-item", { "is-disabled": E2, "is-selected": q2, "is-selectable": Y2, "is-hovered": X2, "is-focused": B2, "is-pressed": L2 }, V2, D2.props.className), color: D2.props.color || y2, css: { ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(p2, D2.props.css) }, "data-state": se2, disableAnimation: H2, dividerWeight: I2 || D2.props.dividerWeight || K2, isDisabled: E2, isFocusVisible: Q2, isFocused: B2, isHovered: X2, isPressed: L2, isSelectable: Y2, isSelected: q2, shouldShowOutline: Q2 && "shadow" === F2, showFullDescription: M2 || D2.props.showFullDescription, textColor: ie2, variant: D2.props.variant || F2, withDescription: !!re2, withDivider: A2 || D2.props.withDivider, children: [ae2 && jsxRuntimeExports.jsx(StyledDropdownItemIconWrapper, { className: "nextui-dropdown-item-icon-wrapper", children: ae2 }), re2 ? jsxRuntimeExports.jsxs(StyledDropdownItemContentWrapper, { children: [jsxRuntimeExports.jsx(StyledDropdownItemContent, { className: "nextui-dropdown-item-content", ..._2, children: U2 }), jsxRuntimeExports.jsx(StyledDropdownItemDescription, { className: "nextui-dropdown-item-description", hasCommand: !!te2, hasIcon: !!ae2, ...ee2, children: re2 })] }) : jsxRuntimeExports.jsx(StyledDropdownItemContent, { className: "nextui-dropdown-item-content", ..._2, children: U2 }), te2 && jsxRuntimeExports.jsx(StyledDropdownItemKbd, { className: "nextui-dropdown-item-command", ...oe2, children: te2 }), q2 && jsxRuntimeExports.jsx(c$5, { css: { ml: "$4" } })] });
};
D.toString = () => ".nextui-dropdown-item";
const l$2 = D;
const u$2 = (o2) => {
  var a2, u2;
  const { item: x2, state: w2, css: f2, as: h2, color: v2, textColor: N2, variant: y2, withDivider: g2 = true, className: j2, onAction: P2 } = o2, { itemProps: b2, headingProps: k2, groupProps: A2 } = $3e5eb2498db5b506$export$73f7a44322579622({ heading: x2.rendered, "aria-label": x2["aria-label"] });
  return jsxRuntimeExports.jsxs(reactExports.Fragment, { children: [x2.key !== w2.collection.getFirstKey() && g2 && jsxRuntimeExports.jsx(e$e, { as: "li", className: "nextui-dropdown-section-divider", css: { my: "$2" } }), jsxRuntimeExports.jsxs(StyledDropdownSectionWrapper, { ...b2, className: "nextui-dropdown-section-wrapper", children: [x2.rendered && jsxRuntimeExports.jsx(StyledDropdownSectionTitle, { ...k2, className: "nextui-dropdown-section-title", children: x2.rendered }), jsxRuntimeExports.jsx(StyledDropdownSection, { ...A2, as: (null == (a2 = x2.props) ? void 0 : a2.as) || h2, className: a$9("nextui-dropdown-section", j2), css: { ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(f2, null == (u2 = x2.props) ? void 0 : u2.css) }, children: [...x2.childNodes].map((r2) => {
    let e2 = jsxRuntimeExports.jsx(l$2, { color: v2, item: r2, state: w2, textColor: N2, variant: y2, onAction: P2 }, r2.key);
    return r2.wrapper && (e2 = r2.wrapper(e2)), e2;
  }) })] })] });
};
u$2.toString = () => ".nextui-dropdown-section";
const c$3 = u$2;
const u$1 = React.forwardRef((o2, s2) => {
  const { as: u2, css: x2, color: w2 = "default", textColor: y2 = "default", variant: C2 = "flat", containerCss: v2, ...A2 } = o2, N2 = useDropdownContext(), h2 = { ...$3ef42575df84b30b$export$9d1611c77c2fe928$5(N2, A2) }, j2 = useDOMRef(s2), k2 = $875d6693e12af071$export$728d6ba534403756(h2), { menuProps: g2 } = $d5336fe17ce95402$export$38eaa17faae8f579(h2, k2, j2);
  return useSyncRef(N2, j2), jsxRuntimeExports.jsx(o$1.Content, { css: v2, children: jsxRuntimeExports.jsx(StyledDropdownMenu, { ref: j2, as: u2, className: a$9("nextui-dropdown-menu", o2.className), css: x2, ...g2, children: [...k2.collection].map((o3) => {
    if ("section" === o3.type)
      return jsxRuntimeExports.jsx(c$3, { color: w2, item: o3, state: k2, textColor: y2, variant: C2, onAction: h2.onAction }, o3.key);
    let t2 = jsxRuntimeExports.jsx(l$2, { color: w2, item: o3, state: k2, textColor: y2, variant: C2, onAction: h2.onAction }, o3.key);
    return o3.wrapper && (t2 = o3.wrapper(t2)), t2;
  }) }) });
});
u$1.toString = () => ".nextui-dropdown-menu";
const r$2 = u$1;
const r$1 = ({ fill: t2, size: i2, height: r2, width: e2, ...n2 }) => jsxRuntimeExports.jsx("svg", { fill: "none", height: i2 || r2 || 24, viewBox: "0 0 24 24", width: i2 || e2 || 24, xmlns: "http://www.w3.org/2000/svg", ...n2, children: jsxRuntimeExports.jsx("path", { d: "M17.9188 8.17969H11.6888H6.07877C5.11877 8.17969 4.63877 9.33969 5.31877 10.0197L10.4988 15.1997C11.3288 16.0297 12.6788 16.0297 13.5088 15.1997L15.4788 13.2297L18.6888 10.0197C19.3588 9.33969 18.8788 8.17969 17.9188 8.17969Z", fill: t2 }) });
r$1.toString = () => ".nextui-dropdown-icon";
const d$3 = r$1;
const c$2 = React.forwardRef((t2, n2) => {
  const { css: c2, children: p2, className: u2, iconRight: l2, iconRightCss: f2, auto: x2 = true, animated: g2, ...h2 } = t2, { disableAnimation: w2 } = useDropdownContext(), b2 = useDOMRef(n2), R2 = reactExports.useMemo(() => l2 || jsxRuntimeExports.jsx(d$3, { fill: "currentColor", size: 14 }), [l2]), N2 = reactExports.useMemo(() => g2 || !w2, [g2, w2]);
  return jsxRuntimeExports.jsx(e$3, { css: { "& .nextui-button-icon-right, & .nextui-button-text-right": { pointerEvents: "none" }, ...c2 }, children: jsxRuntimeExports.jsx(t$c, { ref: b2, animated: N2, auto: x2, className: a$9("nextui-dropdown-button", u2), iconRight: R2, iconRightCss: { mt: "$1", ...f2 }, ...h2, children: p2 }) });
});
c$2.toString = () => ".nextui-dropdown-button";
const d$2 = c$2;
function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {
  let overlayTriggerState = $fc909762b330b746$export$61c6a8c84e605fb6(props);
  let [focusStrategy1, setFocusStrategy] = reactExports.useState(null);
  return {
    focusStrategy: focusStrategy1,
    ...overlayTriggerState,
    open(focusStrategy = null) {
      setFocusStrategy(focusStrategy);
      overlayTriggerState.open();
    },
    toggle(focusStrategy = null) {
      setFocusStrategy(focusStrategy);
      overlayTriggerState.toggle();
    }
  };
}
function useDropdown(i2 = {}) {
  const { triggerRef: a2, type: l2 = "menu", trigger: u2 = "press", isDisabled: p2 = false, borderWeight: m2, closeOnSelect: c2, disableAnimation: g2 = false, disableTriggerPressedAnimation: f2 = false, isOpen: d2, defaultOpen: b2, onOpenChange: O2, ...P2 } = i2, h2 = reactExports.useRef(null), y2 = a2 || h2, C2 = reactExports.useRef(null), T2 = reactExports.useRef(null), A2 = $a28c903ee9ad8dc5$export$79fefeb1c2091ac3({ ...i2, isOpen: d2, defaultOpen: b2, onOpenChange: O2 }), { menuTriggerProps: R2, menuProps: D2 } = $168583247155ddda$export$dc9c12ed27dd1b49({ type: l2, trigger: u2, isDisabled: p2 }, A2, y2), S2 = reactExports.useCallback(() => {
    A2.close(), null == P2.onClose || P2.onClose();
  }, [A2.close, P2.onClose]), v2 = reactExports.useCallback((e2 = {}, r2 = null) => {
    const { css: o2, ...t2 } = null != a2 && a2.current ? $3ef42575df84b30b$export$9d1611c77c2fe928$5(R2, e2) : $3ef42575df84b30b$export$9d1611c77c2fe928$5(e2, R2);
    return { ref: mergeRefs(h2, r2), css: f2 ? o2 : { '&[aria-haspopup="true"]&[aria-expanded="true"]': { opacity: 0.7, backfaceVisibility: "hidden", transform: "translateZ(0) scale(0.97)" }, ...o2 }, ...t2 };
  }, [h2, a2, R2, f2]);
  return { ...D2, popoverProps: P2, state: A2, ref: C2, onClose: S2, autoFocus: A2.focusStrategy || true, disableAnimation: g2, disableTriggerPressedAnimation: f2, menuRef: C2, borderWeight: m2, menuPopoverRef: T2, menuTriggerRef: y2, closeOnSelect: c2, getMenuTriggerProps: v2 };
}
const m$3 = (e2) => {
  const { children: m2, ...p2 } = e2, d2 = useDropdown(p2), [a2, f2] = React.Children.toArray(m2);
  return jsxRuntimeExports.jsx(DropdownProvider, { value: d2, children: jsxRuntimeExports.jsxs(o$1, { ref: d2.menuPopoverRef, ...d2.popoverProps, borderWeight: d2.borderWeight, disableAnimation: d2.disableAnimation, isOpen: d2.state.isOpen, scrollRef: d2.menuRef, triggerRef: d2.menuTriggerRef, onClose: d2.onClose, children: [a2, f2] }) });
};
m$3.toString = () => ".nextui-dropdown";
const n$2 = m$3;
n$2.Trigger = e$3, n$2.Button = d$2, n$2.Menu = r$2, n$2.Section = $9fc4852771d079eb$export$6e2c8f0811a474ce, n$2.Item = t$2;
const pointAnimation = keyframes$1({ "0%": { opacity: 1 }, "50%": { opacity: "0.4", transform: "scale(0.5)" }, "100%": { opacity: 1 } });
const appearanceInTopRight = keyframes$1({ "0%": { opacity: 0, transform: "scale(0.2) translate(50%, -50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(50%, -50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(50%, -50%)" } });
const appearanceOutTopRight = keyframes$1({ "0%": { opacity: 1, transform: "scale(1) translate(50%, -50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(50%, -50%)" } });
const appearanceInTopLeft = keyframes$1({ "0%": { opacity: 0, transform: "scale(0.2) translate(-50%, -50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(-50%, -50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(-50%, -50%)" } });
const appearanceOutTopLeft = keyframes$1({ "0%": { opacity: 1, transform: "scale(1) translate(-50%, -50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(-50%, -50%)" } });
const appearanceInBottomRight = keyframes$1({ "0%": { opacity: 0, transform: "scale(0.2) translate(50%, 50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(50%, 50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(50%, 50%)" } });
const appearanceOutBottomRight = keyframes$1({ "0%": { opacity: 1, transform: "scale(1) translate(50%, 50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(50%, 50%)" } });
const appearanceInBottomLeft = keyframes$1({ "0%": { opacity: 0, transform: "scale(0.2) translate(-50%, 50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(-50%, 50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(-50%, 50%)" } });
const appearanceOutBottomLeft = keyframes$1({ "0%": { opacity: 1, transform: "scale(1) translate(-50%, 50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(-50%, 50%)" } });
const StyledBadgeRoot = styled$3("span", { d: "inline-flex", flexShrink: 0, verticalAlign: "middle", position: "relative", overflow: "visible" });
const StyledBadge = styled$3("span", { $$badgePlacementHOffset: "0%", $$badgePlacementVOffset: "0%", lineHeight: 1, display: "flex", flexFlow: "row wrap", placeContent: "center", alignItems: "center", boxSizing: "border-box", whiteSpace: "nowrap", bg: "$$badgeBackgroundColor", color: "$$badgeTextColor", fontWeight: "$bold", fontSize: "$$badgeFontSize", p: "$$badgeVPadding $$badgeHPadding", "@motion": { animation: "none", transition: "none", "&.nextui-badge--is-invisible": { animation: "none", transition: "none" } }, variants: { size: { xs: { $$badgeVPadding: "$space$2", $$badgeHPadding: "$space$2", $$badgeFontSize: "0.65rem" }, sm: { $$badgeVPadding: "$space$2", $$badgeHPadding: "$space$3", $$badgeFontSize: "0.73rem" }, md: { $$badgeVPadding: "$space$3", $$badgeHPadding: "$space$4", $$badgeFontSize: "$fontSizes$xs" }, lg: { $$badgeVPadding: "$space$4", $$badgeHPadding: "$space$5", $$badgeFontSize: "$fontSizes$base" }, xl: { $$badgeVPadding: "$space$5", $$badgeHPadding: "$space$6", $$badgeFontSize: "$fontSizes$xl" } }, shape: { circle: {}, rectangle: {} }, asChild: { true: { zIndex: "$2", position: "absolute", lineHeight: 1.5 } }, isOneChar: { true: {} }, color: { default: { $$badgeBackgroundColor: "$colors$neutral", $$badgeTextColor: "$colors$neutralSolidContrast", $$badgeShadowColor: "$colors$neutralShadow" }, primary: { $$badgeBackgroundColor: "$colors$primary", $$badgeTextColor: "$colors$primarySolidContrast", $$badgeShadowColor: "$colors$primaryShadow" }, secondary: { $$badgeBackgroundColor: "$colors$secondary", $$badgeTextColor: "$colors$secondarySolidContrast", $$badgeShadowColor: "$colors$secondaryShadow" }, success: { $$badgeBackgroundColor: "$colors$success", $$badgeTextColor: "$colors$successSolidContrast", $$badgeShadowColor: "$colors$successShadow" }, warning: { $$badgeBackgroundColor: "$colors$warning", $$badgeTextColor: "$colors$warningSolidContrast", $$badgeShadowColor: "$colors$warningShadow" }, error: { $$badgeBackgroundColor: "$colors$error", $$badgeTextColor: "$colors$errorSolidContrast", $$badgeShadowColor: "$colors$errorShadow" } }, enableShadow: { true: { boxShadow: "0 2px 10px 0 $$badgeShadowColor" } }, isSquared: { true: { borderRadius: "calc($$badgeFontSize * 0.45)" }, false: { borderRadius: "$pill" } }, placement: { "top-right": { animation: `${appearanceInTopRight} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutTopRight} 0.2s ease-in` } }, "top-left": { animation: `${appearanceInTopLeft} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutTopLeft} 0.2s ease-in` } }, "bottom-right": { animation: `${appearanceInBottomRight} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutBottomRight} 0.2s ease-in` } }, "bottom-left": { animation: `${appearanceInBottomLeft} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutBottomLeft} 0.2s ease-in` } } }, variant: { default: {}, flat: {}, dot: { p: 0, dflex: "center", minSize: "$$badgeFontSize", boxSizing: "border-box" }, points: { p: "calc($$badgeFontSize * 0.4)", boxSizing: "border-box", $$badgePlacementHOffset: "calc($$badgeFontSize * 0.8)" }, bordered: { $$badgeBackgroundColor: "$colors$background", bg: "$background", bw: "$$badgeBorderWeight", borderStyle: "solid", borderColor: "$$badgeTextColor" } }, borderWeight: { light: { $$badgeBorderWeight: "$borderWeights$light" }, normal: { $$badgeBorderWeight: "$borderWeights$normal" }, bold: { $$badgeBorderWeight: "$borderWeights$bold" }, extrabold: { $$badgeBorderWeight: "$borderWeights$extrabold" }, black: { $$badgeBorderWeight: "$borderWeights$black" } }, disableOutline: { true: { border: "2px solid transparent" }, false: { border: "2px solid $colors$background" } }, disableAnimation: { true: { animation: "none", transition: "none", "&.nextui-badge--is-invisible": { animation: "none", transition: "none" } } } }, compoundVariants: [{ variant: "flat", color: "default", css: { $$badgeBackgroundColor: "$colors$neutralLight", $$badgeTextColor: "$colors$neutralLightContrast" } }, { variant: "flat", color: "primary", css: { $$badgeBackgroundColor: "$colors$primaryLight", $$badgeTextColor: "$colors$primaryLightContrast" } }, { variant: "flat", color: "secondary", css: { $$badgeBackgroundColor: "$colors$secondaryLight", $$badgeTextColor: "$colors$secondaryLightContrast" } }, { variant: "flat", color: "success", css: { $$badgeBackgroundColor: "$colors$successLight", $$badgeTextColor: "$colors$successLightContrast" } }, { variant: "flat", color: "warning", css: { $$badgeBackgroundColor: "$colors$warningLight", $$badgeTextColor: "$colors$warningLightContrast" } }, { variant: "flat", color: "error", css: { $$badgeBackgroundColor: "$colors$errorLight", $$badgeTextColor: "$colors$errorLightContrast" } }, { variant: "bordered", color: "default", css: { $$badgeTextColor: "$colors$neutral" } }, { variant: "bordered", color: "primary", css: { $$badgeTextColor: "$colors$primary" } }, { variant: "bordered", color: "secondary", css: { $$badgeTextColor: "$colors$secondary" } }, { variant: "bordered", color: "success", css: { $$badgeTextColor: "$colors$success" } }, { variant: "bordered", color: "warning", css: { $$badgeTextColor: "$colors$warning" } }, { variant: "bordered", color: "error", css: { $$badgeTextColor: "$colors$error" } }, { asChild: true, shape: "rectangle", placement: "top-right", css: { top: "calc(5% + $$badgePlacementVOffset)", right: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, -50%)", transformOrigin: "100% 0%" } }, { asChild: true, shape: "rectangle", placement: "top-left", css: { top: "calc(5% + $$badgePlacementVOffset)", left: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, -50%)", transformOrigin: "0% 0%" } }, { asChild: true, shape: "rectangle", placement: "bottom-right", css: { bottom: "calc(5% + $$badgePlacementVOffset)", right: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, 50%)", transformOrigin: "100% 100%" } }, { asChild: true, shape: "rectangle", placement: "bottom-left", css: { bottom: "calc(5% + $$badgePlacementVOffset)", left: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, 50%)", transformOrigin: "0% 100%" } }, { asChild: true, shape: "circle", placement: "top-right", css: { top: "calc(15% + $$badgePlacementVOffset)", right: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, -50%)", transformOrigin: "100% 0%" } }, { asChild: true, shape: "circle", placement: "top-left", css: { top: "calc(15% + $$badgePlacementVOffset)", left: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, -50%)", transformOrigin: "0% 0%" } }, { asChild: true, shape: "circle", placement: "bottom-right", css: { bottom: "calc(15% + $$badgePlacementVOffset)", right: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, 50%)", transformOrigin: "100% 100%" } }, { asChild: true, shape: "circle", placement: "bottom-left", css: { bottom: "calc(15% + $$badgePlacementVOffset)", left: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, 50%)", transformOrigin: "0% 100%" } }, { variant: "dot", shape: "rectangle", css: { $$badgePlacementHOffset: "calc($$badgeFontSize * 0.2)", $$badgePlacementVOffset: "calc($$badgeFontSize * 0.1)" } }, { isOneChar: true, asChild: true, css: { p: 0, size: "calc($$badgeFontSize + $$badgeHPadding)" } }, { isOneChar: false, asChild: true, css: { $$badgeVPadding: "0px", $$badgeHPadding: "$space$2" } }, { isOneChar: false, asChild: true, size: "md", css: { $$badgeHPadding: "$space$3" } }, { isOneChar: false, asChild: true, size: "lg", css: { $$badgeHPadding: "$space$4" } }, { isOneChar: false, asChild: true, size: "xl", css: { $$badgeHPadding: "$space$5" } }, { disableOutline: true, variant: "bordered", css: { borderColor: "$$badgeTextColor" } }], defaultVariants: { size: "md", color: "default", variant: "default", borderWeight: "normal", placement: "top-right", shape: "rectangle", enableShadow: false, disableOutline: false, isSquared: false } });
const StyledBadgePoints = styled$3("div", { position: "relative", dflex: "center", "& .nextui-badge-point": { size: "calc($$badgeFontSize * 0.3)", background: "$$badgeTextColor", margin: "0 2px", borderRadius: "$pill", "&:nth-child(1)": { animation: `${pointAnimation} 1.2s ease infinite` }, "&:nth-child(2)": { animation: `${pointAnimation} 1.2s ease infinite 0.4s` }, "&:nth-child(3)": { animation: `${pointAnimation} 1.2s ease infinite 0.8s` } } });
const m$2 = forwardRef((t2, i2) => {
  const { css: m2, children: p2, content: c2, isInvisible: u2 = false, disableOutline: f2, placement: b2 = "top-right", variant: g2 = "default", verticalOffset: x2, horizontalOffset: $2, disableAnimation: h2 = false, className: N2, ...O2 } = t2, v2 = useDOMRef(i2), y2 = void 0 !== c2 && !!p2, j2 = reactExports.useMemo(() => {
    var e2;
    return y2 && c2 && "points" !== g2 && "dot" !== g2 ? 1 === (null == (e2 = String(c2)) ? void 0 : e2.length) : !(!p2 || "string" != typeof p2) && 1 === p2.length;
  }, [y2, p2, g2, c2]), P2 = reactExports.useMemo(() => "dot" === g2 ? null : "points" === g2 ? jsxRuntimeExports.jsxs(StyledBadgePoints, { className: "nextui-badge-points", children: [jsxRuntimeExports.jsx("span", { className: "nextui-badge-point", "data-testid": "badge-point" }), jsxRuntimeExports.jsx("span", { className: "nextui-badge-point", "data-testid": "badge-point" }), jsxRuntimeExports.jsx("span", { className: "nextui-badge-point", "data-testid": "badge-point" })] }) : y2 ? c2 : p2, [g2, j2, y2, c2, p2]), M2 = reactExports.useMemo(() => {
    const e2 = "number" == typeof $2, t3 = "number" == typeof x2;
    return x2 && $2 ? { $$badgePlacementHOffset: e2 ? `${$2}px` : $2, $$badgePlacementVOffset: t3 ? `${x2}px` : x2, ...m2 } : x2 ? { $$badgePlacementVOffset: t3 ? `${x2}px` : x2, ...m2 } : $2 ? { $$badgePlacementHOffset: e2 ? `${$2}px` : $2, ...m2 } : m2;
  }, [x2, $2, m2]);
  return jsxRuntimeExports.jsxs(StyledBadgeRoot, { ref: v2, className: a$9("nextui-badge-root", N2), children: [y2 && p2, jsxRuntimeExports.jsx(StyledBadge, { asChild: y2, className: a$9("nextui-badge", { "nextui-badge--is-invisible": u2 }), css: M2, disableAnimation: h2 || !y2, disableOutline: "bordered" === g2 || f2, isOneChar: j2, placement: b2, variant: g2, ...O2, children: P2 })] });
});
m$2.toString = () => ".nextui-badge";
const e$2 = m$2;
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var reactIs_production_min$1 = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = Symbol.for("react.element"), c$1 = Symbol.for("react.portal"), d$1 = Symbol.for("react.fragment"), e$1 = Symbol.for("react.strict_mode"), f$1 = Symbol.for("react.profiler"), g$1 = Symbol.for("react.provider"), h$1 = Symbol.for("react.context"), k$1 = Symbol.for("react.server_context"), l$1 = Symbol.for("react.forward_ref"), m$1 = Symbol.for("react.suspense"), n$1 = Symbol.for("react.suspense_list"), p$1 = Symbol.for("react.memo"), q$1 = Symbol.for("react.lazy"), t$1 = Symbol.for("react.offscreen"), u;
u = Symbol.for("react.module.reference");
function v$1(a2) {
  if ("object" === typeof a2 && null !== a2) {
    var r2 = a2.$$typeof;
    switch (r2) {
      case b$1:
        switch (a2 = a2.type, a2) {
          case d$1:
          case f$1:
          case e$1:
          case m$1:
          case n$1:
            return a2;
          default:
            switch (a2 = a2 && a2.$$typeof, a2) {
              case k$1:
              case h$1:
              case l$1:
              case q$1:
              case p$1:
              case g$1:
                return a2;
              default:
                return r2;
            }
        }
      case c$1:
        return r2;
    }
  }
}
reactIs_production_min$1.ContextConsumer = h$1;
reactIs_production_min$1.ContextProvider = g$1;
reactIs_production_min$1.Element = b$1;
reactIs_production_min$1.ForwardRef = l$1;
reactIs_production_min$1.Fragment = d$1;
reactIs_production_min$1.Lazy = q$1;
reactIs_production_min$1.Memo = p$1;
reactIs_production_min$1.Portal = c$1;
reactIs_production_min$1.Profiler = f$1;
reactIs_production_min$1.StrictMode = e$1;
reactIs_production_min$1.Suspense = m$1;
reactIs_production_min$1.SuspenseList = n$1;
reactIs_production_min$1.isAsyncMode = function() {
  return false;
};
reactIs_production_min$1.isConcurrentMode = function() {
  return false;
};
reactIs_production_min$1.isContextConsumer = function(a2) {
  return v$1(a2) === h$1;
};
reactIs_production_min$1.isContextProvider = function(a2) {
  return v$1(a2) === g$1;
};
reactIs_production_min$1.isElement = function(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === b$1;
};
reactIs_production_min$1.isForwardRef = function(a2) {
  return v$1(a2) === l$1;
};
reactIs_production_min$1.isFragment = function(a2) {
  return v$1(a2) === d$1;
};
reactIs_production_min$1.isLazy = function(a2) {
  return v$1(a2) === q$1;
};
reactIs_production_min$1.isMemo = function(a2) {
  return v$1(a2) === p$1;
};
reactIs_production_min$1.isPortal = function(a2) {
  return v$1(a2) === c$1;
};
reactIs_production_min$1.isProfiler = function(a2) {
  return v$1(a2) === f$1;
};
reactIs_production_min$1.isStrictMode = function(a2) {
  return v$1(a2) === e$1;
};
reactIs_production_min$1.isSuspense = function(a2) {
  return v$1(a2) === m$1;
};
reactIs_production_min$1.isSuspenseList = function(a2) {
  return v$1(a2) === n$1;
};
reactIs_production_min$1.isValidElementType = function(a2) {
  return "string" === typeof a2 || "function" === typeof a2 || a2 === d$1 || a2 === f$1 || a2 === e$1 || a2 === m$1 || a2 === n$1 || a2 === t$1 || "object" === typeof a2 && null !== a2 && (a2.$$typeof === q$1 || a2.$$typeof === p$1 || a2.$$typeof === g$1 || a2.$$typeof === h$1 || a2.$$typeof === l$1 || a2.$$typeof === u || void 0 !== a2.getModuleId) ? true : false;
};
reactIs_production_min$1.typeOf = v$1;
function isPlainObject(item) {
  return item !== null && typeof item === "object" && item.constructor === Object;
}
function deepClone(source) {
  if (!isPlainObject(source)) {
    return source;
  }
  const output = {};
  Object.keys(source).forEach((key) => {
    output[key] = deepClone(source[key]);
  });
  return output;
}
function deepmerge(target, source, options = {
  clone: true
}) {
  const output = options.clone ? {
    ...target
  } : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach((key) => {
      if (key === "__proto__") {
        return;
      }
      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        output[key] = deepmerge(target[key], source[key], options);
      } else if (options.clone) {
        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}
function formatMuiErrorMessage(code) {
  let url = "https://mui.com/production-error/?code=" + code;
  for (let i2 = 1; i2 < arguments.length; i2 += 1) {
    url += "&args[]=" + encodeURIComponent(arguments[i2]);
  }
  return "Minified MUI error #" + code + "; visit " + url + " for the full message.";
}
function capitalize(string) {
  if (typeof string !== "string") {
    throw new Error(formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}
function createChainedFunction(...funcs) {
  return funcs.reduce((acc, func) => {
    if (func == null) {
      return acc;
    }
    return function chainedFunction(...args) {
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, () => {
  });
}
function debounce(func, wait = 166) {
  let timeout;
  function debounced(...args) {
    const later = () => {
      func.apply(this, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = () => {
    clearTimeout(timeout);
  };
  return debounced;
}
function deprecatedPropType(validator, reason) {
  {
    return () => null;
  }
}
function isMuiElement(element, muiNames) {
  return /* @__PURE__ */ reactExports.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
function ownerDocument(node2) {
  return node2 && node2.ownerDocument || document;
}
function ownerWindow(node2) {
  const doc = ownerDocument(node2);
  return doc.defaultView || window;
}
function requirePropFactory(componentNameInError, Component) {
  {
    return () => null;
  }
}
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
const useEnhancedEffect = typeof window !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
const useEnhancedEffect$1 = useEnhancedEffect;
let globalId = 0;
function useGlobalId(idOverride) {
  const [defaultId, setDefaultId] = reactExports.useState(idOverride);
  const id2 = idOverride || defaultId;
  reactExports.useEffect(() => {
    if (defaultId == null) {
      globalId += 1;
      setDefaultId(`mui-${globalId}`);
    }
  }, [defaultId]);
  return id2;
}
const maybeReactUseId = React$1["useId".toString()];
function useId(idOverride) {
  if (maybeReactUseId !== void 0) {
    const reactId = maybeReactUseId();
    return idOverride != null ? idOverride : reactId;
  }
  return useGlobalId(idOverride);
}
function unsupportedProp(props, propName, componentName, location2, propFullName) {
  {
    return null;
  }
}
function useControlled({
  controlled,
  default: defaultProp,
  name,
  state = "value"
}) {
  const {
    current: isControlled
  } = reactExports.useRef(controlled !== void 0);
  const [valueState, setValue] = reactExports.useState(defaultProp);
  const value = isControlled ? controlled : valueState;
  const setValueIfUncontrolled = reactExports.useCallback((newValue) => {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}
function useEventCallback(fn) {
  const ref = reactExports.useRef(fn);
  useEnhancedEffect$1(() => {
    ref.current = fn;
  });
  return reactExports.useCallback((...args) => (
    // @ts-expect-error hide `this`
    // tslint:disable-next-line:ban-comma-operator
    (0, ref.current)(...args)
  ), []);
}
function useForkRef(...refs) {
  return reactExports.useMemo(() => {
    if (refs.every((ref) => ref == null)) {
      return null;
    }
    return (instance) => {
      refs.forEach((ref) => {
        setRef(ref, instance);
      });
    };
  }, refs);
}
let hadKeyboardEvent = true;
let hadFocusVisibleRecently = false;
let hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  "datetime-local": true
};
function focusTriggersKeyboardModality(node2) {
  const {
    type,
    tagName
  } = node2;
  if (tagName === "INPUT" && inputTypesWhitelist[type] && !node2.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node2.readOnly) {
    return true;
  }
  if (node2.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event) {
  if (event.metaKey || event.altKey || event.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event) {
  const {
    target
  } = event;
  try {
    return target.matches(":focus-visible");
  } catch (error) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
  const ref = reactExports.useCallback((node2) => {
    if (node2 != null) {
      prepare(node2.ownerDocument);
    }
  }, []);
  const isFocusVisibleRef = reactExports.useRef(false);
  function handleBlurVisible() {
    if (isFocusVisibleRef.current) {
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }
    return false;
  }
  function handleFocusVisible(event) {
    if (isFocusVisible(event)) {
      isFocusVisibleRef.current = true;
      return true;
    }
    return false;
  }
  return {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref
  };
}
function resolveProps(defaultProps2, props) {
  const output = {
    ...props
  };
  Object.keys(defaultProps2).forEach((propName) => {
    if (propName.toString().match(/^(components|slots)$/)) {
      output[propName] = {
        ...defaultProps2[propName],
        ...output[propName]
      };
    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {
      const defaultSlotProps = defaultProps2[propName] || {};
      const slotProps = props[propName];
      output[propName] = {};
      if (!slotProps || !Object.keys(slotProps)) {
        output[propName] = defaultSlotProps;
      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {
        output[propName] = slotProps;
      } else {
        output[propName] = {
          ...slotProps
        };
        Object.keys(defaultSlotProps).forEach((slotPropName) => {
          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);
        });
      }
    } else if (output[propName] === void 0) {
      output[propName] = defaultProps2[propName];
    }
  });
  return output;
}
function composeClasses(slots, getUtilityClass, classes = void 0) {
  const output = {};
  Object.keys(slots).forEach(
    // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (slot) => {
      output[slot] = slots[slot].reduce((acc, key) => {
        if (key) {
          const utilityClass = getUtilityClass(key);
          if (utilityClass !== "") {
            acc.push(utilityClass);
          }
          if (classes && classes[key]) {
            acc.push(classes[key]);
          }
        }
        return acc;
      }, []).join(" ");
    }
  );
  return output;
}
const defaultGenerator = (componentName) => componentName;
const createClassNameGenerator = () => {
  let generate = defaultGenerator;
  return {
    configure(generator) {
      generate = generator;
    },
    generate(componentName) {
      return generate(componentName);
    },
    reset() {
      generate = defaultGenerator;
    }
  };
};
const ClassNameGenerator = createClassNameGenerator();
const ClassNameGenerator$1 = ClassNameGenerator;
const globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  readOnly: "readOnly",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(componentName, slot, globalStatePrefix = "Mui") {
  const globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator$1.generate(componentName)}-${slot}`;
}
function generateUtilityClasses(componentName, slots, globalStatePrefix = "Mui") {
  const result = {};
  slots.forEach((slot) => {
    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
  });
  return result;
}
function memoize$1(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = /* @__PURE__ */ memoize$1(
  function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
);
function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }
  for (var i2 = 0; i2 < document.styleSheets.length; i2++) {
    if (document.styleSheets[i2].ownerNode === tag) {
      return document.styleSheets[i2];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement("style");
  tag.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag.setAttribute("nonce", options.nonce);
  }
  tag.appendChild(document.createTextNode(""));
  tag.setAttribute("data-s", "");
  return tag;
}
var StyleSheet = /* @__PURE__ */ function() {
  function StyleSheet2(options) {
    var _this = this;
    this._insertTag = function(tag) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag, before);
      _this.tags.push(tag);
    };
    this.isSpeedy = options.speedy === void 0 ? true : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce;
    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e2) {
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
  };
  return StyleSheet2;
}();
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var LAYER = "@layer";
var abs = Math.abs;
var from = String.fromCharCode;
var assign = Object.assign;
function hash(value, length2) {
  return charat(value, 0) ^ 45 ? (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index2) {
  return value.charCodeAt(index2) | 0;
}
function substr(value, begin, end) {
  return value.slice(begin, end);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}
var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value, root, parent, type, props, children, length2) {
  return { value, root, parent, type, props, children, line, column, length: length2, return: "" };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0), root, { length: -root.length }, props);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index2, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index2, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index2) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index2, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index2) {
  while (!token(peek()))
    next();
  return slice(index2, position);
}
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index2 = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f") != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index2++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (ampersand == -1)
              characters2 = replace(characters2, /\f/g, "");
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference = ruleset(characters2, root, parent, index2, offset, rules, points, type, props = [], children = [], length2), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse(characters2, root, reference, reference, props, rulesets, length2, points, children);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference, reference, reference, [""], children, 0, points, children);
                }
        }
        index2 = offset = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index2++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index2, offset, rules, points, type, props, children, length2) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [""];
  var size = sizeof(rule);
  for (var i2 = 0, j2 = 0, k2 = 0; i2 < index2; ++i2)
    for (var x2 = 0, y2 = substr(value, post + 1, post = abs(j2 = points[i2])), z2 = value; x2 < size; ++x2)
      if (z2 = trim(j2 > 0 ? rule[x2] + " " + y2 : replace(y2, /&\f/g, rule[x2])))
        props[k2++] = z2;
  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2);
}
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0);
}
function declaration(value, root, parent, length2) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}
function serialize(children, callback) {
  var output = "";
  var length2 = sizeof(children);
  for (var i2 = 0; i2 < length2; i2++)
    output += callback(children[i2], i2, children, callback) || "";
  return output;
}
function stringify(element, index2, children, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length)
        break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index2, children, callback) {
    var output = "";
    for (var i2 = 0; i2 < length2; i2++)
      output += collection[i2](element, index2, children, callback) || "";
    return output;
  };
}
function rulesheet(callback) {
  return function(element) {
    if (!element.root) {
      if (element = element.return)
        callback(element);
    }
  };
}
var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index2) {
  var previous = 0;
  var character2 = 0;
  while (true) {
    previous = character2;
    character2 = peek();
    if (previous === 38 && character2 === 12) {
      points[index2] = 1;
    }
    if (token(character2)) {
      break;
    }
    next();
  }
  return slice(begin, position);
};
var toRules = function toRules2(parsed, points) {
  var index2 = -1;
  var character2 = 44;
  do {
    switch (token(character2)) {
      case 0:
        if (character2 === 38 && peek() === 12) {
          points[index2] = 1;
        }
        parsed[index2] += identifierWithPointTracking(position - 1, points, index2);
        break;
      case 2:
        parsed[index2] += delimit(character2);
        break;
      case 4:
        if (character2 === 44) {
          parsed[++index2] = peek() === 58 ? "&\f" : "";
          points[index2] = parsed[index2].length;
          break;
        }
      default:
        parsed[index2] += from(character2);
    }
  } while (character2 = next());
  return parsed;
};
var getRules = function getRules2(value, points) {
  return dealloc(toRules(alloc(value), points));
};
var fixedElements = /* @__PURE__ */ new WeakMap();
var compat = function compat2(element) {
  if (element.type !== "rule" || !element.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  element.length < 1) {
    return;
  }
  var value = element.value, parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== "rule") {
    parent = parent.parent;
    if (!parent)
      return;
  }
  if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
    return;
  }
  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i2 = 0, k2 = 0; i2 < rules.length; i2++) {
    for (var j2 = 0; j2 < parentRules.length; j2++, k2++) {
      element.props[k2] = points[i2] ? rules[i2].replace(/&\f/g, parentRules[j2]) : parentRules[j2] + " " + rules[i2];
    }
  }
};
var removeLabel = function removeLabel2(element) {
  if (element.type === "decl") {
    var value = element.value;
    if (
      // charcode for l
      value.charCodeAt(0) === 108 && // charcode for b
      value.charCodeAt(2) === 98
    ) {
      element["return"] = "";
      element.value = "";
    }
  }
};
function prefix(value, length2) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch") ? prefix(replace(value, "stretch", "fill-available"), length2) + value : value;
        }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115)
        break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}
var prefixer = function prefixer2(element, index2, children, callback) {
  if (element.length > -1) {
    if (!element["return"])
      switch (element.type) {
        case DECLARATION:
          element["return"] = prefix(element.value, element.length);
          break;
        case KEYFRAMES:
          return serialize([copy(element, {
            value: replace(element.value, "@", "@" + WEBKIT)
          })], callback);
        case RULESET:
          if (element.length)
            return combine(element.props, function(value) {
              switch (match(value, /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  return serialize([copy(element, {
                    props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")]
                  })], callback);
                case "::placeholder":
                  return serialize([copy(element, {
                    props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")]
                  }), copy(element, {
                    props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")]
                  }), copy(element, {
                    props: [replace(value, /:(plac\w+)/, MS + "input-$1")]
                  })], callback);
              }
              return "";
            });
      }
  }
};
var defaultStylisPlugins = [prefixer];
var createCache = function createCache2(options) {
  var key = options.key;
  if (key === "css") {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ssrStyles, function(node2) {
      var dataEmotionAttribute = node2.getAttribute("data-emotion");
      if (dataEmotionAttribute.indexOf(" ") === -1) {
        return;
      }
      document.head.appendChild(node2);
      node2.setAttribute("data-s", "");
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  var inserted = {};
  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call(
      // this means we will ignore elements which don't have a space in them which
      // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
      document.querySelectorAll('style[data-emotion^="' + key + ' "]'),
      function(node2) {
        var attrib = node2.getAttribute("data-emotion").split(" ");
        for (var i2 = 1; i2 < attrib.length; i2++) {
          inserted[attrib[i2]] = true;
        }
        nodesToHydrate.push(node2);
      }
    );
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  {
    var currentSheet;
    var finalizingPlugins = [stringify, rulesheet(function(rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis2(styles) {
      return serialize(compile(styles), serializer);
    };
    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
var reactIs$1 = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = "function" === typeof Symbol && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
function z(a2) {
  if ("object" === typeof a2 && null !== a2) {
    var u2 = a2.$$typeof;
    switch (u2) {
      case c:
        switch (a2 = a2.type, a2) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a2;
          default:
            switch (a2 = a2 && a2.$$typeof, a2) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a2;
              default:
                return u2;
            }
        }
      case d:
        return u2;
    }
  }
}
function A(a2) {
  return z(a2) === m;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m;
reactIs_production_min.ContextConsumer = k;
reactIs_production_min.ContextProvider = h;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p;
reactIs_production_min.isAsyncMode = function(a2) {
  return A(a2) || z(a2) === l;
};
reactIs_production_min.isConcurrentMode = A;
reactIs_production_min.isContextConsumer = function(a2) {
  return z(a2) === k;
};
reactIs_production_min.isContextProvider = function(a2) {
  return z(a2) === h;
};
reactIs_production_min.isElement = function(a2) {
  return "object" === typeof a2 && null !== a2 && a2.$$typeof === c;
};
reactIs_production_min.isForwardRef = function(a2) {
  return z(a2) === n;
};
reactIs_production_min.isFragment = function(a2) {
  return z(a2) === e;
};
reactIs_production_min.isLazy = function(a2) {
  return z(a2) === t;
};
reactIs_production_min.isMemo = function(a2) {
  return z(a2) === r;
};
reactIs_production_min.isPortal = function(a2) {
  return z(a2) === d;
};
reactIs_production_min.isProfiler = function(a2) {
  return z(a2) === g;
};
reactIs_production_min.isStrictMode = function(a2) {
  return z(a2) === f;
};
reactIs_production_min.isSuspense = function(a2) {
  return z(a2) === p;
};
reactIs_production_min.isValidElementType = function(a2) {
  return "string" === typeof a2 || "function" === typeof a2 || a2 === e || a2 === m || a2 === g || a2 === f || a2 === p || a2 === q || "object" === typeof a2 && null !== a2 && (a2.$$typeof === t || a2.$$typeof === r || a2.$$typeof === h || a2.$$typeof === k || a2.$$typeof === n || a2.$$typeof === w || a2.$$typeof === x || a2.$$typeof === y || a2.$$typeof === v);
};
reactIs_production_min.typeOf = z;
{
  reactIs$1.exports = reactIs_production_min;
}
var reactIsExports = reactIs$1.exports;
var reactIs = reactIsExports;
var FORWARD_REF_STATICS = {
  "$$typeof": true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  "$$typeof": true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
var isBrowser = true;
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = "";
  classNames.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var registerStyles = function registerStyles2(cache, serialized, isStringTag2) {
  var className = cache.key + "-" + serialized.name;
  if (
    // we only need to add the styles to the registered cache if the
    // class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    (isStringTag2 === false || // we need to always store it if we're in compat mode and
    // in node since emotion-server relies on whether a style is in
    // the registered cache to know whether a style is global or not
    // also, note that this check will be dead code eliminated in the browser
    isBrowser === false) && cache.registered[className] === void 0
  ) {
    cache.registered[className] = serialized.styles;
  }
};
var insertStyles = function insertStyles2(cache, serialized, isStringTag2) {
  registerStyles(cache, serialized, isStringTag2);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};
function murmur2(str) {
  var h2 = 0;
  var k2, i2 = 0, len = str.length;
  for (; len >= 4; ++i2, len -= 4) {
    k2 = str.charCodeAt(i2) & 255 | (str.charCodeAt(++i2) & 255) << 8 | (str.charCodeAt(++i2) & 255) << 16 | (str.charCodeAt(++i2) & 255) << 24;
    k2 = /* Math.imul(k, m): */
    (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
    k2 ^= /* k >>> r: */
    k2 >>> 24;
    h2 = /* Math.imul(k, m): */
    (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h2 ^= (str.charCodeAt(i2 + 2) & 255) << 16;
    case 2:
      h2 ^= (str.charCodeAt(i2 + 1) & 255) << 8;
    case 1:
      h2 ^= str.charCodeAt(i2) & 255;
      h2 = /* Math.imul(h, m): */
      (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  h2 ^= h2 >>> 13;
  h2 = /* Math.imul(h, m): */
  (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
}
var unitlessKeys = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = /* @__PURE__ */ memoize$1(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match2, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next2 = interpolation.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles = interpolation.styles + ";";
        return styles;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      }
      break;
    }
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== void 0 ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = "";
  if (Array.isArray(obj)) {
    for (var i2 = 0; i2 < obj.length; i2++) {
      string += handleInterpolation(mergedProps, registered, obj[i2]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && false) {
          throw new Error(noComponentSelectorMessage);
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case "animation":
            case "animationName": {
              string += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              string += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var cursor;
var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    styles += strings[0];
  }
  for (var i2 = 1; i2 < args.length; i2++) {
    styles += handleInterpolation(mergedProps, registered, args[i2]);
    if (stringMode) {
      styles += strings[i2];
    }
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match2;
  while ((match2 = labelPattern.exec(styles)) !== null) {
    identifierName += "-" + // $FlowFixMe we know it's not null
    match2[1];
  }
  var name = murmur2(styles) + identifierName;
  return {
    name,
    styles,
    next: cursor
  };
};
var syncFallback = function syncFallback2(create) {
  return create();
};
var useInsertionEffect = React$1["useInsertionEffect"] ? React$1["useInsertionEffect"] : false;
var useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;
var EmotionCacheContext = /* @__PURE__ */ reactExports.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement !== "undefined" ? /* @__PURE__ */ createCache({
    key: "css"
  }) : null
);
EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func) {
  return /* @__PURE__ */ reactExports.forwardRef(function(props, ref) {
    var cache = reactExports.useContext(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var ThemeContext = /* @__PURE__ */ reactExports.createContext({});
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var keyframes = function keyframes2() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name;
  return {
    name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var testOmitPropsOnStringTag = isPropValid;
var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
  return key !== "theme";
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
  return typeof tag === "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
  var shouldForwardProp2;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp2 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp2 !== "function" && isReal) {
    shouldForwardProp2 = tag.__emotion_forwardProp;
  }
  return shouldForwardProp2;
};
var Insertion = function Insertion2(_ref) {
  var cache = _ref.cache, serialized = _ref.serialized, isStringTag2 = _ref.isStringTag;
  registerStyles(cache, serialized, isStringTag2);
  useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(cache, serialized, isStringTag2);
  });
  return null;
};
var createStyled$1 = function createStyled(tag, options) {
  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;
  if (options !== void 0) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp2 = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp2 || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp("as");
  return function() {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
    if (identifierName !== void 0) {
      styles.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === void 0) {
      styles.push.apply(styles, args);
    } else {
      styles.push(args[0][0]);
      var len = args.length;
      var i2 = 1;
      for (; i2 < len; i2++) {
        styles.push(args[i2], args[0][i2]);
      }
    }
    var Styled = withEmotionCache(function(props, cache, ref) {
      var FinalTag = shouldUseAs && props.as || baseTag;
      var className = "";
      var classInterpolations = [];
      var mergedProps = props;
      if (props.theme == null) {
        mergedProps = {};
        for (var key in props) {
          mergedProps[key] = props[key];
        }
        mergedProps.theme = reactExports.useContext(ThemeContext);
      }
      if (typeof props.className === "string") {
        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== void 0) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp2 === void 0 ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props) {
        if (shouldUseAs && _key === "as")
          continue;
        if (
          // $FlowFixMe
          finalShouldForwardProp(_key)
        ) {
          newProps[_key] = props[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement(Insertion, {
        cache,
        serialized,
        isStringTag: typeof FinalTag === "string"
      }), /* @__PURE__ */ reactExports.createElement(FinalTag, newProps));
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp2;
    Object.defineProperty(Styled, "toString", {
      value: function value() {
        if (targetClassName === void 0 && false) {
          return "NO_COMPONENT_SELECTOR";
        }
        return "." + targetClassName;
      }
    });
    Styled.withComponent = function(nextTag, nextOptions) {
      return createStyled(nextTag, _extends({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles);
    };
    return Styled;
  };
};
var tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var newStyled = createStyled$1.bind();
tags.forEach(function(tagName) {
  newStyled[tagName] = newStyled(tagName);
});
/**
 * @mui/styled-engine v5.13.2
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$2(tag, options) {
  const stylesFactory = newStyled(tag, options);
  return stylesFactory;
}
const internal_processStyles = (tag, processor) => {
  if (Array.isArray(tag.__emotion_styles)) {
    tag.__emotion_styles = processor(tag.__emotion_styles);
  }
};
const _excluded$d = ["values", "unit", "step"];
const sortBreakpointsValues = (values2) => {
  const breakpointsAsArray = Object.keys(values2).map((key) => ({
    key,
    val: values2[key]
  })) || [];
  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
  return breakpointsAsArray.reduce((acc, obj) => {
    return _extends({}, acc, {
      [obj.key]: obj.val
    });
  }, {});
};
function createBreakpoints(breakpoints) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: values2 = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit = "px",
    step = 5
  } = breakpoints, other = _objectWithoutPropertiesLoose(breakpoints, _excluded$d);
  const sortedValues = sortBreakpointsValues(values2);
  const keys = Object.keys(sortedValues);
  function up(key) {
    const value = typeof values2[key] === "number" ? values2[key] : key;
    return `@media (min-width:${value}${unit})`;
  }
  function down(key) {
    const value = typeof values2[key] === "number" ? values2[key] : key;
    return `@media (max-width:${value - step / 100}${unit})`;
  }
  function between(start, end) {
    const endIndex = keys.indexOf(end);
    return `@media (min-width:${typeof values2[start] === "number" ? values2[start] : start}${unit}) and (max-width:${(endIndex !== -1 && typeof values2[keys[endIndex]] === "number" ? values2[keys[endIndex]] : end) - step / 100}${unit})`;
  }
  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }
    return up(key);
  }
  function not(key) {
    const keyIndex = keys.indexOf(key);
    if (keyIndex === 0) {
      return up(keys[1]);
    }
    if (keyIndex === keys.length - 1) {
      return down(keys[keyIndex]);
    }
    return between(key, keys[keys.indexOf(key) + 1]).replace("@media", "@media not all and");
  }
  return _extends({
    keys,
    values: sortedValues,
    up,
    down,
    between,
    only,
    not,
    unit
  }, other);
}
const shape = {
  borderRadius: 4
};
const shape$1 = shape;
function merge(acc, item) {
  if (!item) {
    return acc;
  }
  return deepmerge(acc, item, {
    clone: false
    // No need to clone deep, it's way faster.
  });
}
const values$1 = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
};
const defaultBreakpoints = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (key) => `@media (min-width:${values$1[key]}px)`
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  const theme2 = props.theme || {};
  if (Array.isArray(propValue)) {
    const themeBreakpoints = theme2.breakpoints || defaultBreakpoints;
    return propValue.reduce((acc, item, index2) => {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index2])] = styleFromPropValue(propValue[index2]);
      return acc;
    }, {});
  }
  if (typeof propValue === "object") {
    const themeBreakpoints = theme2.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce((acc, breakpoint) => {
      if (Object.keys(themeBreakpoints.values || values$1).indexOf(breakpoint) !== -1) {
        const mediaKey = themeBreakpoints.up(breakpoint);
        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        const cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }
      return acc;
    }, {});
  }
  const output = styleFromPropValue(propValue);
  return output;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
  var _breakpointsInput$key;
  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
    const breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style2) {
  return breakpointKeys.reduce((acc, key) => {
    const breakpointOutput = acc[key];
    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
    if (isBreakpointUnused) {
      delete acc[key];
    }
    return acc;
  }, style2);
}
function getPath(obj, path, checkVars = true) {
  if (!path || typeof path !== "string") {
    return null;
  }
  if (obj && obj.vars && checkVars) {
    const val = `vars.${path}`.split(".").reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
    if (val != null) {
      return val;
    }
  }
  return path.split(".").reduce((acc, item) => {
    if (acc && acc[item] != null) {
      return acc[item];
    }
    return null;
  }, obj);
}
function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {
  let value;
  if (typeof themeMapping === "function") {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }
  if (transform) {
    value = transform(value, userValue, themeMapping);
  }
  return value;
}
function style$1(options) {
  const {
    prop,
    cssProperty = options.prop,
    themeKey,
    transform
  } = options;
  const fn = (props) => {
    if (props[prop] == null) {
      return null;
    }
    const propValue = props[prop];
    const theme2 = props.theme;
    const themeMapping = getPath(theme2, themeKey) || {};
    const styleFromPropValue = (propValueFinal) => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === "string") {
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === "default" ? "" : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, propValue, styleFromPropValue);
  };
  fn.propTypes = {};
  fn.filterProps = [prop];
  return fn;
}
function memoize(fn) {
  const cache = {};
  return (arg) => {
    if (cache[arg] === void 0) {
      cache[arg] = fn(arg);
    }
    return cache[arg];
  };
}
const properties = {
  m: "margin",
  p: "padding"
};
const directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
};
const aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
};
const getCssProperties = memoize((prop) => {
  if (prop.length > 2) {
    if (aliases[prop]) {
      prop = aliases[prop];
    } else {
      return [prop];
    }
  }
  const [a2, b2] = prop.split("");
  const property = properties[a2];
  const direction = directions[b2] || "";
  return Array.isArray(direction) ? direction.map((dir) => property + dir) : [property + direction];
});
const marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
const paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
[...marginKeys, ...paddingKeys];
function createUnaryUnit(theme2, themeKey, defaultValue, propName) {
  var _getPath;
  const themeSpacing = (_getPath = getPath(theme2, themeKey, false)) != null ? _getPath : defaultValue;
  if (typeof themeSpacing === "number") {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      return themeSpacing * abs2;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      return themeSpacing[abs2];
    };
  }
  if (typeof themeSpacing === "function") {
    return themeSpacing;
  }
  return () => void 0;
}
function createUnarySpacing(theme2) {
  return createUnaryUnit(theme2, "spacing", 8);
}
function getValue(transformer, propValue) {
  if (typeof propValue === "string" || propValue == null) {
    return propValue;
  }
  const abs2 = Math.abs(propValue);
  const transformed = transformer(abs2);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === "number") {
    return -transformed;
  }
  return `-${transformed}`;
}
function getStyleFromPropValue(cssProperties, transformer) {
  return (propValue) => cssProperties.reduce((acc, cssProperty) => {
    acc[cssProperty] = getValue(transformer, propValue);
    return acc;
  }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
  if (keys.indexOf(prop) === -1) {
    return null;
  }
  const cssProperties = getCssProperties(prop);
  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  const propValue = props[prop];
  return handleBreakpoints(props, propValue, styleFromPropValue);
}
function style(props, keys) {
  const transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map((prop) => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});
}
function margin(props) {
  return style(props, marginKeys);
}
margin.propTypes = {};
margin.filterProps = marginKeys;
function padding(props) {
  return style(props, paddingKeys);
}
padding.propTypes = {};
padding.filterProps = paddingKeys;
function createSpacing(spacingInput = 8) {
  if (spacingInput.mui) {
    return spacingInput;
  }
  const transform = createUnarySpacing({
    spacing: spacingInput
  });
  const spacing = (...argsInput) => {
    const args = argsInput.length === 0 ? [1] : argsInput;
    return args.map((argument) => {
      const output = transform(argument);
      return typeof output === "number" ? `${output}px` : output;
    }).join(" ");
  };
  spacing.mui = true;
  return spacing;
}
function compose(...styles) {
  const handlers = styles.reduce((acc, style2) => {
    style2.filterProps.forEach((prop) => {
      acc[prop] = style2;
    });
    return acc;
  }, {});
  const fn = (props) => {
    return Object.keys(props).reduce((acc, prop) => {
      if (handlers[prop]) {
        return merge(acc, handlers[prop](props));
      }
      return acc;
    }, {});
  };
  fn.propTypes = {};
  fn.filterProps = styles.reduce((acc, style2) => acc.concat(style2.filterProps), []);
  return fn;
}
function borderTransform(value) {
  if (typeof value !== "number") {
    return value;
  }
  return `${value}px solid`;
}
const border = style$1({
  prop: "border",
  themeKey: "borders",
  transform: borderTransform
});
const borderTop = style$1({
  prop: "borderTop",
  themeKey: "borders",
  transform: borderTransform
});
const borderRight = style$1({
  prop: "borderRight",
  themeKey: "borders",
  transform: borderTransform
});
const borderBottom = style$1({
  prop: "borderBottom",
  themeKey: "borders",
  transform: borderTransform
});
const borderLeft = style$1({
  prop: "borderLeft",
  themeKey: "borders",
  transform: borderTransform
});
const borderColor = style$1({
  prop: "borderColor",
  themeKey: "palette"
});
const borderTopColor = style$1({
  prop: "borderTopColor",
  themeKey: "palette"
});
const borderRightColor = style$1({
  prop: "borderRightColor",
  themeKey: "palette"
});
const borderBottomColor = style$1({
  prop: "borderBottomColor",
  themeKey: "palette"
});
const borderLeftColor = style$1({
  prop: "borderLeftColor",
  themeKey: "palette"
});
const borderRadius = (props) => {
  if (props.borderRadius !== void 0 && props.borderRadius !== null) {
    const transformer = createUnaryUnit(props.theme, "shape.borderRadius", 4);
    const styleFromPropValue = (propValue) => ({
      borderRadius: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
  }
  return null;
};
borderRadius.propTypes = {};
borderRadius.filterProps = ["borderRadius"];
compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
const gap = (props) => {
  if (props.gap !== void 0 && props.gap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      gap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.gap, styleFromPropValue);
  }
  return null;
};
gap.propTypes = {};
gap.filterProps = ["gap"];
const columnGap = (props) => {
  if (props.columnGap !== void 0 && props.columnGap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      columnGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.columnGap, styleFromPropValue);
  }
  return null;
};
columnGap.propTypes = {};
columnGap.filterProps = ["columnGap"];
const rowGap = (props) => {
  if (props.rowGap !== void 0 && props.rowGap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      rowGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.rowGap, styleFromPropValue);
  }
  return null;
};
rowGap.propTypes = {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$1({
  prop: "gridColumn"
});
const gridRow = style$1({
  prop: "gridRow"
});
const gridAutoFlow = style$1({
  prop: "gridAutoFlow"
});
const gridAutoColumns = style$1({
  prop: "gridAutoColumns"
});
const gridAutoRows = style$1({
  prop: "gridAutoRows"
});
const gridTemplateColumns = style$1({
  prop: "gridTemplateColumns"
});
const gridTemplateRows = style$1({
  prop: "gridTemplateRows"
});
const gridTemplateAreas = style$1({
  prop: "gridTemplateAreas"
});
const gridArea = style$1({
  prop: "gridArea"
});
compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
function paletteTransform(value, userValue) {
  if (userValue === "grey") {
    return userValue;
  }
  return value;
}
const color = style$1({
  prop: "color",
  themeKey: "palette",
  transform: paletteTransform
});
const bgcolor = style$1({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: paletteTransform
});
const backgroundColor = style$1({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: paletteTransform
});
compose(color, bgcolor, backgroundColor);
function sizingTransform(value) {
  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = style$1({
  prop: "width",
  transform: sizingTransform
});
const maxWidth = (props) => {
  if (props.maxWidth !== void 0 && props.maxWidth !== null) {
    const styleFromPropValue = (propValue) => {
      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;
      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || values$1[propValue];
      return {
        maxWidth: breakpoint || sizingTransform(propValue)
      };
    };
    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$1({
  prop: "minWidth",
  transform: sizingTransform
});
const height = style$1({
  prop: "height",
  transform: sizingTransform
});
const maxHeight = style$1({
  prop: "maxHeight",
  transform: sizingTransform
});
const minHeight = style$1({
  prop: "minHeight",
  transform: sizingTransform
});
style$1({
  prop: "size",
  cssProperty: "width",
  transform: sizingTransform
});
style$1({
  prop: "size",
  cssProperty: "height",
  transform: sizingTransform
});
const boxSizing = style$1({
  prop: "boxSizing"
});
compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
const defaultSxConfig = {
  // borders
  border: {
    themeKey: "borders",
    transform: borderTransform
  },
  borderTop: {
    themeKey: "borders",
    transform: borderTransform
  },
  borderRight: {
    themeKey: "borders",
    transform: borderTransform
  },
  borderBottom: {
    themeKey: "borders",
    transform: borderTransform
  },
  borderLeft: {
    themeKey: "borders",
    transform: borderTransform
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: borderRadius
  },
  // palette
  color: {
    themeKey: "palette",
    transform: paletteTransform
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: paletteTransform
  },
  backgroundColor: {
    themeKey: "palette",
    transform: paletteTransform
  },
  // spacing
  p: {
    style: padding
  },
  pt: {
    style: padding
  },
  pr: {
    style: padding
  },
  pb: {
    style: padding
  },
  pl: {
    style: padding
  },
  px: {
    style: padding
  },
  py: {
    style: padding
  },
  padding: {
    style: padding
  },
  paddingTop: {
    style: padding
  },
  paddingRight: {
    style: padding
  },
  paddingBottom: {
    style: padding
  },
  paddingLeft: {
    style: padding
  },
  paddingX: {
    style: padding
  },
  paddingY: {
    style: padding
  },
  paddingInline: {
    style: padding
  },
  paddingInlineStart: {
    style: padding
  },
  paddingInlineEnd: {
    style: padding
  },
  paddingBlock: {
    style: padding
  },
  paddingBlockStart: {
    style: padding
  },
  paddingBlockEnd: {
    style: padding
  },
  m: {
    style: margin
  },
  mt: {
    style: margin
  },
  mr: {
    style: margin
  },
  mb: {
    style: margin
  },
  ml: {
    style: margin
  },
  mx: {
    style: margin
  },
  my: {
    style: margin
  },
  margin: {
    style: margin
  },
  marginTop: {
    style: margin
  },
  marginRight: {
    style: margin
  },
  marginBottom: {
    style: margin
  },
  marginLeft: {
    style: margin
  },
  marginX: {
    style: margin
  },
  marginY: {
    style: margin
  },
  marginInline: {
    style: margin
  },
  marginInlineStart: {
    style: margin
  },
  marginInlineEnd: {
    style: margin
  },
  marginBlock: {
    style: margin
  },
  marginBlockStart: {
    style: margin
  },
  marginBlockEnd: {
    style: margin
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: (value) => ({
      "@media print": {
        display: value
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: gap
  },
  rowGap: {
    style: rowGap
  },
  columnGap: {
    style: columnGap
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: sizingTransform
  },
  maxWidth: {
    style: maxWidth
  },
  minWidth: {
    transform: sizingTransform
  },
  height: {
    transform: sizingTransform
  },
  maxHeight: {
    transform: sizingTransform
  },
  minHeight: {
    transform: sizingTransform
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: "typography"
  }
};
const defaultSxConfig$1 = defaultSxConfig;
function objectsHaveSameKeys(...objects) {
  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
  const union = new Set(allKeys);
  return objects.every((object) => union.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
  return typeof maybeFn === "function" ? maybeFn(arg) : maybeFn;
}
function unstable_createStyleFunctionSx() {
  function getThemeValue(prop, val, theme2, config) {
    const props = {
      [prop]: val,
      theme: theme2
    };
    const options = config[prop];
    if (!options) {
      return {
        [prop]: val
      };
    }
    const {
      cssProperty = prop,
      themeKey,
      transform,
      style: style2
    } = options;
    if (val == null) {
      return null;
    }
    if (themeKey === "typography" && val === "inherit") {
      return {
        [prop]: val
      };
    }
    const themeMapping = getPath(theme2, themeKey) || {};
    if (style2) {
      return style2(props);
    }
    const styleFromPropValue = (propValueFinal) => {
      let value = getStyleValue(themeMapping, transform, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === "string") {
        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === "default" ? "" : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, val, styleFromPropValue);
  }
  function styleFunctionSx2(props) {
    var _theme$unstable_sxCon;
    const {
      sx,
      theme: theme2 = {}
    } = props || {};
    if (!sx) {
      return null;
    }
    const config = (_theme$unstable_sxCon = theme2.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig$1;
    function traverse(sxInput) {
      let sxObject = sxInput;
      if (typeof sxInput === "function") {
        sxObject = sxInput(theme2);
      } else if (typeof sxInput !== "object") {
        return sxInput;
      }
      if (!sxObject) {
        return null;
      }
      const emptyBreakpoints = createEmptyBreakpointObject(theme2.breakpoints);
      const breakpointsKeys = Object.keys(emptyBreakpoints);
      let css2 = emptyBreakpoints;
      Object.keys(sxObject).forEach((styleKey) => {
        const value = callIfFn(sxObject[styleKey], theme2);
        if (value !== null && value !== void 0) {
          if (typeof value === "object") {
            if (config[styleKey]) {
              css2 = merge(css2, getThemeValue(styleKey, value, theme2, config));
            } else {
              const breakpointsValues = handleBreakpoints({
                theme: theme2
              }, value, (x2) => ({
                [styleKey]: x2
              }));
              if (objectsHaveSameKeys(breakpointsValues, value)) {
                css2[styleKey] = styleFunctionSx2({
                  sx: value,
                  theme: theme2
                });
              } else {
                css2 = merge(css2, breakpointsValues);
              }
            }
          } else {
            css2 = merge(css2, getThemeValue(styleKey, value, theme2, config));
          }
        }
      });
      return removeUnusedBreakpoints(breakpointsKeys, css2);
    }
    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
  }
  return styleFunctionSx2;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
const styleFunctionSx$1 = styleFunctionSx;
const _excluded$c = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(options = {}, ...args) {
  const {
    breakpoints: breakpointsInput = {},
    palette: paletteInput = {},
    spacing: spacingInput,
    shape: shapeInput = {}
  } = options, other = _objectWithoutPropertiesLoose(options, _excluded$c);
  const breakpoints = createBreakpoints(breakpointsInput);
  const spacing = createSpacing(spacingInput);
  let muiTheme = deepmerge({
    breakpoints,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: _extends({
      mode: "light"
    }, paletteInput),
    spacing,
    shape: _extends({}, shape$1, shapeInput)
  }, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx$1({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function useTheme$1(defaultTheme2 = null) {
  const contextTheme = reactExports.useContext(ThemeContext);
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme2 : contextTheme;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme(defaultTheme2 = systemDefaultTheme$1) {
  return useTheme$1(defaultTheme2);
}
const _excluded$b = ["variant"];
function isEmpty$1(string) {
  return string.length === 0;
}
function propsToClassKey(props) {
  const {
    variant
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$b);
  let classKey = variant || "";
  Object.keys(other).sort().forEach((key) => {
    if (key === "color") {
      classKey += isEmpty$1(classKey) ? props[key] : capitalize(props[key]);
    } else {
      classKey += `${isEmpty$1(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;
    }
  });
  return classKey;
}
const _excluded$a = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"];
function isEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function isStringTag(tag) {
  return typeof tag === "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96;
}
const getStyleOverrides = (name, theme2) => {
  if (theme2.components && theme2.components[name] && theme2.components[name].styleOverrides) {
    return theme2.components[name].styleOverrides;
  }
  return null;
};
const getVariantStyles = (name, theme2) => {
  let variants = [];
  if (theme2 && theme2.components && theme2.components[name] && theme2.components[name].variants) {
    variants = theme2.components[name].variants;
  }
  const variantsStyles = {};
  variants.forEach((definition) => {
    const key = propsToClassKey(definition.props);
    variantsStyles[key] = definition.style;
  });
  return variantsStyles;
};
const variantsResolver = (props, styles, theme2, name) => {
  var _theme$components, _theme$components$nam;
  const {
    ownerState = {}
  } = props;
  const variantsStyles = [];
  const themeVariants = theme2 == null ? void 0 : (_theme$components = theme2.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;
  if (themeVariants) {
    themeVariants.forEach((themeVariant) => {
      let isMatch = true;
      Object.keys(themeVariant.props).forEach((key) => {
        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
          isMatch = false;
        }
      });
      if (isMatch) {
        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);
      }
    });
  }
  return variantsStyles;
};
function shouldForwardProp(prop) {
  return prop !== "ownerState" && prop !== "theme" && prop !== "sx" && prop !== "as";
}
const systemDefaultTheme = createTheme$1();
function resolveTheme({
  defaultTheme: defaultTheme2,
  theme: theme2,
  themeId
}) {
  return isEmpty(theme2) ? defaultTheme2 : theme2[themeId] || theme2;
}
function createStyled2(input = {}) {
  const {
    themeId,
    defaultTheme: defaultTheme2 = systemDefaultTheme,
    rootShouldForwardProp: rootShouldForwardProp2 = shouldForwardProp,
    slotShouldForwardProp = shouldForwardProp
  } = input;
  const systemSx = (props) => {
    return styleFunctionSx$1(_extends({}, props, {
      theme: resolveTheme(_extends({}, props, {
        defaultTheme: defaultTheme2,
        themeId
      }))
    }));
  };
  systemSx.__mui_systemSx = true;
  return (tag, inputOptions = {}) => {
    internal_processStyles(tag, (styles) => styles.filter((style2) => !(style2 != null && style2.__mui_systemSx)));
    const {
      name: componentName,
      slot: componentSlot,
      skipVariantsResolver: inputSkipVariantsResolver,
      skipSx: inputSkipSx,
      overridesResolver
    } = inputOptions, options = _objectWithoutPropertiesLoose(inputOptions, _excluded$a);
    const skipVariantsResolver = inputSkipVariantsResolver !== void 0 ? inputSkipVariantsResolver : componentSlot && componentSlot !== "Root" || false;
    const skipSx = inputSkipSx || false;
    let label;
    let shouldForwardPropOption = shouldForwardProp;
    if (componentSlot === "Root") {
      shouldForwardPropOption = rootShouldForwardProp2;
    } else if (componentSlot) {
      shouldForwardPropOption = slotShouldForwardProp;
    } else if (isStringTag(tag)) {
      shouldForwardPropOption = void 0;
    }
    const defaultStyledResolver = styled$2(tag, _extends({
      shouldForwardProp: shouldForwardPropOption,
      label
    }, options));
    const muiStyledResolver = (styleArg, ...expressions) => {
      const expressionsWithDefaultTheme = expressions ? expressions.map((stylesArg) => {
        return typeof stylesArg === "function" && stylesArg.__emotion_real !== stylesArg ? (props) => {
          return stylesArg(_extends({}, props, {
            theme: resolveTheme(_extends({}, props, {
              defaultTheme: defaultTheme2,
              themeId
            }))
          }));
        } : stylesArg;
      }) : [];
      let transformedStyleArg = styleArg;
      if (componentName && overridesResolver) {
        expressionsWithDefaultTheme.push((props) => {
          const theme2 = resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme2,
            themeId
          }));
          const styleOverrides = getStyleOverrides(componentName, theme2);
          if (styleOverrides) {
            const resolvedStyleOverrides = {};
            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
              resolvedStyleOverrides[slotKey] = typeof slotStyle === "function" ? slotStyle(_extends({}, props, {
                theme: theme2
              })) : slotStyle;
            });
            return overridesResolver(props, resolvedStyleOverrides);
          }
          return null;
        });
      }
      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push((props) => {
          const theme2 = resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme2,
            themeId
          }));
          return variantsResolver(props, getVariantStyles(componentName, theme2), theme2, componentName);
        });
      }
      if (!skipSx) {
        expressionsWithDefaultTheme.push(systemSx);
      }
      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        const placeholders = new Array(numOfCustomFnsApplied).fill("");
        transformedStyleArg = [...styleArg, ...placeholders];
        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
      } else if (typeof styleArg === "function" && // On the server Emotion doesn't use React.forwardRef for creating components, so the created
      // component stays as a function. This condition makes sure that we do not interpolate functions
      // which are basically components used as a selectors.
      styleArg.__emotion_real !== styleArg) {
        transformedStyleArg = (props) => styleArg(_extends({}, props, {
          theme: resolveTheme(_extends({}, props, {
            defaultTheme: defaultTheme2,
            themeId
          }))
        }));
      }
      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
      if (tag.muiName) {
        Component.muiName = tag.muiName;
      }
      return Component;
    };
    if (defaultStyledResolver.withConfig) {
      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
    }
    return muiStyledResolver;
  };
}
function getThemeProps(params) {
  const {
    theme: theme2,
    name,
    props
  } = params;
  if (!theme2 || !theme2.components || !theme2.components[name] || !theme2.components[name].defaultProps) {
    return props;
  }
  return resolveProps(theme2.components[name].defaultProps, props);
}
function useThemeProps$1({
  props,
  name,
  defaultTheme: defaultTheme2,
  themeId
}) {
  let theme2 = useTheme(defaultTheme2);
  if (themeId) {
    theme2 = theme2[themeId] || theme2;
  }
  const mergedProps = getThemeProps({
    theme: theme2,
    name,
    props
  });
  return mergedProps;
}
function clamp(value, min = 0, max = 1) {
  return Math.min(Math.max(min, value), max);
}
function hexToRgb(color2) {
  color2 = color2.slice(1);
  const re2 = new RegExp(`.{1,${color2.length >= 6 ? 2 : 1}}`, "g");
  let colors = color2.match(re2);
  if (colors && colors[0].length === 1) {
    colors = colors.map((n2) => n2 + n2);
  }
  return colors ? `rgb${colors.length === 4 ? "a" : ""}(${colors.map((n2, index2) => {
    return index2 < 3 ? parseInt(n2, 16) : Math.round(parseInt(n2, 16) / 255 * 1e3) / 1e3;
  }).join(", ")})` : "";
}
function decomposeColor(color2) {
  if (color2.type) {
    return color2;
  }
  if (color2.charAt(0) === "#") {
    return decomposeColor(hexToRgb(color2));
  }
  const marker = color2.indexOf("(");
  const type = color2.substring(0, marker);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(type) === -1) {
    throw new Error(formatMuiErrorMessage(9, color2));
  }
  let values2 = color2.substring(marker + 1, color2.length - 1);
  let colorSpace;
  if (type === "color") {
    values2 = values2.split(" ");
    colorSpace = values2.shift();
    if (values2.length === 4 && values2[3].charAt(0) === "/") {
      values2[3] = values2[3].slice(1);
    }
    if (["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(colorSpace) === -1) {
      throw new Error(formatMuiErrorMessage(10, colorSpace));
    }
  } else {
    values2 = values2.split(",");
  }
  values2 = values2.map((value) => parseFloat(value));
  return {
    type,
    values: values2,
    colorSpace
  };
}
function recomposeColor(color2) {
  const {
    type,
    colorSpace
  } = color2;
  let {
    values: values2
  } = color2;
  if (type.indexOf("rgb") !== -1) {
    values2 = values2.map((n2, i2) => i2 < 3 ? parseInt(n2, 10) : n2);
  } else if (type.indexOf("hsl") !== -1) {
    values2[1] = `${values2[1]}%`;
    values2[2] = `${values2[2]}%`;
  }
  if (type.indexOf("color") !== -1) {
    values2 = `${colorSpace} ${values2.join(" ")}`;
  } else {
    values2 = `${values2.join(", ")}`;
  }
  return `${type}(${values2})`;
}
function hslToRgb(color2) {
  color2 = decomposeColor(color2);
  const {
    values: values2
  } = color2;
  const h2 = values2[0];
  const s2 = values2[1] / 100;
  const l2 = values2[2] / 100;
  const a2 = s2 * Math.min(l2, 1 - l2);
  const f2 = (n2, k2 = (n2 + h2 / 30) % 12) => l2 - a2 * Math.max(Math.min(k2 - 3, 9 - k2, 1), -1);
  let type = "rgb";
  const rgb = [Math.round(f2(0) * 255), Math.round(f2(8) * 255), Math.round(f2(4) * 255)];
  if (color2.type === "hsla") {
    type += "a";
    rgb.push(values2[3]);
  }
  return recomposeColor({
    type,
    values: rgb
  });
}
function getLuminance(color2) {
  color2 = decomposeColor(color2);
  let rgb = color2.type === "hsl" || color2.type === "hsla" ? decomposeColor(hslToRgb(color2)).values : color2.values;
  rgb = rgb.map((val) => {
    if (color2.type !== "color") {
      val /= 255;
    }
    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
  });
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
function getContrastRatio(foreground, background) {
  const lumA = getLuminance(foreground);
  const lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
function alpha(color2, value) {
  color2 = decomposeColor(color2);
  value = clamp(value);
  if (color2.type === "rgb" || color2.type === "hsl") {
    color2.type += "a";
  }
  if (color2.type === "color") {
    color2.values[3] = `/${value}`;
  } else {
    color2.values[3] = value;
  }
  return recomposeColor(color2);
}
function darken(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] *= 1 - coefficient;
  } else if (color2.type.indexOf("rgb") !== -1 || color2.type.indexOf("color") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] *= 1 - coefficient;
    }
  }
  return recomposeColor(color2);
}
function lighten(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] += (100 - color2.values[2]) * coefficient;
  } else if (color2.type.indexOf("rgb") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] += (255 - color2.values[i2]) * coefficient;
    }
  } else if (color2.type.indexOf("color") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] += (1 - color2.values[i2]) * coefficient;
    }
  }
  return recomposeColor(color2);
}
function createMixins(breakpoints, mixins) {
  return _extends({
    toolbar: {
      minHeight: 56,
      [breakpoints.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [breakpoints.up("sm")]: {
        minHeight: 64
      }
    }
  }, mixins);
}
const common = {
  black: "#000",
  white: "#fff"
};
const common$1 = common;
const grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
const grey$1 = grey;
const purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
};
const purple$1 = purple;
const red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
};
const red$1 = red;
const orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
};
const orange$1 = orange;
const blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
};
const blue$1 = blue;
const lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
};
const lightBlue$1 = lightBlue;
const green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
};
const green$1 = green;
const _excluded$9 = ["mode", "contrastThreshold", "tonalOffset"];
const light = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: "rgba(0, 0, 0, 0.87)",
    // Secondary text.
    secondary: "rgba(0, 0, 0, 0.6)",
    // Disabled text have even lower visual prominence.
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  // The color used to divide different elements.
  divider: "rgba(0, 0, 0, 0.12)",
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: "rgba(0, 0, 0, 0.54)",
    // The color of an hovered action.
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: "rgba(0, 0, 0, 0.26)",
    // The background color of a disabled action.
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
const dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
  const tonalOffsetLight = tonalOffset.light || tonalOffset;
  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === "light") {
      intent.light = lighten(intent.main, tonalOffsetLight);
    } else if (direction === "dark") {
      intent.dark = darken(intent.main, tonalOffsetDark);
    }
  }
}
function getDefaultPrimary(mode = "light") {
  if (mode === "dark") {
    return {
      main: blue$1[200],
      light: blue$1[50],
      dark: blue$1[400]
    };
  }
  return {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(mode = "light") {
  if (mode === "dark") {
    return {
      main: purple$1[200],
      light: purple$1[50],
      dark: purple$1[400]
    };
  }
  return {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(mode = "light") {
  if (mode === "dark") {
    return {
      main: red$1[500],
      light: red$1[300],
      dark: red$1[700]
    };
  }
  return {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(mode = "light") {
  if (mode === "dark") {
    return {
      main: lightBlue$1[400],
      light: lightBlue$1[300],
      dark: lightBlue$1[700]
    };
  }
  return {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(mode = "light") {
  if (mode === "dark") {
    return {
      main: green$1[400],
      light: green$1[300],
      dark: green$1[700]
    };
  }
  return {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(mode = "light") {
  if (mode === "dark") {
    return {
      main: orange$1[400],
      light: orange$1[300],
      dark: orange$1[700]
    };
  }
  return {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(palette) {
  const {
    mode = "light",
    contrastThreshold = 3,
    tonalOffset = 0.2
  } = palette, other = _objectWithoutPropertiesLoose(palette, _excluded$9);
  const primary = palette.primary || getDefaultPrimary(mode);
  const secondary = palette.secondary || getDefaultSecondary(mode);
  const error = palette.error || getDefaultError(mode);
  const info = palette.info || getDefaultInfo(mode);
  const success = palette.success || getDefaultSuccess(mode);
  const warning2 = palette.warning || getDefaultWarning(mode);
  function getContrastText(background) {
    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
    return contrastText;
  }
  const augmentColor = ({
    color: color2,
    name,
    mainShade = 500,
    lightShade = 300,
    darkShade = 700
  }) => {
    color2 = _extends({}, color2);
    if (!color2.main && color2[mainShade]) {
      color2.main = color2[mainShade];
    }
    if (!color2.hasOwnProperty("main")) {
      throw new Error(formatMuiErrorMessage(11, name ? ` (${name})` : "", mainShade));
    }
    if (typeof color2.main !== "string") {
      throw new Error(formatMuiErrorMessage(12, name ? ` (${name})` : "", JSON.stringify(color2.main)));
    }
    addLightOrDark(color2, "light", lightShade, tonalOffset);
    addLightOrDark(color2, "dark", darkShade, tonalOffset);
    if (!color2.contrastText) {
      color2.contrastText = getContrastText(color2.main);
    }
    return color2;
  };
  const modes = {
    dark,
    light
  };
  const paletteOutput = deepmerge(_extends({
    // A collection of common colors.
    common: _extends({}, common$1),
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode,
    // The colors used to represent primary interface elements for a user.
    primary: augmentColor({
      color: primary,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: augmentColor({
      color: secondary,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: augmentColor({
      color: error,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: augmentColor({
      color: warning2,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: augmentColor({
      color: info,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: augmentColor({
      color: success,
      name: "success"
    }),
    // The grey colors.
    grey: grey$1,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText,
    // Generate a rich color object.
    augmentColor,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset
  }, modes[mode]), other);
  return paletteOutput;
}
const _excluded$8 = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
};
const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(palette, typography) {
  const _ref = typeof typography === "function" ? typography(palette) : typography, {
    fontFamily = defaultFontFamily,
    // The default font size of the Material Specification.
    fontSize = 14,
    // px
    fontWeightLight = 300,
    fontWeightRegular = 400,
    fontWeightMedium = 500,
    fontWeightBold = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize = 16,
    // Apply the CSS properties to all the variants.
    allVariants,
    pxToRem: pxToRem2
  } = _ref, other = _objectWithoutPropertiesLoose(_ref, _excluded$8);
  const coef = fontSize / 14;
  const pxToRem = pxToRem2 || ((size) => `${size / htmlFontSize * coef}rem`);
  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({
    fontFamily,
    fontWeight,
    fontSize: pxToRem(size),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight
  }, fontFamily === defaultFontFamily ? {
    letterSpacing: `${round(letterSpacing / size)}em`
  } : {}, casing, allVariants);
  const variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return deepmerge(_extends({
    htmlFontSize,
    pxToRem,
    fontFamily,
    fontSize,
    fontWeightLight,
    fontWeightRegular,
    fontWeightMedium,
    fontWeightBold
  }, variants), other, {
    clone: false
    // No need to clone deep
  });
}
const shadowKeyUmbraOpacity = 0.2;
const shadowKeyPenumbraOpacity = 0.14;
const shadowAmbientShadowOpacity = 0.12;
function createShadow(...px) {
  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
const shadows$1 = shadows;
const _excluded$7 = ["duration", "easing", "delay"];
const easing = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
};
const duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function formatMs(milliseconds) {
  return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height2) {
  if (!height2) {
    return 0;
  }
  const constant = height2 / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
  const mergedEasing = _extends({}, easing, inputTransitions.easing);
  const mergedDuration = _extends({}, duration, inputTransitions.duration);
  const create = (props = ["all"], options = {}) => {
    const {
      duration: durationOption = mergedDuration.standard,
      easing: easingOption = mergedEasing.easeInOut,
      delay = 0
    } = options;
    _objectWithoutPropertiesLoose(options, _excluded$7);
    return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs(delay)}`).join(",");
  };
  return _extends({
    getAutoHeightDuration,
    create
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
const zIndex$1 = zIndex;
const _excluded$6 = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(options = {}, ...args) {
  const {
    mixins: mixinsInput = {},
    palette: paletteInput = {},
    transitions: transitionsInput = {},
    typography: typographyInput = {}
  } = options, other = _objectWithoutPropertiesLoose(options, _excluded$6);
  if (options.vars) {
    throw new Error(formatMuiErrorMessage(18));
  }
  const palette = createPalette(paletteInput);
  const systemTheme = createTheme$1(options);
  let muiTheme = deepmerge(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
    palette,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: shadows$1.slice(),
    typography: createTypography(palette, typographyInput),
    transitions: createTransitions(transitionsInput),
    zIndex: _extends({}, zIndex$1)
  });
  muiTheme = deepmerge(muiTheme, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig$1, other == null ? void 0 : other.unstable_sxConfig);
  muiTheme.unstable_sx = function sx(props) {
    return styleFunctionSx$1({
      sx: props,
      theme: this
    });
  };
  return muiTheme;
}
const defaultTheme = createTheme();
const defaultTheme$1 = defaultTheme;
const THEME_ID = "$$material";
const rootShouldForwardProp = (prop) => shouldForwardProp(prop) && prop !== "classes";
const styled = createStyled2({
  themeId: THEME_ID,
  defaultTheme: defaultTheme$1,
  rootShouldForwardProp
});
const styled$1 = styled;
function useThemeProps({
  props,
  name
}) {
  return useThemeProps$1({
    props,
    name,
    defaultTheme: defaultTheme$1,
    themeId: THEME_ID
  });
}
function getBottomNavigationUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigation", slot);
}
generateUtilityClasses("MuiBottomNavigation", ["root"]);
const _excluded$5 = ["children", "className", "component", "onChange", "showLabels", "value"];
const useUtilityClasses$4 = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getBottomNavigationUtilityClass, classes);
};
const BottomNavigationRoot = styled$1("div", {
  name: "MuiBottomNavigation",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme: theme2
}) => ({
  display: "flex",
  justifyContent: "center",
  height: 56,
  backgroundColor: (theme2.vars || theme2).palette.background.paper
}));
const BottomNavigation = /* @__PURE__ */ reactExports.forwardRef(function BottomNavigation2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiBottomNavigation"
  });
  const {
    children,
    className,
    component = "div",
    onChange,
    showLabels = false,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$5);
  const ownerState = _extends({}, props, {
    component,
    showLabels
  });
  const classes = useUtilityClasses$4(ownerState);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(BottomNavigationRoot, _extends({
    as: component,
    className: clsx(classes.root, className),
    ref,
    ownerState
  }, other, {
    children: reactExports.Children.map(children, (child, childIndex) => {
      if (!/* @__PURE__ */ reactExports.isValidElement(child)) {
        return null;
      }
      const childValue = child.props.value === void 0 ? childIndex : child.props.value;
      return /* @__PURE__ */ reactExports.cloneElement(child, {
        selected: childValue === value,
        showLabel: child.props.showLabel !== void 0 ? child.props.showLabel : showLabels,
        value: childValue,
        onChange
      });
    })
  }));
});
const BottomNavigation$1 = BottomNavigation;
function _setPrototypeOf(o2, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o3, p3) {
    o3.__proto__ = p3;
    return o3;
  };
  return _setPrototypeOf(o2, p2);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
const TransitionGroupContext = React.createContext(null);
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function getChildMapping(children, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && reactExports.isValidElement(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children)
    reactExports.Children.map(children, function(c2) {
      return c2;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev2, next2) {
  prev2 = prev2 || {};
  next2 = next2 || {};
  function getValueForKey(key) {
    return key in next2 ? next2[key] : prev2[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev2) {
    if (prevKey in next2) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i2;
  var childMapping = {};
  for (var nextKey in next2) {
    if (nextKeysPending[nextKey]) {
      for (i2 = 0; i2 < nextKeysPending[nextKey].length; i2++) {
        var pendingNextKey = nextKeysPending[nextKey][i2];
        childMapping[nextKeysPending[nextKey][i2]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i2 = 0; i2 < pendingKeys.length; i2++) {
    childMapping[pendingKeys[i2]] = getValueForKey(pendingKeys[i2]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return reactExports.cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function(key) {
    var child = children[key];
    if (!reactExports.isValidElement(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = reactExports.isValidElement(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children[key] = reactExports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children[key] = reactExports.cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && reactExports.isValidElement(prevChild)) {
      children[key] = reactExports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children;
}
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k2) {
    return obj[k2];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node2) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node2);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children = _extends({}, state.children);
        delete children[child.key];
        return {
          children
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }
    return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /* @__PURE__ */ React.createElement(Component, props, children));
  };
  return TransitionGroup2;
}(React.Component);
TransitionGroup.propTypes = {};
TransitionGroup.defaultProps = defaultProps;
const TransitionGroup$1 = TransitionGroup;
function Ripple(props) {
  const {
    className,
    classes,
    pulsate = false,
    rippleX,
    rippleY,
    rippleSize,
    in: inProp,
    onExited,
    timeout
  } = props;
  const [leaving, setLeaving] = reactExports.useState(false);
  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
  const rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
  if (!inProp && !leaving) {
    setLeaving(true);
  }
  reactExports.useEffect(() => {
    if (!inProp && onExited != null) {
      const timeoutId = setTimeout(onExited, timeout);
      return () => {
        clearTimeout(timeoutId);
      };
    }
    return void 0;
  }, [onExited, inProp, timeout]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
    className: rippleClassName,
    style: rippleStyles,
    children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", {
      className: childClassName
    })
  });
}
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]);
const touchRippleClasses$1 = touchRippleClasses;
const _excluded$4 = ["center", "classes", "className"];
let _ = (t2) => t2, _t, _t2, _t3, _t4;
const DURATION = 550;
const DELAY_RIPPLE = 80;
const enterKeyframe = keyframes(_t || (_t = _`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`));
const exitKeyframe = keyframes(_t2 || (_t2 = _`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`));
const pulsateKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`));
const TouchRippleRoot = styled$1("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
});
const TouchRippleRipple = styled$1(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4 || (_t4 = _`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme: theme2
}) => theme2.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme: theme2
}) => theme2.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme: theme2
}) => theme2.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme: theme2
}) => theme2.transitions.easing.easeInOut);
const TouchRipple = /* @__PURE__ */ reactExports.forwardRef(function TouchRipple2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTouchRipple"
  });
  const {
    center: centerProp = false,
    classes = {},
    className
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$4);
  const [ripples, setRipples] = reactExports.useState([]);
  const nextKey = reactExports.useRef(0);
  const rippleCallback = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]);
  const ignoringMouseDown = reactExports.useRef(false);
  const startTimer = reactExports.useRef(null);
  const startTimerCommit = reactExports.useRef(null);
  const container = reactExports.useRef(null);
  reactExports.useEffect(() => {
    return () => {
      clearTimeout(startTimer.current);
    };
  }, []);
  const startCommit = reactExports.useCallback((params) => {
    const {
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize,
      cb: cb2
    } = params;
    setRipples((oldRipples) => [...oldRipples, /* @__PURE__ */ jsxRuntimeExports.jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(classes.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(classes.child, touchRippleClasses$1.child),
        childLeaving: clsx(classes.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(classes.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize
    }, nextKey.current)]);
    nextKey.current += 1;
    rippleCallback.current = cb2;
  }, [classes]);
  const start = reactExports.useCallback((event = {}, options = {}, cb2 = () => {
  }) => {
    const {
      pulsate: pulsate2 = false,
      center = centerProp || options.pulsate,
      fakeElement = false
      // For test purposes
    } = options;
    if ((event == null ? void 0 : event.type) === "mousedown" && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }
    if ((event == null ? void 0 : event.type) === "touchstart") {
      ignoringMouseDown.current = true;
    }
    const element = fakeElement ? null : container.current;
    const rect = element ? element.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let rippleX;
    let rippleY;
    let rippleSize;
    if (center || event === void 0 || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      const {
        clientX,
        clientY
      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }
    if (center) {
      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);
      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
    }
    if (event != null && event.touches) {
      if (startTimerCommit.current === null) {
        startTimerCommit.current = () => {
          startCommit({
            pulsate: pulsate2,
            rippleX,
            rippleY,
            rippleSize,
            cb: cb2
          });
        };
        startTimer.current = setTimeout(() => {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE);
      }
    } else {
      startCommit({
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize,
        cb: cb2
      });
    }
  }, [centerProp, startCommit]);
  const pulsate = reactExports.useCallback(() => {
    start({}, {
      pulsate: true
    });
  }, [start]);
  const stop = reactExports.useCallback((event, cb2) => {
    clearTimeout(startTimer.current);
    if ((event == null ? void 0 : event.type) === "touchend" && startTimerCommit.current) {
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(() => {
        stop(event, cb2);
      });
      return;
    }
    startTimerCommit.current = null;
    setRipples((oldRipples) => {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }
      return oldRipples;
    });
    rippleCallback.current = cb2;
  }, []);
  reactExports.useImperativeHandle(ref, () => ({
    pulsate,
    start,
    stop
  }), [pulsate, start, stop]);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(TouchRippleRoot, _extends({
    className: clsx(touchRippleClasses$1.root, classes.root, className),
    ref: container
  }, other, {
    children: /* @__PURE__ */ jsxRuntimeExports.jsx(TransitionGroup$1, {
      component: null,
      exit: true,
      children: ripples
    })
  }));
});
const TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(slot) {
  return generateUtilityClass("MuiButtonBase", slot);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]);
const buttonBaseClasses$1 = buttonBaseClasses;
const _excluded$3 = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];
const useUtilityClasses$3 = (ownerState) => {
  const {
    disabled,
    focusVisible,
    focusVisibleClassName,
    classes
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
  };
  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
const ButtonBaseRoot = styled$1("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
});
const ButtonBase = /* @__PURE__ */ reactExports.forwardRef(function ButtonBase2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiButtonBase"
  });
  const {
    action,
    centerRipple = false,
    children,
    className,
    component = "button",
    disabled = false,
    disableRipple = false,
    disableTouchRipple = false,
    focusRipple = false,
    LinkComponent = "a",
    onBlur,
    onClick,
    onContextMenu,
    onDragLeave,
    onFocus,
    onFocusVisible,
    onKeyDown,
    onKeyUp,
    onMouseDown,
    onMouseLeave,
    onMouseUp,
    onTouchEnd,
    onTouchMove,
    onTouchStart,
    tabIndex = 0,
    TouchRippleProps,
    touchRippleRef,
    type
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$3);
  const buttonRef = reactExports.useRef(null);
  const rippleRef = reactExports.useRef(null);
  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);
  const {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = reactExports.useState(false);
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  reactExports.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), []);
  const [mountedState, setMountedState] = reactExports.useState(false);
  reactExports.useEffect(() => {
    setMountedState(true);
  }, []);
  const enableTouchRipple = mountedState && !disableRipple && !disabled;
  reactExports.useEffect(() => {
    if (focusVisible && focusRipple && !disableRipple && mountedState) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible, mountedState]);
  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {
    return useEventCallback((event) => {
      if (eventCallback) {
        eventCallback(event);
      }
      const ignore = skipRippleAction;
      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event);
      }
      return true;
    });
  }
  const handleMouseDown = useRippleHandler("start", onMouseDown);
  const handleContextMenu = useRippleHandler("stop", onContextMenu);
  const handleDragLeave = useRippleHandler("stop", onDragLeave);
  const handleMouseUp = useRippleHandler("stop", onMouseUp);
  const handleMouseLeave = useRippleHandler("stop", (event) => {
    if (focusVisible) {
      event.preventDefault();
    }
    if (onMouseLeave) {
      onMouseLeave(event);
    }
  });
  const handleTouchStart = useRippleHandler("start", onTouchStart);
  const handleTouchEnd = useRippleHandler("stop", onTouchEnd);
  const handleTouchMove = useRippleHandler("stop", onTouchMove);
  const handleBlur = useRippleHandler("stop", (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  }, false);
  const handleFocus = useEventCallback((event) => {
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      if (onFocusVisible) {
        onFocusVisible(event);
      }
    }
    if (onFocus) {
      onFocus(event);
    }
  });
  const isNonNativeButton = () => {
    const button = buttonRef.current;
    return component && component !== "button" && !(button.tagName === "A" && button.href);
  };
  const keydownRef = reactExports.useRef(false);
  const handleKeyDown2 = useEventCallback((event) => {
    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === " ") {
      keydownRef.current = true;
      rippleRef.current.stop(event, () => {
        rippleRef.current.start(event);
      });
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === " ") {
      event.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.target === event.currentTarget && isNonNativeButton() && event.key === "Enter" && !disabled) {
      event.preventDefault();
      if (onClick) {
        onClick(event);
      }
    }
  });
  const handleKeyUp = useEventCallback((event) => {
    if (focusRipple && event.key === " " && rippleRef.current && focusVisible && !event.defaultPrevented) {
      keydownRef.current = false;
      rippleRef.current.stop(event, () => {
        rippleRef.current.pulsate(event);
      });
    }
    if (onKeyUp) {
      onKeyUp(event);
    }
    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === " " && !event.defaultPrevented) {
      onClick(event);
    }
  });
  let ComponentProp = component;
  if (ComponentProp === "button" && (other.href || other.to)) {
    ComponentProp = LinkComponent;
  }
  const buttonProps = {};
  if (ComponentProp === "button") {
    buttonProps.type = type === void 0 ? "button" : type;
    buttonProps.disabled = disabled;
  } else {
    if (!other.href && !other.to) {
      buttonProps.role = "button";
    }
    if (disabled) {
      buttonProps["aria-disabled"] = disabled;
    }
  }
  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);
  const ownerState = _extends({}, props, {
    centerRipple,
    component,
    disabled,
    disableRipple,
    disableTouchRipple,
    focusRipple,
    tabIndex,
    focusVisible
  });
  const classes = useUtilityClasses$3(ownerState);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(ButtonBaseRoot, _extends({
    as: ComponentProp,
    className: clsx(classes.root, className),
    ownerState,
    onBlur: handleBlur,
    onClick,
    onContextMenu: handleContextMenu,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled ? -1 : tabIndex,
    type
  }, buttonProps, other, {
    children: [children, enableTouchRipple ? (
      /* TouchRipple is only needed client-side, x2 boost on the server. */
      /* @__PURE__ */ jsxRuntimeExports.jsx(TouchRipple$1, _extends({
        ref: handleRippleRef,
        center: centerRipple
      }, TouchRippleProps))
    ) : null]
  }));
});
const ButtonBase$1 = ButtonBase;
function getBottomNavigationActionUtilityClass(slot) {
  return generateUtilityClass("MuiBottomNavigationAction", slot);
}
const bottomNavigationActionClasses = generateUtilityClasses("MuiBottomNavigationAction", ["root", "iconOnly", "selected", "label"]);
const bottomNavigationActionClasses$1 = bottomNavigationActionClasses;
const _excluded$2 = ["className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"];
const useUtilityClasses$2 = (ownerState) => {
  const {
    classes,
    showLabel,
    selected
  } = ownerState;
  const slots = {
    root: ["root", !showLabel && !selected && "iconOnly", selected && "selected"],
    label: ["label", !showLabel && !selected && "iconOnly", selected && "selected"]
  };
  return composeClasses(slots, getBottomNavigationActionUtilityClass, classes);
};
const BottomNavigationActionRoot = styled$1(ButtonBase$1, {
  name: "MuiBottomNavigationAction",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, !ownerState.showLabel && !ownerState.selected && styles.iconOnly];
  }
})(({
  theme: theme2,
  ownerState
}) => _extends({
  transition: theme2.transitions.create(["color", "padding-top"], {
    duration: theme2.transitions.duration.short
  }),
  padding: "0px 12px",
  minWidth: 80,
  maxWidth: 168,
  color: (theme2.vars || theme2).palette.text.secondary,
  flexDirection: "column",
  flex: "1"
}, !ownerState.showLabel && !ownerState.selected && {
  paddingTop: 14
}, !ownerState.showLabel && !ownerState.selected && !ownerState.label && {
  paddingTop: 0
}, {
  [`&.${bottomNavigationActionClasses$1.selected}`]: {
    color: (theme2.vars || theme2).palette.primary.main
  }
}));
const BottomNavigationActionLabel = styled$1("span", {
  name: "MuiBottomNavigationAction",
  slot: "Label",
  overridesResolver: (props, styles) => styles.label
})(({
  theme: theme2,
  ownerState
}) => _extends({
  fontFamily: theme2.typography.fontFamily,
  fontSize: theme2.typography.pxToRem(12),
  opacity: 1,
  transition: "font-size 0.2s, opacity 0.2s",
  transitionDelay: "0.1s"
}, !ownerState.showLabel && !ownerState.selected && {
  opacity: 0,
  transitionDelay: "0s"
}, {
  [`&.${bottomNavigationActionClasses$1.selected}`]: {
    fontSize: theme2.typography.pxToRem(14)
  }
}));
const BottomNavigationAction = /* @__PURE__ */ reactExports.forwardRef(function BottomNavigationAction2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiBottomNavigationAction"
  });
  const {
    className,
    icon,
    label,
    onChange,
    onClick,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$2);
  const ownerState = props;
  const classes = useUtilityClasses$2(ownerState);
  const handleChange = (event) => {
    if (onChange) {
      onChange(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(BottomNavigationActionRoot, _extends({
    ref,
    className: clsx(classes.root, className),
    focusRipple: true,
    onClick: handleChange,
    ownerState
  }, other, {
    children: [icon, /* @__PURE__ */ jsxRuntimeExports.jsx(BottomNavigationActionLabel, {
      className: classes.label,
      ownerState,
      children: label
    })]
  }));
});
const BottomNavigationAction$1 = BottomNavigationAction;
const getOverlayAlpha = (elevation) => {
  let alphaValue;
  if (elevation < 1) {
    alphaValue = 5.11916 * elevation ** 2;
  } else {
    alphaValue = 4.5 * Math.log(elevation + 1) + 2;
  }
  return (alphaValue / 100).toFixed(2);
};
const getOverlayAlpha$1 = getOverlayAlpha;
function getPaperUtilityClass(slot) {
  return generateUtilityClass("MuiPaper", slot);
}
generateUtilityClasses("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const _excluded$1 = ["className", "component", "elevation", "square", "variant"];
const useUtilityClasses$1 = (ownerState) => {
  const {
    square,
    elevation,
    variant,
    classes
  } = ownerState;
  const slots = {
    root: ["root", variant, !square && "rounded", variant === "elevation" && `elevation${elevation}`]
  };
  return composeClasses(slots, getPaperUtilityClass, classes);
};
const PaperRoot = styled$1("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === "elevation" && styles[`elevation${ownerState.elevation}`]];
  }
})(({
  theme: theme2,
  ownerState
}) => {
  var _theme$vars$overlays;
  return _extends({
    backgroundColor: (theme2.vars || theme2).palette.background.paper,
    color: (theme2.vars || theme2).palette.text.primary,
    transition: theme2.transitions.create("box-shadow")
  }, !ownerState.square && {
    borderRadius: theme2.shape.borderRadius
  }, ownerState.variant === "outlined" && {
    border: `1px solid ${(theme2.vars || theme2).palette.divider}`
  }, ownerState.variant === "elevation" && _extends({
    boxShadow: (theme2.vars || theme2).shadows[ownerState.elevation]
  }, !theme2.vars && theme2.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${alpha("#fff", getOverlayAlpha$1(ownerState.elevation))}, ${alpha("#fff", getOverlayAlpha$1(ownerState.elevation))})`
  }, theme2.vars && {
    backgroundImage: (_theme$vars$overlays = theme2.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]
  }));
});
const Paper = /* @__PURE__ */ reactExports.forwardRef(function Paper2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiPaper"
  });
  const {
    className,
    component = "div",
    elevation = 1,
    square = false,
    variant = "elevation"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded$1);
  const ownerState = _extends({}, props, {
    component,
    elevation,
    square,
    variant
  });
  const classes = useUtilityClasses$1(ownerState);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(PaperRoot, _extends({
    as: component,
    ownerState,
    className: clsx(classes.root, className),
    ref
  }, other));
});
const Paper$1 = Paper;
const plug = "/assets/plug.svg";
const feed_page = "/assets/feed.svg";
const channel_page = "/assets/channel.svg";
const misc_page = "/assets/misc.svg";
const block_page = "/assets/block.svg";
const disabled_page = "/assets/disabled.svg";
const NavBar = ({ darkMode }) => {
  const [value, setValue] = reactExports.useState(0);
  const location2 = useLocation();
  const navDisabled = location2.pathname === "/disabled" ? true : false;
  reactExports.useEffect(() => {
    switch (location2.pathname) {
      case "/":
        setValue(0);
        break;
      case "/feed":
        setValue(0);
        break;
      case "/channel":
        setValue(1);
        break;
      case "/misc":
        setValue(2);
        break;
      case "/block":
        setValue(3);
        break;
      default:
        setValue(99);
    }
  }, [location2.pathname]);
  const navButtonColorDefault = darkMode ? "#ecedee" : "#3b3b3b";
  const navButtonColorActive = darkMode ? "#5086c3" : "#3694ff";
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    Paper$1,
    {
      elevation: 3,
      sx: {
        position: "absolute",
        bottom: 0,
        left: 0,
        right: 0,
        zIndex: 999,
        backgroundColor: darkMode ? "#1a1c1e" : ""
      },
      children: /* @__PURE__ */ jsxRuntimeExports.jsxs(
        BottomNavigation$1,
        {
          value,
          onChange: (event, newValue) => {
            setValue(newValue);
          },
          sx: {
            height: "45px",
            backgroundColor: darkMode ? "#1a1c1e" : ""
          },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: navDisabled ? "/disabled" : "/feed", className: "flex w-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              BottomNavigationAction$1,
              {
                className: `${darkMode ? "hover:bg-[#202225]" : "hover:bg-[#f5f5f5]"} transition-colors duration-200`,
                icon: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: feed_page, width: 20, height: 20 }),
                sx: {
                  height: "100%",
                  color: value === 0 ? navButtonColorActive : navButtonColorDefault,
                  backgroundColor: value === 0 ? darkMode ? "#202225" : "#f5f5f5" : "",
                  borderTopLeftRadius: "6px",
                  borderTopRightRadius: "6px"
                }
              }
            ) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: navDisabled ? "/disabled" : "/channel", className: "flex w-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              BottomNavigationAction$1,
              {
                className: `${darkMode ? "hover:bg-[#202225]" : "hover:bg-[#f5f5f5]"} transition-colors duration-200`,
                icon: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: channel_page, width: 20, height: 20 }),
                sx: {
                  height: "100%",
                  color: value === 1 ? navButtonColorActive : navButtonColorDefault,
                  backgroundColor: value === 1 ? darkMode ? "#202225" : "#f5f5f5" : "",
                  borderTopLeftRadius: "6px",
                  borderTopRightRadius: "6px"
                }
              }
            ) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: navDisabled ? "/disabled" : "/misc", className: "flex w-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              BottomNavigationAction$1,
              {
                className: `${darkMode ? "hover:bg-[#202225]" : "hover:bg-[#f5f5f5]"} transition-colors duration-200`,
                icon: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: misc_page, width: 20, height: 20 }),
                sx: {
                  height: "100%",
                  color: value === 2 ? navButtonColorActive : navButtonColorDefault,
                  backgroundColor: value === 2 ? darkMode ? "#202225" : "#f5f5f5" : "",
                  borderTopLeftRadius: "6px",
                  borderTopRightRadius: "6px"
                }
              }
            ) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(Link, { to: navDisabled ? "/disabled" : "/block", className: "flex w-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx(
              BottomNavigationAction$1,
              {
                className: `${darkMode ? "hover:bg-[#202225]" : "hover:bg-[#f5f5f5]"} transition-colors duration-200`,
                icon: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: block_page, width: 24, height: 20 }),
                sx: {
                  height: "100%",
                  color: value === 3 ? navButtonColorActive : navButtonColorDefault,
                  backgroundColor: value === 3 ? darkMode ? "#202225" : "#f5f5f5" : "",
                  borderTopLeftRadius: "6px",
                  borderTopRightRadius: "6px"
                }
              }
            ) })
          ]
        }
      )
    }
  );
};
var HelpOutline = {};
var interopRequireDefault = { exports: {} };
(function(module) {
  function _interopRequireDefault2(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  module.exports = _interopRequireDefault2, module.exports.__esModule = true, module.exports["default"] = module.exports;
})(interopRequireDefault);
var interopRequireDefaultExports = interopRequireDefault.exports;
var createSvgIcon$1 = {};
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass("MuiSvgIcon", slot);
}
generateUtilityClasses("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const _excluded = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];
const useUtilityClasses = (ownerState) => {
  const {
    color: color2,
    fontSize,
    classes
  } = ownerState;
  const slots = {
    root: ["root", color2 !== "inherit" && `color${capitalize(color2)}`, `fontSize${capitalize(fontSize)}`]
  };
  return composeClasses(slots, getSvgIconUtilityClass, classes);
};
const SvgIconRoot = styled$1("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.color !== "inherit" && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];
  }
})(({
  theme: theme2,
  ownerState
}) => {
  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    fill: "currentColor",
    flexShrink: 0,
    transition: (_theme$transitions = theme2.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, "fill", {
      duration: (_theme$transitions2 = theme2.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter
    }),
    fontSize: {
      inherit: "inherit",
      small: ((_theme$typography = theme2.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || "1.25rem",
      medium: ((_theme$typography2 = theme2.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || "1.5rem",
      large: ((_theme$typography3 = theme2.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || "2.1875rem"
    }[ownerState.fontSize],
    // TODO v5 deprecate, v6 remove for sx
    color: (_palette$ownerState$c = (_palette = (theme2.vars || theme2).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {
      action: (_palette2 = (theme2.vars || theme2).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,
      disabled: (_palette3 = (theme2.vars || theme2).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,
      inherit: void 0
    }[ownerState.color]
  };
});
const SvgIcon = /* @__PURE__ */ reactExports.forwardRef(function SvgIcon2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiSvgIcon"
  });
  const {
    children,
    className,
    color: color2 = "inherit",
    component = "svg",
    fontSize = "medium",
    htmlColor,
    inheritViewBox = false,
    titleAccess,
    viewBox = "0 0 24 24"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const ownerState = _extends({}, props, {
    color: color2,
    component,
    fontSize,
    instanceFontSize: inProps.fontSize,
    inheritViewBox,
    viewBox
  });
  const more = {};
  if (!inheritViewBox) {
    more.viewBox = viewBox;
  }
  const classes = useUtilityClasses(ownerState);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(SvgIconRoot, _extends({
    as: component,
    className: clsx(classes.root, className),
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref
  }, more, other, {
    ownerState,
    children: [children, titleAccess ? /* @__PURE__ */ jsxRuntimeExports.jsx("title", {
      children: titleAccess
    }) : null]
  }));
});
SvgIcon.muiName = "SvgIcon";
const SvgIcon$1 = SvgIcon;
function createSvgIcon(path, displayName) {
  function Component(props, ref) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(SvgIcon$1, _extends({
      "data-testid": `${displayName}Icon`,
      ref
    }, props, {
      children: path
    }));
  }
  Component.muiName = SvgIcon$1.muiName;
  return /* @__PURE__ */ reactExports.memo(/* @__PURE__ */ reactExports.forwardRef(Component));
}
const unstable_ClassNameGenerator = {
  configure: (generator) => {
    ClassNameGenerator$1.configure(generator);
  }
};
const utils = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  capitalize,
  createChainedFunction,
  createSvgIcon,
  debounce,
  deprecatedPropType,
  isMuiElement,
  ownerDocument,
  ownerWindow,
  requirePropFactory,
  setRef,
  unstable_ClassNameGenerator,
  unstable_useEnhancedEffect: useEnhancedEffect$1,
  unstable_useId: useId,
  unsupportedProp,
  useControlled,
  useEventCallback,
  useForkRef,
  useIsFocusVisible
}, Symbol.toStringTag, { value: "Module" }));
const require$$0 = /* @__PURE__ */ getAugmentedNamespace(utils);
var hasRequiredCreateSvgIcon;
function requireCreateSvgIcon() {
  if (hasRequiredCreateSvgIcon)
    return createSvgIcon$1;
  hasRequiredCreateSvgIcon = 1;
  (function(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function() {
        return _utils.createSvgIcon;
      }
    });
    var _utils = require$$0;
  })(createSvgIcon$1);
  return createSvgIcon$1;
}
var _interopRequireDefault$7 = interopRequireDefaultExports;
Object.defineProperty(HelpOutline, "__esModule", {
  value: true
});
var default_1$7 = HelpOutline.default = void 0;
var _createSvgIcon$7 = _interopRequireDefault$7(requireCreateSvgIcon());
var _jsxRuntime$7 = jsxRuntimeExports;
var _default$7 = (0, _createSvgIcon$7.default)(/* @__PURE__ */ (0, _jsxRuntime$7.jsx)("path", {
  d: "M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
}), "HelpOutline");
default_1$7 = HelpOutline.default = _default$7;
const PageHead = ({ darkMode, toggleDarkMode }) => {
  const location2 = useLocation();
  const pageData = {
    "/": [chrome.i18n.getMessage("feedPageTitle"), feed_page, chrome.i18n.getMessage("feedPageDesc")],
    "/feed": [chrome.i18n.getMessage("feedPageTitle"), feed_page, chrome.i18n.getMessage("feedPageDesc")],
    "/channel": [chrome.i18n.getMessage("channelPageTitle"), channel_page, chrome.i18n.getMessage("channelPageDesc")],
    "/misc": [chrome.i18n.getMessage("miscPageTitle"), misc_page, chrome.i18n.getMessage("miscPageDesc")],
    "/block": [chrome.i18n.getMessage("blockPageTitle"), block_page, chrome.i18n.getMessage("blockPageDesc")],
    "/disabled": [chrome.i18n.getMessage("disabledPageTitle"), disabled_page, chrome.i18n.getMessage("disabledPageDesc")]
  };
  const [title, pageIcon, tooltipText] = pageData[location2.pathname] || [];
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: `relative flex justify-between items-center w-full px-[22px] py-2 pb-1 ${darkMode ? "bg-[#1a1c1e]" : "bg-[#fff]"} shadow-pageHead`, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-row items-center gap-2", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: pageIcon, width: 22, height: 22 }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: "font-medium select-none", children: title }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        o$5,
        {
          hideArrow: true,
          color: "invert",
          offset: 0,
          placement: "bottom",
          css: { backgroundColor: darkMode ? "#1c1d20" : "#f7f7f7", border: `1px solid ${darkMode ? "#2f2f2f" : "#dbdbdb"}`, userSelect: "none" },
          content: /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: `text-[12px] ${darkMode ? "text-white" : "text-black"}`, children: tooltipText }),
          children: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$7, { className: "text-[16px] text-[gray]" })
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(SettingsButton, { darkMode, toggleDarkMode })
  ] });
};
const SunIcon = ({ fill = "#ebc934", filled, size, height: height2, width: width2, label, ...props }) => {
  if (filled) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "svg",
      {
        width: size || width2 || 24,
        height: size || height2 || 24,
        viewBox: "0 0 24 24",
        ...props,
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("g", { fill, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M19 12a7 7 0 11-7-7 7 7 0 017 7z" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("path", { d: "M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" })
        ] })
      }
    );
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: size || width2 || 24,
      height: size || height2 || 24,
      viewBox: "0 0 24 24",
      ...props,
      children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fill,
            d: "M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19H12.998V22H10.998zM10.998 2H12.998V5H10.998zM1.998 11H4.998V13H1.998zM18.998 11H21.998V13H18.998z"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fill,
            transform: "rotate(-45.017 5.986 18.01)",
            d: "M4.487 17.01H7.487V19.01H4.487z"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fill,
            transform: "rotate(-45.001 18.008 5.99)",
            d: "M16.508 4.99H19.509V6.99H16.508z"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fill,
            transform: "rotate(-134.983 5.988 5.99)",
            d: "M4.487 4.99H7.487V6.99H4.487z"
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            fill,
            transform: "rotate(134.999 18.008 18.01)",
            d: "M17.008 16.51H19.008V19.511000000000003H17.008z"
          }
        )
      ]
    }
  );
};
const MoonIcon = ({ fill = "currentColor", filled, size, height: height2, width: width2, label, ...props }) => {
  if (filled) {
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "svg",
      {
        width: size || width2 || 24,
        height: size || height2 || 24,
        viewBox: "0 0 24 24",
        ...props,
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(
          "path",
          {
            d: "M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z",
            fill
          }
        )
      }
    );
  }
  return /* @__PURE__ */ jsxRuntimeExports.jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: size || width2 || 24,
      height: size || height2 || 24,
      viewBox: "0 0 24 24",
      ...props,
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(
        "path",
        {
          fill,
          d: "M20.742,13.045c-0.677,0.18-1.376,0.271-2.077,0.271c-2.135,0-4.14-0.83-5.646-2.336c-2.008-2.008-2.799-4.967-2.064-7.723 c0.092-0.345-0.007-0.713-0.259-0.965C10.444,2.04,10.077,1.938,9.73,2.034C8.028,2.489,6.476,3.382,5.241,4.616 c-3.898,3.898-3.898,10.243,0,14.143c1.889,1.889,4.401,2.93,7.072,2.93c2.671,0,5.182-1.04,7.07-2.929 c1.236-1.237,2.13-2.791,2.583-4.491c0.092-0.345-0.008-0.713-0.26-0.965C21.454,13.051,21.085,12.951,20.742,13.045z M17.97,17.346c-1.511,1.511-3.52,2.343-5.656,2.343c-2.137,0-4.146-0.833-5.658-2.344c-3.118-3.119-3.118-8.195,0-11.314 c0.602-0.602,1.298-1.102,2.06-1.483c-0.222,2.885,0.814,5.772,2.89,7.848c2.068,2.069,4.927,3.12,7.848,2.891 C19.072,16.046,18.571,16.743,17.97,17.346z"
        }
      )
    }
  );
};
var Language = {};
var _interopRequireDefault$6 = interopRequireDefaultExports;
Object.defineProperty(Language, "__esModule", {
  value: true
});
var default_1$6 = Language.default = void 0;
var _createSvgIcon$6 = _interopRequireDefault$6(requireCreateSvgIcon());
var _jsxRuntime$6 = jsxRuntimeExports;
var _default$6 = (0, _createSvgIcon$6.default)(/* @__PURE__ */ (0, _jsxRuntime$6.jsx)("path", {
  d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
}), "Language");
default_1$6 = Language.default = _default$6;
var GitHub = {};
var _interopRequireDefault$5 = interopRequireDefaultExports;
Object.defineProperty(GitHub, "__esModule", {
  value: true
});
var default_1$5 = GitHub.default = void 0;
_interopRequireWildcard(reactExports);
var _createSvgIcon$5 = _interopRequireDefault$5(requireCreateSvgIcon());
var _jsxRuntime$5 = jsxRuntimeExports;
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function")
    return null;
  var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
  var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
  return (_getRequireWildcardCache = function(nodeInterop2) {
    return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return { default: obj };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var _default$5 = (0, _createSvgIcon$5.default)(/* @__PURE__ */ (0, _jsxRuntime$5.jsx)("path", {
  d: "M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27"
}), "GitHub");
default_1$5 = GitHub.default = _default$5;
var ThumbUpAlt = {};
var _interopRequireDefault$4 = interopRequireDefaultExports;
Object.defineProperty(ThumbUpAlt, "__esModule", {
  value: true
});
var default_1$4 = ThumbUpAlt.default = void 0;
var _createSvgIcon$4 = _interopRequireDefault$4(requireCreateSvgIcon());
var _jsxRuntime$4 = jsxRuntimeExports;
var _default$4 = (0, _createSvgIcon$4.default)(/* @__PURE__ */ (0, _jsxRuntime$4.jsx)("path", {
  d: "M2 20h2c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1H2v11zm19.83-7.12c.11-.25.17-.52.17-.8V11c0-1.1-.9-2-2-2h-5.5l.92-4.65c.05-.22.02-.46-.08-.66-.23-.45-.52-.86-.88-1.22L14 2 7.59 8.41C7.21 8.79 7 9.3 7 9.83v7.84C7 18.95 8.05 20 9.34 20h8.11c.7 0 1.36-.37 1.72-.97l2.66-6.15z"
}), "ThumbUpAlt");
default_1$4 = ThumbUpAlt.default = _default$4;
var Coffee = {};
var _interopRequireDefault$3 = interopRequireDefaultExports;
Object.defineProperty(Coffee, "__esModule", {
  value: true
});
var default_1$3 = Coffee.default = void 0;
var _createSvgIcon$3 = _interopRequireDefault$3(requireCreateSvgIcon());
var _jsxRuntime$3 = jsxRuntimeExports;
var _default$3 = (0, _createSvgIcon$3.default)(/* @__PURE__ */ (0, _jsxRuntime$3.jsx)("path", {
  d: "M18.5 3H6c-1.1 0-2 .9-2 2v5.71c0 3.83 2.95 7.18 6.78 7.29 3.96.12 7.22-3.06 7.22-7v-1h.5c1.93 0 3.5-1.57 3.5-3.5S20.43 3 18.5 3zM16 5v3H6V5h10zm2.5 3H18V5h.5c.83 0 1.5.67 1.5 1.5S19.33 8 18.5 8zM4 19h16v2H4v-2z"
}), "Coffee");
default_1$3 = Coffee.default = _default$3;
var Circle = {};
var _interopRequireDefault$2 = interopRequireDefaultExports;
Object.defineProperty(Circle, "__esModule", {
  value: true
});
var default_1$2 = Circle.default = void 0;
var _createSvgIcon$2 = _interopRequireDefault$2(requireCreateSvgIcon());
var _jsxRuntime$2 = jsxRuntimeExports;
var _default$2 = (0, _createSvgIcon$2.default)(/* @__PURE__ */ (0, _jsxRuntime$2.jsx)("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z"
}), "Circle");
default_1$2 = Circle.default = _default$2;
const getSwitchStates = async () => {
  const switchStates = await chrome.storage.sync.get([
    "toggleState",
    "toggleNavState",
    "toggleHomeFeedState",
    "toggleHomeFeedStateLives",
    "toggleHomeFeedStatePremieres",
    "toggleSubscriptionFeedState",
    "toggleSubscriptionFeedStateLives",
    "toggleSubscriptionFeedStatePremieres",
    "toggleTrendingFeedState",
    "toggleSearchState",
    "toggleRecommendedState",
    "toggleTabState",
    "toggleHomeTabState",
    "toggleTurboState",
    "toggleRegularState",
    "toggleNotificationState"
  ]);
  return switchStates;
};
const updateSwitchState = async (switchName) => {
  const storageObject = await chrome.storage.sync.get([switchName]);
  const switchState = storageObject[switchName];
  const newState = !switchState;
  chrome.storage.sync.set({ [switchName]: newState });
  if (switchName === "toggleState") {
    const iconPath = newState ? `/icons/icon16.png` : "/icons/icon16_disabled.png";
    chrome.action.setIcon({ path: { "16": iconPath } }).catch(() => {
    });
  }
  chrome.runtime.sendMessage({ checkStates: switchName });
};
const presentModal = async () => {
  const { presentModal: presentModal2 } = await chrome.storage.sync.get(["presentModal"]);
  if (presentModal2) {
    return new Promise((resolve) => {
      setTimeout(() => {
        $("body").animate({ width: "425px" }, 250);
        resolve(presentModal2);
      }, 250);
    });
  }
};
const handleCloseModal = () => {
  chrome.storage.sync.set({ presentModal: false });
  chrome.action.setBadgeText({ text: "" });
  $("body").animate({ width: "400px" }, 250);
};
const getBlockList = async () => {
  const { blockList } = await chrome.storage.sync.get(["blockList"]);
  if (blockList && blockList.length > 0) {
    chrome.runtime.sendMessage({ blockList: true });
    return blockList;
  } else {
    chrome.runtime.sendMessage({ checkStates: true });
    return [];
  }
};
const updateBlockList = async (channelToBlock, action) => {
  if (action === "add") {
    const { blockList } = await chrome.storage.sync.get(["blockList"]);
    if (blockList && blockList.length > 0) {
      await chrome.storage.sync.set({ blockList: [...blockList, channelToBlock] });
    } else {
      await chrome.storage.sync.set({ blockList: [channelToBlock] });
    }
    chrome.runtime.sendMessage({ blockList: "add" });
  } else if (action === "remove") {
    const { blockList } = await chrome.storage.sync.get(["blockList"]);
    const updatedBlockList = blockList.filter((item) => item !== channelToBlock);
    await chrome.storage.sync.set({ blockList: updatedBlockList });
    chrome.runtime.sendMessage({ blockList: { action: "remove", channelName: channelToBlock } });
  } else if (action === "clear") {
    await chrome.runtime.sendMessage({ blockList: "clear" });
    await chrome.storage.sync.set({ blockList: [] });
  }
};
const SettingsButton = ({ darkMode, toggleDarkMode }) => {
  const [mainState, setMainState] = reactExports.useState();
  const navigate = useNavigate();
  reactExports.useEffect(() => {
    const fetchSwitchData = async () => {
      try {
        const switchData = await getSwitchStates();
        setMainState(switchData.toggleState);
      } catch (error) {
        console.error("Error fetching switch data:", error);
      }
    };
    fetchSwitchData();
  }, []);
  const updateSwitch = async () => {
    await updateSwitchState("toggleState");
    setMainState(!mainState);
    if (!mainState === false)
      navigate("/disabled");
    if (!mainState === true)
      navigate("/");
  };
  const handleClick = (action) => {
    if (action === "twitter")
      window.open("https://twitter.com/hideshorts");
    if (action === "facebook")
      window.open("https://www.facebook.com/profile.php?id=100094122960153");
    if (action === "website")
      window.open("https://hideshorts.com/");
    if (action === "github")
      window.open("https://github.com/probablyraging/hide-youtube-shorts");
    if (action === "help")
      window.open("https://discord.gg/HAFP4P7Dfr");
    if (action === "review")
      window.open("https://chrome.google.com/webstore/detail/hide-youtube-shorts/aljlkinhomaaahfdojalfmimeidofpih/reviews");
    if (action === "coffee")
      window.open("https://www.buymeacoffee.com/probablyraging");
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `${darkMode ? "text-[#e9e9e9]" : "text-[#3b3b3b]"} cursor-pointer`, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(n$2, { closeOnSelect: false, placement: "bottom-right", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      e$2,
      {
        content: "",
        color: `${mainState ? "success" : "error"}`,
        placement: "bottom-left",
        shape: "circle",
        variant: "dot",
        size: "md",
        verticalOffset: "10%",
        className: "cursor-default",
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(n$2.Trigger, { children: /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: "bi bi-gear text-[22px] hover:text-[#3694ff] transition-colors duration-200 cursor-pointer" }) })
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      n$2.Menu,
      {
        css: { border: `1px solid ${darkMode ? "#2f2f2f" : "#dbdbdb"}`, borderRadius: "16px", padding: "4px" },
        variant: "light",
        "aria-label": "settings",
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "power",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-between", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-full", onClick: updateSwitch, children: mainState ? chrome.i18n.getMessage("enabled") : chrome.i18n.getMessage("disabled") }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  t$8,
                  {
                    id: "power-switch",
                    checked: mainState,
                    onChange: updateSwitch,
                    size: "xs",
                    iconOn: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$2, { className: "text-[#17C964]" }),
                    iconOff: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$2, { className: "text-[#F31260]" })
                  }
                )
              ] })
            },
            "power"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "theme",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              css: { fontSize: "14px" },
              withDivider: true,
              children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex items-center justify-between", children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "w-full", onClick: toggleDarkMode, children: darkMode ? "Dark" : "Light" }),
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  t$8,
                  {
                    id: "theme-switch",
                    checked: !darkMode,
                    onChange: toggleDarkMode,
                    size: "xs",
                    iconOn: /* @__PURE__ */ jsxRuntimeExports.jsx(SunIcon, { filled: true }),
                    iconOff: /* @__PURE__ */ jsxRuntimeExports.jsx(MoonIcon, { filled: true })
                  }
                )
              ] })
            },
            "theme"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "github",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$5, { className: `w-[18px] ${darkMode ? "text-[#4f4f4f]" : "text-[#373737]"}` }),
              css: { fontSize: "14px" },
              withDivider: true,
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("github"), children: "GitHub" })
            },
            "github"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "twitter",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: `bi bi-twitter text-[17px] ${darkMode ? "text-[#1C9AEF]" : "text-[#1C9AEF]"}` }),
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("twitter"), children: "Twitter" })
            },
            "twitter"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "facebook",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: `bi bi-facebook text-[17px] ${darkMode ? "text-[#097EEB]" : "text-[#097EEB]"}` }),
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("facebook"), children: "Facebook" })
            },
            "facebook"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "website",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$6, { className: `w-[18px] ${darkMode ? "text-[#a570c6]" : "text-[#a570c6]"}` }),
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("website"), children: chrome.i18n.getMessage("website") })
            },
            "website"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "help & support",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: `bi bi-discord w-[18px] h-[24px] text-[17px] ${darkMode ? "text-[#515cd6]" : "text-[#404eed]"}` }),
              css: { fontSize: "14px" },
              withDivider: true,
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("help"), children: chrome.i18n.getMessage("helpAndSupport") })
            },
            "support"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "review",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$4, { className: `w-[18px] ${darkMode ? "text-[#3694ff]" : "text-[#3694ff]"}` }),
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("review"), children: chrome.i18n.getMessage("leaveAReview") })
            },
            "review"
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            n$2.Item,
            {
              textValue: "coffee",
              className: `${darkMode ? "hover:bg-[#232323] text-[#ecedee]" : "hover:bg-[#f5f5f5] text-[#000]"}`,
              icon: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$3, { className: `w-[18px] ${darkMode ? "text-[#e1cd4a]" : "text-[#e1cd4a]"}` }),
              css: { fontSize: "14px" },
              children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { onClick: () => handleClick("coffee"), children: chrome.i18n.getMessage("buyMeACoffee") })
            },
            "coffee"
          )
        ]
      }
    )
  ] }) });
};
const Loader = ({ darkMode }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `fixed top-0 left-0 w-full h-full flex items-center justify-center z-50 ${darkMode ? "bg-black" : "bg-white"}`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(e$9, { size: "lg", color: "secondary", type: "points-opacity" }) });
};
const Badge = ({ darkMode, content }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `flex justify-center items-center px-[4px] py-0 ${darkMode ? "bg-[#5086c3]" : "bg-[#3694ff]"} rounded-full h-[16px] select-none`, children: /* @__PURE__ */ jsxRuntimeExports.jsx("span", { className: "text-white text-[10px] font-semibold leading-[0]", children: content }) });
};
const InfoTooltip = ({ darkMode, content }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: `flex justify-center items-center select-none`, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    o$5,
    {
      hideArrow: true,
      color: "invert",
      offset: 0,
      css: { backgroundColor: darkMode ? "#1c1d20" : "#f7f7f7", border: `1px solid ${darkMode ? "#2f2f2f" : "#dbdbdb"}` },
      content: /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: `text-[12px] ${darkMode ? "text-white" : "text-black"}`, children: content }),
      children: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$7, { className: "text-[16px] text-[gray]" })
    }
  ) });
};
const SwitchContainer$2 = reactExports.lazy(() => __vitePreload(() => import("./SwitchContainer.js"), true ? [] : void 0));
const ModalDisplay = reactExports.lazy(() => __vitePreload(() => import("./ModalDisplay.js"), true ? [] : void 0));
const FeedPage = ({ darkMode }) => {
  const [switchState, setSwitchState] = reactExports.useState({});
  const navigate = useNavigate();
  reactExports.useEffect(() => {
    const fetchSwitchData = async () => {
      try {
        const switchData = await getSwitchStates();
        setSwitchState(switchData);
      } catch (error) {
        console.error("Error fetching switch data:", error);
      }
    };
    fetchSwitchData();
  }, []);
  if (switchState.toggleState === false)
    navigate("/disabled");
  return /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loader, { darkMode }), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col justify-center items-center w-full h-full", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(ModalDisplay, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col w-full mt-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Home Feed Shorts",
          description: chrome.i18n.getMessage("homeFeedShortsDesc"),
          darkMode,
          switchName: "toggleHomeFeedState",
          state: switchState.toggleHomeFeedState
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Home Feed Lives",
          description: chrome.i18n.getMessage("homeFeedLivesDesc"),
          darkMode,
          switchName: "toggleHomeFeedStateLives",
          state: switchState.toggleHomeFeedStateLives
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Home Feed Premieres",
          description: chrome.i18n.getMessage("homeFeedPremieresDesc"),
          darkMode,
          switchName: "toggleHomeFeedStatePremieres",
          state: switchState.toggleHomeFeedStatePremieres
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Subscriptions Feed Shorts",
          description: chrome.i18n.getMessage("subFeedShortsDesc"),
          darkMode,
          switchName: "toggleSubscriptionFeedState",
          state: switchState.toggleSubscriptionFeedState
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Subscriptions Feed Lives",
          description: chrome.i18n.getMessage("subFeedLivesDesc"),
          darkMode,
          switchName: "toggleSubscriptionFeedStateLives",
          state: switchState.toggleSubscriptionFeedStateLives
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Subscriptions Feed Premieres",
          description: chrome.i18n.getMessage("subFeedPremieresDesc"),
          darkMode,
          switchName: "toggleSubscriptionFeedStatePremieres",
          state: switchState.toggleSubscriptionFeedStatePremieres
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        SwitchContainer$2,
        {
          title: "Trending Feed Shorts",
          description: chrome.i18n.getMessage("trendingFeedShortsDesc"),
          darkMode,
          switchName: "toggleTrendingFeedState",
          state: switchState.toggleTrendingFeedState
        }
      )
    ] })
  ] }) });
};
const SwitchContainer$1 = reactExports.lazy(() => __vitePreload(() => import("./SwitchContainer.js"), true ? [] : void 0));
const ChannelPage = ({ darkMode }) => {
  const [switchState, setSwitchState] = reactExports.useState({});
  reactExports.useEffect(() => {
    const fetchData = async () => {
      try {
        const switchData = await getSwitchStates();
        setSwitchState(switchData);
      } catch (error) {
        console.error("Error fetching switch data:", error);
      }
    };
    fetchData();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loader, { darkMode }), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex flex-col justify-center items-center w-full h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col w-full mt-4", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer$1,
      {
        title: "Shorts Tab",
        description: chrome.i18n.getMessage("shortsTabDesc"),
        darkMode,
        switchName: "toggleTabState",
        state: switchState.toggleTabState
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer$1,
      {
        title: "Home Tab Shorts",
        description: chrome.i18n.getMessage("homeTabShortsDesc"),
        darkMode,
        switchName: "toggleHomeTabState",
        state: switchState.toggleHomeTabState
      }
    )
  ] }) }) });
};
const SwitchContainer = reactExports.lazy(() => __vitePreload(() => import("./SwitchContainer.js"), true ? [] : void 0));
const MiscPage = ({ darkMode }) => {
  const [switchState, setSwitchState] = reactExports.useState({});
  reactExports.useEffect(() => {
    const fetchData = async () => {
      try {
        const switchData = await getSwitchStates();
        setSwitchState(switchData);
      } catch (error) {
        console.error("Error fetching switch data:", error);
      }
    };
    fetchData();
  }, []);
  return /* @__PURE__ */ jsxRuntimeExports.jsx(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loader, { darkMode }), children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex flex-col justify-center items-center w-full h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col w-full mt-4", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer,
      {
        title: "Shorts Navigation Button",
        description: chrome.i18n.getMessage("shortsNavigationButtonDesc"),
        darkMode,
        switchName: "toggleNavState",
        state: switchState.toggleNavState
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer,
      {
        title: "Search Results",
        description: chrome.i18n.getMessage("searchResultsDesc"),
        darkMode,
        switchName: "toggleSearchState",
        state: switchState.toggleSearchState
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer,
      {
        title: "Recommended List",
        description: chrome.i18n.getMessage("recommendedListDesc"),
        darkMode,
        switchName: "toggleRecommendedState",
        state: switchState.toggleRecommendedState
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer,
      {
        title: "Notification Menu",
        description: chrome.i18n.getMessage("notificationMenuDesc"),
        darkMode,
        switchName: "toggleNotificationState",
        state: switchState.toggleNotificationState
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      SwitchContainer,
      {
        title: "Play In Regular Mode",
        description: chrome.i18n.getMessage("playInRegularModeDesc"),
        darkMode,
        switchName: "toggleRegularState",
        state: switchState.toggleRegularState
      }
    )
  ] }) }) });
};
var AlternateEmail = {};
var _interopRequireDefault$1 = interopRequireDefaultExports;
Object.defineProperty(AlternateEmail, "__esModule", {
  value: true
});
var default_1$1 = AlternateEmail.default = void 0;
var _createSvgIcon$1 = _interopRequireDefault$1(requireCreateSvgIcon());
var _jsxRuntime$1 = jsxRuntimeExports;
var _default$1 = (0, _createSvgIcon$1.default)(/* @__PURE__ */ (0, _jsxRuntime$1.jsx)("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10h5v-2h-5c-4.34 0-8-3.66-8-8s3.66-8 8-8 8 3.66 8 8v1.43c0 .79-.71 1.57-1.5 1.57s-1.5-.78-1.5-1.57V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.38 0 2.64-.56 3.54-1.47.65.89 1.77 1.47 2.96 1.47 1.97 0 3.5-1.6 3.5-3.57V12c0-5.52-4.48-10-10-10zm0 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
}), "AlternateEmail");
default_1$1 = AlternateEmail.default = _default$1;
var DeleteOutline = {};
var _interopRequireDefault = interopRequireDefaultExports;
Object.defineProperty(DeleteOutline, "__esModule", {
  value: true
});
var default_1 = DeleteOutline.default = void 0;
var _createSvgIcon = _interopRequireDefault(requireCreateSvgIcon());
var _jsxRuntime = jsxRuntimeExports;
var _default = (0, _createSvgIcon.default)(/* @__PURE__ */ (0, _jsxRuntime.jsx)("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z"
}), "DeleteOutline");
default_1 = DeleteOutline.default = _default;
const BlockPage = ({ darkMode }) => {
  const [blockListData, setBlockListData] = reactExports.useState([]);
  const [inputValue, setInputValue] = reactExports.useState("");
  reactExports.useEffect(() => {
    const fetchData = async () => {
      try {
        const blockList = await getBlockList();
        setBlockListData(blockList);
      } catch (error) {
        console.error("Error fetching switch data:", error);
      }
    };
    fetchData();
  }, []);
  const updateBlockListData = async (value, action) => {
    await updateBlockList(value, action);
    const updatedBlockList = await getBlockList();
    setBlockListData(updatedBlockList);
  };
  function blockListAdd() {
    if (/^\s*$/.test(inputValue))
      return;
    updateBlockListData(inputValue, "add");
    setInputValue("");
  }
  function blockListRemove(item) {
    updateBlockListData(item, "remove");
  }
  function blockListClear() {
    updateBlockListData("", "clear");
  }
  const IconButton = styled$3("button", {
    dflex: "center",
    border: "none",
    outline: "none",
    cursor: "pointer",
    padding: "0",
    margin: "0",
    bg: "transparent",
    transition: "$default",
    "&:hover": {
      opacity: "0.8"
    },
    "&:active": {
      opacity: "0.6"
    }
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex flex-col justify-center items-center w-full h-full", children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "flex flex-col w-full mt-4", children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: `switch-container flex flex-col justify-between pl-4 pr-4 py-4 ${darkMode ? "border-[#2d2d2d]" : "border-[#d5d5d5]"}`, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(t$9, { className: "flex items-center gap-1 text-[14px] font-medium", children: [
      "Block Channels ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(InfoTooltip, { content: "Channel handles are case sensitive" }),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx(Badge, { content: "NEW" })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: `text-[12px] ${darkMode ? "text-textAltDark" : "text-textAlt"} pr-5 mb-2`, children: chrome.i18n.getMessage("blockChannelsDesc") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-row gap-2 mb-4", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        t$5,
        {
          clearable: true,
          className: "h-[32px] w-[300px]",
          labelLeft: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1$1, { className: `w-[16px] ${darkMode ? "text-[#d2d2d2]" : "text-[#262626]"}` }),
          placeholder: "MrBeast",
          "aria-label": "channel name",
          value: inputValue,
          onChange: (e2) => setInputValue(e2.target.value)
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        t$c,
        {
          auto: true,
          className: "h-[32px]",
          onPress: blockListAdd,
          children: "Add"
        }
      )
    ] }),
    blockListData.length > 0 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        e$7,
        {
          css: { backgroundColor: darkMode ? "#1f2125" : "" },
          "aria-label": "block list data",
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(e$7.Header, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(e$7.Column, { children: "Blocked Channel" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(e$7.Column, { children: "Action" })
            ] }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(e$7.Body, { children: blockListData.map((item, index2) => /* @__PURE__ */ jsxRuntimeExports.jsxs(e$7.Row, { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(e$7.Cell, { children: item }),
              /* @__PURE__ */ jsxRuntimeExports.jsx(e$7.Cell, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(IconButton, { onClick: () => blockListRemove(item), children: /* @__PURE__ */ jsxRuntimeExports.jsx(default_1, { className: "text-[#FF0080] ml-2" }) }) })
            ] }, index2)) })
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        t$c,
        {
          auto: true,
          className: "h-[32px] mt-6",
          color: "error",
          onPress: blockListClear,
          children: "Clear Block List"
        }
      )
    ] })
  ] }) }) });
};
const Disabled = ({ darkMode }) => {
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "flex flex-col justify-center items-center text-center w-full mt-[25%]", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: plug, width: 64, height: 64 }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: `text-[22px] mb-3`, children: chrome.i18n.getMessage("disabledOne") }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(t$9, { className: `text-[16px] mb-6 ${darkMode ? "text-textAltDark" : "text-textAlt"}`, children: chrome.i18n.getMessage("disabledTwo") }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(t$9, { className: `text-[16px] ${darkMode ? "text-textAltDark" : "text-textAlt"}`, children: [
      chrome.i18n.getMessage("disabledThreeA"),
      " ",
      /* @__PURE__ */ jsxRuntimeExports.jsx("i", { className: "bi bi-gear text-[16px]" }),
      " ",
      chrome.i18n.getMessage("disabledThreeB")
    ] })
  ] });
};
const darkTheme = createTheme$2({
  type: "dark",
  theme: {
    colors: {
      background: "#1a1c1e",
      navText: "#ffffff",
      gradient: "linear-gradient(112deg, #3694ff -63.59%, #adc8e7 -20.3%, var(--nextui-colors-blue600) 70.46%);",
      primary: "#5086c3",
      primaryLight: "#1d68bd",
      primaryLightHover: "#3694ff",
      primaryLightContrast: "$white",
      accents2: "#3d3f41"
    }
  }
});
const lightTheme = createTheme$2({
  type: "light",
  theme: {
    colors: {
      navText: "#000000",
      gradient: "linear-gradient(112deg, #3694ff -63.59%, #adc8e7 -20.3%, var(--nextui-colors-blue600) 70.46%);",
      primary: "#3694ff",
      primaryLight: "#1d68bd",
      primaryLightHover: "#3694ff",
      primaryLightContrast: "$white",
      neutralLight: "#d3d3d3",
      accents2: "#bbbbbb"
    }
  }
});
const MainPage = reactExports.lazy(() => __vitePreload(() => import("./MainPage.js"), true ? [] : void 0));
reactExports.lazy(() => __vitePreload(() => import("./background.js"), true ? [] : void 0));
reactExports.lazy(() => __vitePreload(() => import("./mobile.js"), true ? [] : void 0));
const App = () => {
  const [darkMode, setDarkMode] = reactExports.useState(false);
  reactExports.useEffect(() => {
    const storedTheme = localStorage.getItem("darkMode");
    if (storedTheme) {
      setDarkMode(storedTheme === "true");
      updateScrollbarColors(storedTheme === "true");
    } else {
      const prefersDarkMode = window.matchMedia("(prefers-color-scheme: dark)").matches;
      setDarkMode(prefersDarkMode);
      updateScrollbarColors(prefersDarkMode);
    }
  }, []);
  const updateScrollbarColors = (isDarkMode) => {
    const scrollbarTrackColor = isDarkMode ? "#1a1c1e" : "#fff";
    const scrollbarThumbColor = isDarkMode ? "#5086c3" : "#3694ff";
    document.documentElement.style.setProperty("--scrollbar-track-color", scrollbarTrackColor);
    document.documentElement.style.setProperty("--scrollbar-thumb-color", scrollbarThumbColor);
  };
  const toggleDarkMode = () => {
    const newDarkMode = !darkMode;
    setDarkMode(newDarkMode);
    updateScrollbarColors(newDarkMode);
    localStorage.setItem("darkMode", newDarkMode.toString());
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx(BrowserRouter, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(NextUIProvider, { theme: darkMode ? darkTheme : lightTheme, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(CssBaseline, {}),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(reactExports.Suspense, { fallback: /* @__PURE__ */ jsxRuntimeExports.jsx(Loader, { darkMode }), children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(PageHead, { darkMode, toggleDarkMode }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(MainPage, { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(NavBar, { darkMode }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/", element: /* @__PURE__ */ jsxRuntimeExports.jsx(FeedPage, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/feed", element: /* @__PURE__ */ jsxRuntimeExports.jsx(FeedPage, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/channel", element: /* @__PURE__ */ jsxRuntimeExports.jsx(ChannelPage, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/misc", element: /* @__PURE__ */ jsxRuntimeExports.jsx(MiscPage, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/block", element: /* @__PURE__ */ jsxRuntimeExports.jsx(BlockPage, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/disabled", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Disabled, { darkMode, toggleDarkMode }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "*", element: /* @__PURE__ */ jsxRuntimeExports.jsx(Navigate, { to: "/" }) })
        ] })
      ] })
    ] })
  ] }) });
};
const index = "";
window.React = React;
client.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsxRuntimeExports.jsx(React.StrictMode, { children: /* @__PURE__ */ jsxRuntimeExports.jsx(App, {}) })
);
export {
  Badge as B,
  InfoTooltip as I,
  KeyCode as K,
  React as R,
  t$8 as a,
  a$9 as b,
  sharedFocus as c,
  c$f as d,
  o$b as e,
  reactDomExports as f,
  t$c as g,
  handleCloseModal as h,
  isChildElement as i,
  jsxRuntimeExports as j,
  keyframes$1 as k,
  m$7 as m,
  n$a as n,
  o$9 as o,
  presentModal as p,
  reactExports as r,
  styled$3 as s,
  t$9 as t,
  updateSwitchState as u
};
